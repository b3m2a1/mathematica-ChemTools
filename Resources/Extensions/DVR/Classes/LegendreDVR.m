(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



ChemDVRBegin[];


LegendreDVRPoints::usage="The Legendre eigensystem";
LegendreDVRK::usage="The Legendre kinetic energy";


Begin["`Private`"];


(* ::Subsubsection::Closed:: *)
(*Grid Points*)



(*legX[i_,j_]:=
Integrate[LegendreP[i,Cos[\[Theta]]]*Cos[\[Theta]]*LegendreP[j,Cos[\[Theta]]]*Sin[\[Theta]],{\[Theta],0,\[Pi]}]
legT=ParallelTable[Integrate[LegendreP[i,Cos[\[Theta]]]*Cos[\[Theta]]*LegendreP[j,Cos[\[Theta]]]*Sin[\[Theta]],{\[Theta],0,\[Pi]}],{i,50},{j,50}];
FindSequenceFunction[MapIndexed[#[[First[#2]+1]]&,Most@legT],i]
Table[
With[{ip=i-1,jp=j-1},
(2 (1+jp))/(3+8 jp+4 jp^2)KroneckerDelta[i+1,j]+
(2 (1+ip))/(3+8 ip+4 ip^2)KroneckerDelta[i,j+1]
],
{i,50},
{j,50}
]//MatrixForm*)


(*LegendreDVRPoints[{\[Theta]Points_},r_]:=
	With[{eig=
		Eigensystem@
			Table[
				With[{ip=i-1,jp=j-1},
					2.(1+jp)/(3+8 jp+4 jp^2)*KroneckerDelta[i+1,j]+
					2.(1+ip)/(3+8 ip+4 ip^2)*KroneckerDelta[i,j+1]
					],
				{i,\[Theta]Points},
				{j,\[Theta]Points}
				]
		},
		eig[[All,Ordering[First@eig]]]
		]*)


LegendreDVRPoints[{\[Theta]Points_}, rest___]:=
	With[
		{
			eig=
				Eigensystem@
					SparseArray[
						{
							Band[{2, 1}]->
								Table[Sqrt[i^2/((-1 + 2*i)*(1 + 2.*i))], {i, \[Theta]Points-1}],
							Band[{1, 2}]->
								Table[Sqrt[(1 + i)^2/((3 + 2*i)*(1 + 2.*i))], {i, \[Theta]Points-1}]
							}
						]
			},
			MapAt[ArcCos, eig[[All, Ordering[First@eig]]], {1, All}]
			]


(* ::Subsubsection::Closed:: *)
(*Kinetic Energy Matrix*)



(* ::Text:: *)
(*

	I can\[CloseCurlyQuote]t actually remember the derivation for this one...
		not good.
*)



Clear["LegendreDVRK"]
Options[LegendreDVRK]=
	{
		"Mass"->1,
		"HBar"->1,
		"ScalingFactor"->1,
		"UseExact"->False
		};
LegendreDVRK[eigensystem_,ops:OptionsPattern[]]:=
	With[
		{
			m=OptionValue["Mass"], \[HBar]=OptionValue@"HBar",
			s=OptionValue["ScalingFactor"], ex=TrueQ@OptionValue["UseExact"],
			T=Last@eigensystem, \[CapitalLambda]=First@eigensystem
			},
		Replace[
			s*\[HBar],
			Except[_?NumericQ]->1.
			]*
			Dot[T,
				If[ex,
					DiagonalMatrix@Array[(#-1)(#)&,Length[\[CapitalLambda]]],
					DiagonalMatrix@Array[N@(#-1)(#)&,Length[\[CapitalLambda]]]
					],
				Transpose@T
				]+
				If[ex,
					DiagonalMatrix@Map[m^2/(1-#^2)&,\[CapitalLambda]],
					DiagonalMatrix@N@Map[m^2/(1-#^2)&,\[CapitalLambda]]
					]
		]


End[];


$LegendreDVR=
	<|
		"Name"->"Legendre 1D",
		"Dimension"->1,
		"PointLabels"->{("\[Theta]"|"theta"|"Theta"|"Azimuthal"|"azimuthal")},
		"Range"->{{0,\[Pi]}},
		"Grid"->LegendreDVRPoints,
		"KineticEnergy"->LegendreDVRK,
		"Defaults"->
			{
				"PotentialFunction"->
					{"HinderedRotor", "WellNumber"->2}
				}
		|>


ChemDVREnd[];


$LegendreDVR



