(* ::Package:: *)

(* Autogenerated Package *)

ChemDVRBegin[];


ShellDVRK::usage="Returns the disk DVR kinetic energy matrix";


Begin["`Private`"];


(* ::Text:: *)
(*
	Pulled straight from CM
*)



Options[ShellDVRK]=
	{
		"HBar"->1,
		"Mass"->1,
		"MeshSpacing"->Automatic,
		"ScalingFactor"->1,
		Precision->MachinePrecision,
		"KineticEnergyElementFunction"->Automatic
		};
ShellDVRK[grid_, ops:OptionsPattern[]]:=
	Module[
		{
			qgrid=grid[[All, 1, 1]],
			jgrid=grid[[1, All, 2]],
			qpoints,
			jpoints,
			qops=Replace[Flatten@{ops}, (k_->{q_, ___}):>(k->q), 1],
			jops=Replace[Flatten@{ops}, (k_->{_, j_, ___}):>(k->j), 1],
			qke,
			jke,
			ke,
			hb=Replace[OptionValue["HBar"], {{_, _, h_, ___}:>h, l_List:>Mean[l]}],
			m=Replace[OptionValue["Mass"], {{_, _, h_, ___}:>h, l_List:>Mean[l]}],
			sf=Replace[OptionValue["ScalingFactor"], {{_, _, _, h_, ___}:>h, l_List:>Mean[l]}],
			eke,
			rg2,
			sj2
			},
			qke=ChemDVRDefaultKineticEnergy[qgrid, qops];
			jke=ChemDVRDefaultKineticEnergy[jgrid, qops];
			qpoints=Length@qgrid;
			jpoints=Length@jgrid;
			sj2=Sin[jgrid]^2;
			jke=
				KroneckerProduct[
					jke,
					IdentityMatrix[qpoints, SparseArray]
					];
			qke=
				KroneckerProduct[
					SparseArray[Band[{1, 1}]->1/sj2],
					qke
					];
			eke=
				KroneckerProduct[
					SparseArray[
						Band[{1, 1}]->(1+sj2)/sj2
						],
					IdentityMatrix[qpoints, SparseArray]
					];
			Plus[
				qke,
				jke,
				eke
				]
		]


End[];


$ShellDVR=
	<|
		"Name"->"Shell 2D",
		"Range"->
			N@{{0, 2\[Pi]}, {0, \[Pi]}},
		"Points"->
			{15, 15},
		"KineticEnergy"->
			ShellDVRK,
		"Defaults"->
			{
				"GridType"->
					{"AzimuthalSubdivision", "PolarSubdivision"},
				"KineticEnergyElementFunction"->
					{"ColbertMillerAzimuthal", "ColbertMillerPolar"},
				"PotentialFunction"->
					{
						{"HinderedRotor",   "WellNumber"->3 },
						{"HinderedHalfRotor", "EquilibriumBondLength"->3}
						},
				"PlotMode"->"Shell"
				}
		|>


ChemDVREnd[];


$ShellDVR



