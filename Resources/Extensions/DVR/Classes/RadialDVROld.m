(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



ChemDVRBegin[];


RadialDVRPoints::usage="Returns the radial DVR grid/array"
RadialDVRK::usage="Returns the radial DVR kinetic energy matrix"


Begin["`Private`"];


RadialDVRPoints[
	points:{_Integer},
	X:{{_?NumericQ,_?NumericQ}}:{{0,10}}
	]:=
	Subdivide@@Flatten@{N@X, points-1}


Options[RadialDVRK]=
	{
		"Mass"->1,
		"HBar"->1,
		"ScalingFactor"->1,
		"UseExact"->False
		};
RadialDVRK[grid_,ops:OptionsPattern[]]:=
With[{rmin=Min@grid,rmax=Max@grid,points=Length@grid},
		With[
			{
				dr=(rmax-rmin)/(points-1),
				m=OptionValue@"Mass",
				\[HBar]=OptionValue@"HBar",
				scl=OptionValue@"ScalingFactor",
				ex=TrueQ@OptionValue@"UseExact"
				},
			With[
				{
					f=
						If[ex,
							scl*
								If[#==#2, 
									\[Pi]^2./3.-1/#^2,
									2./(#-#2)^2-2./(#+#2)^2
									]*
									(\[HBar]^2.(-1)^(#-#2))/(2.m dr^2)&,
							scl*
								If[#==#2, 
									\[Pi]^2./3.-1/#^2,
									2./(#-#2)^2-2./(#+#2)^2
									]*
									(\[HBar]^2.(-1)^(#-#2))/(2.m dr^2)&
							]
					},
				If[points>100000,
					ParallelTable[f[i,j],{i,points},{j,points}],
					Table[f[i,j],{i,points},{j,points}]
					]
				]
			]
		]


End[];


$RadialDVR=
	<|
		"Name"->"Radial 1D",
		"Dimension"->1,
		"PointLabels"->{("r"|"R"|"radial")},
		"Range"->{{0,10}},
		"Grid"->RadialDVRPoints,
		"KineticEnergy"->RadialDVRK,
		"Defaults"->
			{
				"PotentialFunction"->"MorseOscillator",
				"PlotMode"->{"Cartesian", 1}
				}
		|>


ChemDVREnd[];


$RadialDVR



