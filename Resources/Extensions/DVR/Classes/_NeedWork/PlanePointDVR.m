(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



ChemDVRBegin[];


PlanePointDVRK::usage="The adjusted kinetic operator form of ProlateTopDVRK";
$PlanePointDVR::usage="The output association for class making";


ChemDVRNeeds/@{"SphericalDVR","LegendreDVR","RadialDVR","MeyerDVR"}


Begin["`Private`"];


cot\[Theta]d\[Theta]2Matrix[n_]:=
	Table[
		If[i==j,
			(-2 i^2*(1./(2i+1)))+(-((2.i)/(2i+1))),
			0.
			],
		{i,n},
		{j,n}
		];
d\[Theta]2Matrix[n_,\[Theta]grid_]:=
	Table[
		With[{qi=\[Theta]grid[[i]],qj=\[Theta]grid[[j]]},
			If[i==j,((n-1.)(n+2.)+(n^2+n+6)qi)/(3(1.-qi^2)^2),
				((2.qi)/((qi-qj)(1-qj^2))-2./(qi-qj)^2)Sqrt[((1-qj^2)/(1-qi^2))]
				]
			],
		{i,n},
		{j,n}
		];
d\[CurlyPhi]Matrix[n_]:=
	Table[
		If[i==j,
			0.,
			(-1)^(i-j)/(2.*Tan[(\[Pi](i-j))/n])
			],
		{i,n},
		{j,n}
		];
d\[CurlyPhi]2Matrix[n_]:=
	Table[
		If[i==j,
			-(1.) (1/2 n^2+1)/6,
			(-1)^(i-j) 1./(2Sin[(\[Pi](i-j))/n]^2)
			],
		{i,n},
		{j,n}
		];


Options[PlanePointDVRK]=
	Flatten[{
		Options[SphericalDVRK],
		"RotationalA"->10,
		"RotationalB"->3,
		"RotationalC"->1,
		"ReducedMass"->1,
		"\[HBar]"->1
		}];
PlanePointDVRK[grid_,ops:OptionsPattern[]]:=
	With[{
		T=Last@grid,
		X=DeleteDuplicates/@Transpose@Flatten[First@grid,Depth@First@grid-3]},
		With[{
			rX=X[[1]],\[Theta]X=X[[2]],\[Phi]X=X[[3]],
			rK=RadialDVRK[X[[1]]],\[Theta]K=LegendreDVRK[{X[[2]],T}],\[Phi]K=MeyerDVRK[X[[3]]]
			},
			With[{
				rN=Length@rK,\[Phi]N=Length@\[Phi]K,\[Theta]N=Length@\[Theta]K,
				\[HBar]=OptionValue@"\[HBar]",
				Am=OptionValue["RotationalA"],
				Bm=OptionValue["RotationalB"],
				Cm=OptionValue["RotationalC"],
				\[Mu]=OptionValue["ReducedMass"]},
				With[{
					rf=Function[k,1+Mod[Floor[(k-1)/\[Phi]N],rN]],
					ff=Function[k,1+Mod[k-1,\[Phi]N]],
					qf=Function[k,1+Floor[(k-1)/(rN*\[Phi]N)]],
					d2cotdmat=T.cot\[Theta]d\[Theta]2Matrix[\[Theta]N].(Transpose[T]),
					d\[Theta]2mat=d\[Theta]2Matrix[\[Theta]N,\[Theta]X],
					djmat=d\[CurlyPhi]Matrix[\[Phi]N],
					dj2mat=d\[CurlyPhi]2Matrix[\[Phi]N],
					n=rN*\[Phi]N*\[Theta]N
					},
					\[HBar]*ParallelTable[
							Block[
								{r,\[Phi],\[Theta],
								ri,rj,\[Phi]i,\[Phi]j,\[Theta]i,\[Theta]j,
								\[Delta]r,\[Delta]\[Phi],\[Delta]\[Theta],
								cos2\[CurlyPhi],d2\[Theta],d2\[Theta]cot\[Theta]d\[Theta],cot\[Theta],d2\[CurlyPhi],
								sin2\[CurlyPhi],csc\[Theta]2,d\[CurlyPhi],
								Aeff,Beff,Ceff,
								Jam2,Jm2,Jbm2Jcm2,
								\[Rho]r2},
								{ri,rj}={rf[i],rf[j]};r=rX[[ri]];\[Delta]r=KroneckerDelta[ri,rj];
								{\[Phi]i,\[Phi]j}={ff[i],ff[j]};\[Phi]=\[Phi]X[[\[Phi]i]];\[Delta]\[Phi]=KroneckerDelta[\[Phi]i,\[Phi]j];
								{\[Theta]i,\[Theta]j}={qf[i],qf[j]};\[Theta]=\[Theta]X[[\[Theta]i]];\[Delta]\[Theta]=KroneckerDelta[\[Theta]i,\[Theta]j];
								cos2\[CurlyPhi]=\[Delta]\[Phi]*Cos[2\[Phi]]; d2\[Theta]=d\[Theta]2mat[[\[Theta]i,\[Theta]j]]; d2\[Theta]cot\[Theta]d\[Theta]=d2cotdmat[[\[Theta]i,\[Theta]j]];
								cot\[Theta]=\[Delta]\[Theta]*Cot[\[Theta]];   d2\[CurlyPhi]=dj2mat[[\[Phi]i,\[Phi]j]];
								sin2\[CurlyPhi]=\[Delta]\[Phi]*Sin[2\[Phi]]; csc\[Theta]2=\[Delta]\[Theta]*Csc[\[Theta]]^2   ; d\[CurlyPhi]=djmat[[\[Phi]i,\[Phi]j]];
								Aeff=Am+\[Delta]r/(2*\[Mu]*r^2);
								Beff=Bm+\[Delta]r/(2*\[Mu]*r^2);
								Ceff=Cm+\[Delta]r/(2*\[Mu]*r^2);
								Jam2=\[Phi]K[[\[Phi]i,\[Phi]j]];Jm2=\[Theta]K[[\[Theta]i,\[Theta]j]];
								\[Rho]r2=rK[[ri,rj]]/(2*\[Mu]);
								Jbm2Jcm2=(
									cos2\[CurlyPhi](2d2\[Theta]-d2\[Theta]cot\[Theta]d\[Theta]-(cot\[Theta]^2)d2\[CurlyPhi])
									-sin2\[CurlyPhi](2(d2\[Theta]cot\[Theta]d\[Theta]-d2\[Theta])+(1-2csc\[Theta]2)d\[CurlyPhi]) 
								);
								(*Kinetic Operator*)
									( 
									(\[Delta]r*\[Delta]\[Theta])(Aeff-1/2(Beff+Ceff))Jam2
									+(\[Delta]\[Phi]*\[Delta]r)1/2(Beff+Ceff)Jm2
									+(\[Delta]r*\[Delta]\[Phi]*\[Delta]\[Theta])1/2(Beff-Ceff)Jbm2Jcm2
									+(\[Delta]\[Phi]*\[Delta]\[Theta])\[Rho]r2
									)
								],
							{i,n},
							{j,n}
						]
					]
				]
			]
		];


End[];


ChemDVREnd[];


$PlanePointDVR=
	ReplacePart[$SphericalDVR,
		{
			"Name"->"Plane Point",
			"KineticEnergy"->PlanePointDVRK
			}]



