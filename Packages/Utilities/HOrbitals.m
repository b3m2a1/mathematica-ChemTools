(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



ChemHQuantumNumbers::usage=
	"Gives quantum numbers for an orbital configuration";
ChemHAngularWavefunction::usage=
	"Returns the angular part of the orbital wavefunction";
ChemHAngularWavefunctionPlot::usage=
	"Spherical plots the angular wavefunction";
ChemHRadialWavefunction::usage=
	"Computes the radial part of the orbital wavefunction";
ChemHOrbital::usage=
	"Computes the input orbital";
ChemHOrbitalPlot::usage="Plots the orbital";


ChemHOrbitalSurface::usage="Computes the surface of a H orbital";
ChemHOrbitalVolume::usage="Computes the volume of an H orbital";


Begin["`Private`"];


(* ::Subsection:: *)
(*H-Orbitals*)



(* ::Subsubsection::Closed:: *)
(*Quantum Numbers*)



ChemHQuantumNumbers[primary_String,sub_String:""]:=
	Replace[
		{ToLowerCase@primary,ToLowerCase@sub},{
			{"s",""}->{0,0},
			{"p","x"}->{1,-1},
			{"p","z"|""}->{1,0},
			{"p","y"}->{1,1},
			{"d","xy"}->{2,-2},
			{"d","xz"}->{2,-1},
			{"d","z"|""}->{2,0},
			{"d","yz"}->{2,1},
			{"d","x-y"}->{2,2},
			{"f","z"|""}->{3,0},
			_->$Failed
			}
		];
ChemHQuantumNumbers[m_Integer, l_Integer]:={m, l};


(* ::Subsubsection::Closed:: *)
(*Angular*)



sphericalHarmonic[{l_Integer,m_Integer:0}]:=
	If[l>=0,
		Evaluate[SphericalHarmonicY[l,m,#,#2]]&,
		Evaluate[-SphericalHarmonicY[-l,-m,#,#2]]&
		];


harmonicCombination[k:_Real|_Complex:1,harmonics__List]:=
	With[{f=k*(
		Total@(
			Table[sphericalHarmonic[h][#,#2],{h,{harmonics}}])/Sqrt@Length@{harmonics})
			},
		f&
		];


angularWavefunction[l_,m_]:=
	Evaluate@
		Which[
			m==0,
				sphericalHarmonic[{l, 0}][#, #2],
			m>0,
				1/Sqrt[2](
					sphericalHarmonic[{l, m}][#, #2]+
						(-1)^m sphericalHarmonic[{l, -m}][#, #2]
					),
			m<0,
				-I/Sqrt[2](
					sphericalHarmonic[{l, -m}][#, #2]-
						(-1)^m sphericalHarmonic[{l, m}][#, #2]
					),
			True,
				sphericalHarmonic[{l, m}][#, #2]
			]&


ChemHAngularWavefunction[l_Integer, m_Integer]:=
	angularWavefunction[l,m];
ChemHAngularWavefunction[l_String,m_String:""]:=
	angularWavefunction@@ChemHQuantumNumbers[l,m];


(*ChemHAngularWavefunction["s"]:=
	sphericalHarmonic[{0, 0}];
ChemHAngularWavefunction["p","x"]:=
	sphericalHarmonic[{1, -1}] -
		sphericalHarmonic[{1, 1}];
ChemHAngularWavefunction["p", "x"]:=
	sphericalHarmonic[{1, -1}] -
		sphericalHarmonic[{1, 1}]*)


(* ::Subsubsection::Closed:: *)
(*Radial*)



bohrRadius=
	QuantityMagnitude@UnitConvert[Quantity["BohrRadius"],"Angstroms"];


radialWavefunction[n_,l_,Z_Integer:1]:=
	Evaluate[
		(Sqrt[(n-l-1)!/(2*n*((n+l)!)^3)])*
		((2Z/(n*bohrRadius))^(l+3/2))*
		(#^l)Exp[-Z#/(n*bohrRadius)]*
		LaguerreL[n+l-1,2l+1,2Z #/(n*bohrRadius)]
		]&


ChemHRadialWavefunction[n_Integer,l_Integer,Z_Integer:1]:=
	radialWavefunction[n,l,Z];
ChemHRadialWavefunction[l_String,m_String:"",Z_Integer:1]:=
	radialWavefunction@@
		Replace[ChemHQuantumNumbers[l,m],{a_,b_}:>{a+1,a,Z}];


(* ::Subsubsection::Closed:: *)
(*Combined*)



ChemHOrbital//Clear


ChemHOrbital[n:_Integer|Automatic:Automatic,l_Integer,m_Integer]:=
	With[{qn=Replace[n,Automatic->l+1]},
		With[{
			f=radialWavefunction[qn,l][#],
			f2=angularWavefunction[l,m][#2,#3]},
			f*f2&
			]
		];
ChemHOrbital[n:_Integer|Automatic:Automatic,l_String,m_String:""]:=
	ChemHOrbital[n,Sequence@@ChemHQuantumNumbers[l,m]];


(* ::Subsubsection::Closed:: *)
(*AngularOrbitalPlot*)



ChemHAngularWavefunctionPlot//Clear


Options[ChemHAngularWavefunctionPlot]=
	Join[
		{
			ColorFunctionScaling->Automatic
			},
		Options[ParametricPlot3D],
		{
			"PlotSquare"->True
			}
		];
ChemHAngularWavefunctionPlot[
	qns:{m_Integer|_String,l_},
	r:_?NumericQ:1,
	center:{_?NumericQ,_,_}:{0,0,0},
	ops:OptionsPattern[]
	]:=
	With[{qn=ChemHQuantumNumbers[m,l]},
		With[{wfn=ChemHAngularWavefunction[Sequence@@qn]},
			ParametricPlot3D[
				center+r*Power[wfn[\[Theta], \[Phi]], If[OptionValue["PlotSquare"]//TrueQ, 2, 1]]*{
					Sin[\[Theta]]*Cos[\[Phi]],
					Sin[\[Theta]]*Sin[\[Phi]],
					Cos[\[Theta]]
					}//Evaluate,
				{\[Theta], 0, \[Pi]},
				{\[Phi], 0, 2\[Pi]},
				ColorFunction->
					Replace[OptionValue[ColorFunction],
						Automatic:>
							With[
								{
									baseCols=
										Replace[OptionValue[PlotStyle],{
											c:(_?ColorQ|_Directive|_Opacity)|
													{(_?ColorQ|_Directive|_Opacity)..}:>
												Flatten@ConstantArray[c, 2],
											_->{Red, Blue}
											}]
									},
								Function@
									If[r*wfn[#4, #5]>0,
										baseCols[[1]], 
										baseCols[[2]]
										]
								]
						],
				ColorFunctionScaling->
					Replace[
						OptionValue[ColorFunctionScaling],
						Except[True]:>
							Replace[OptionValue[ColorFunction],
								Automatic->False
								]
						],
				PlotStyle->
					Replace[OptionValue[PlotStyle],
						Automatic->Red
						],
				Sequence@@
					FilterRules[{ops}, Options@ParametricPlot3D]//Evaluate,
				PlotRange->All
				]
			]
		];
ChemHAngularWavefunctionPlot[
	states:{
		{_Integer|_String,_}..
		},
	r:_?NumericQ:1,
	center:{_?NumericQ,_,_}:{0,0,0},
	ops:OptionsPattern[]
	]:=
	MapIndexed[
		ChemHAngularWavefunctionPlot[#,
			r,
			center,
			ColorFunction->
				Replace[OptionValue[ColorFunction],{
						i:{__}:>i[[Mod[#2[[1]], Length[i], 1]]]
					}],
			PlotStyle->
				Replace[OptionValue[PlotStyle],{
						i:{__}:>RotateLeft[i, #2[[1]]-1]
					}],
			ops
			]&,
		states
		];
ChemHAngularWavefunctionPlot[
	type:_Integer|"s"|"p"|"d"|_String?(StringMatchQ[LetterCharacter?LowerCaseQ]),
	r:_?NumericQ:1,
	center:{_?NumericQ,_,_}:{0,0,0},
	ops:OptionsPattern[]
	]:=
	With[
		{
			l=
				Switch[type, 
					_Integer,
						type,
					"s", 0, "p", 1, "d", 2, "f", 3,
					_String,
						LetterNumber[type]-
							LetterNumber["f"]
					]
			},
		ChemHAngularWavefunctionPlot[
			Table[
				{l, ml},
				{ml, -l, l}
				],
			r,
			center,
			ops
			]
		];


(* ::Subsubsection::Closed:: *)
(*DensityPlot3D*)



ChemHOrbitalPlot[
	{n_,m_,l_},
	densityCutoff:_Real|Automatic:Automatic,
	DensityPlot3D,
	radial:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
	azimuthal:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
	polar:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
	o:OptionsPattern[Options@DensityPlot3D]]:=
	With[{c2s=
		CoordinateTransform["Cartesian"->"Spherical",{#,#2,#3}],
		rRange=Replace[radial,Automatic:>{0,n+1.25}],
		qRange=Replace[azimuthal,Automatic->{0,2\[Pi]}],
		jRange=Replace[polar,Automatic->{0,\[Pi]}]},
	With[{
		f=ChemHOrbital[n,m,l]@@(c2s&[\[Rho],\[Theta],\[CurlyPhi]]),
		rf=With[{r=Last@rRange},(#\[Element]Ball[{0,0,0},r]&)],
		opf=
			If[densityCutoff=!=Automatic,
				(If[#>densityCutoff,1,0]&),
				(If[#<.5,#/2,Mean@{#,1},Mean@{#,0}]&)
				]},
		DensityPlot3D[
			Abs[f]^2,
			Evaluate@
				If[rRange[[1]]==0&&qRange=={0,2\[Pi]}&&jRange=={0,\[Pi]},
					With[{r=Last@rRange},
						{\[Rho],\[Theta],\[CurlyPhi]}\[Element]Ball[{0,0,0},r]],
					Sequence@@
						{
							{\[Rho],-Last@rRange,Last@rRange},
							{\[Theta],-Last@qRange,Last@qRange},
							{\[CurlyPhi],-Last@jRange,Last@jRange}
							}
				],
			o,
			PlotRange->All,
			Boxed->False,
			(*RegionFunction\[Rule]rf,*)
			OpacityFunction->opf,
			Axes->False,
			AxesOrigin->{0,0,0}
			MeshFunctions->(Function/@c2s)
			]
		]
		];


(* ::Subsubsection::Closed:: *)
(*ContourPlot3D*)



ChemHOrbitalPlot[
		{n_,m_,l_},
		contourValue:_Real|Automatic:Automatic,
		ContourPlot3D,
		radial:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		azimuthal:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		polar:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		o:OptionsPattern[Options@ContourPlot3D]
		]:=
	With[{c2s=
		CoordinateTransform["Cartesian"->"Spherical",{#,#2,#3}],
		rRange=Replace[radial,Automatic:>{0,n+1.25}],
		qRange=Replace[azimuthal,Automatic->{0,2\[Pi]}],
		jRange=Replace[polar,Automatic->{0,\[Pi]}]},
	With[{
		rf=With[{r=Last@rRange},(#\[Element]Ball[{0,0,0},r]&)],
		f=ChemHOrbital[n,m,l]@@(c2s&[\[Rho],\[Theta],\[CurlyPhi]])
		},
		Quiet@ContourPlot3D[
			Evaluate@
				If[contourValue===Automatic,
					Abs[f]^2,
					Abs[f]^2==contourValue
					],
			{\[Rho],-Last@rRange,Last@rRange},
			{\[Theta],-Last@qRange,Last@qRange},
			{\[CurlyPhi],-Last@jRange,Last@jRange},
			o,
			Contours->1,
			Lighting->"Neutral",
			ContourStyle->Directive[Hue[.5,.4,.3],Specularity[White,500]],
			PlotPoints->20,
			PlotRange->All,
			Boxed->False,
			Axes->False,
			AxesOrigin->{0,0,0},
			MeshFunctions->(Function/@c2s),
			MeshStyle->None
			]
		]
		];


(* ::Subsubsection::Closed:: *)
(*RegionPlot3D*)



ChemHOrbitalPlot[
		{n_,m_,l_},
		cutoff:_Real:.0005,
		Optional[RegionPlot3D,RegionPlot3D],
		radial:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		azimuthal:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		polar:{_?NumericQ,_?NumericQ}|Automatic:Automatic,
		o:OptionsPattern[Options@ContourPlot3D]
		]:=
	With[{c2s=
		CoordinateTransform["Cartesian"->"Spherical",{#,#2,#3}],
		rRange=Replace[radial,Automatic:>{0,n+1.25}],
		qRange=Replace[azimuthal,Automatic->{0,2\[Pi]}],
		jRange=Replace[polar,Automatic->{0,\[Pi]}]},
	With[{
		rf=With[{r=Last@rRange},(#\[Element]Ball[{0,0,0},r]&)],
		f=ChemHOrbital[n,m,l]@@(c2s&[\[Rho],\[Theta],\[CurlyPhi]])
		},
		Quiet@RegionPlot3D[
			Abs[f]^2>cutoff,
			{\[Rho],-Last@rRange,Last@rRange},
			{\[Theta],-Last@qRange,Last@qRange},
			{\[CurlyPhi],-Last@jRange,Last@jRange},
			o,
			Lighting->"Neutral",
			PlotStyle->Directive[Hue[.5,.4,.3],Specularity[White,500]],
			PlotPoints->20,
			PlotRange->All,
			Boxed->False,
			Axes->False,
			AxesOrigin->{0,0,0},
			MeshFunctions->(Function/@c2s),
			MeshStyle->None
			]
		]
		];


(* ::Subsubsection::Closed:: *)
(*General plot*)



ChemHOrbitalPlot[s__String,a:Except[_String]...]:=
	ChemHOrbitalPlot[
		Replace[ChemHQuantumNumbers[s],
			{l_,m_}:>{l+1,l,m}],
		a
		];


(* ::Subsubsection::Closed:: *)
(*OrbitalSurface*)



ChemHOrbitalSurface[{n_,l_,m_},cutoff_Real:.001]:=
	ChemSurface@ChemHOrbitalPlot[{n,l,m},cutoff,RegionPlot3D];
ChemHOrbitalSurface[l_String,m_String:"",cutoff_Real:.001]:=
	ChemSurface@ChemHOrbitalPlot[l,m,cutoff,RegionPlot3D];


(* ::Subsubsection::Closed:: *)
(*OrbitalVolume*)



ChemHOrbitalVolume[s_?RegionQ]:=
	Quantity[
		With[
			{coords = MeshCoordinates[s]},
			With[{
				compiledDotCross=
					Compile[{{abc,_Integer,1}},
						coords[[ abc[[1]] ]].
								Cross[coords[[ abc[[2]] ]], coords[[ abc[[3]] ]]]
						]
					},
				(MeshCells[s, 2]/.Polygon[g_List] :> compiledDotCross@g)
					//Total
				]/6
			],
		"Angstroms"^3
		];


ChemHOrbitalVolume[s__]:=
	ChemHOrbitalVolume@
		ChemHOrbitalSurface[s];	


End[];



