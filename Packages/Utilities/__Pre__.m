(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Text:: *)
(*
	A preloaded file before any of the other files are imported.
	Get is run on it rather than the standard declaration scraping procedure.
*)



If[!TrueQ[`Private`$ImportsRegistered],
(*
	MolTables
	*)
ImportExport`RegisterImport[
	"MolTable",
	ChemImportMolTable,
	"FunctionChannels"->{"Streams"}
	];
ImportExport`RegisterImport[
	"ZMatrix",
	ChemImportZMatrix,
	"FunctionChannels"->{"Streams"}
	];
(*
	Objects
	*)
ImportExport`RegisterImport[
	"ChemObject",
	ChemImportObject
	];
(*
	CubeFiles
	*)
Map[
	ImportExport`RegisterImport[
		"CubeFile",
		{
			"Association":>
				Function[
					{"Association"->CubeFileGrid@CubeFileRead[##]}
					],
			"Grid":>
				Function[
					{"Grid"->CubeFileGrid@CubeFileRead[##]}
					],
			"InterpolatingFunction":>
				Function[
					{"InterpolatingFunction"->CubeFileFunction@CubeFileRead[##]}
					],
			"Elements":>
				Function[{"Elements"->{"Association", "Grid", "InterpolatingFunction"}}],
			CubeFileRead
			},
		"FunctionChannels"->{"Streams"}
		]&,
	{"cube", "CubeFile"}
	];
(* 
	GJF
	*)
Map[
	ImportExport`RegisterImport[
		#,
		{
			"MolTable":>
				Function[{"MolTable"->ImportGaussianJob[#, "MolTable"]}],
			"Elements":>
				Function[{"Elements"->{"MolTable"}}],
			ImportGaussianJob
			}
		]&,
	{"GJF", "GaussianJob"}
	];
(* 
	FChk
	*)
Map[
	ImportExport`RegisterImport[
		#,
		{
			"MolTable":>
				Function[{"MolTable"->ImportFormattedCheckpointFile[#, "MolTable"]}],
			"Elements":>
				Function[{"Elements"->{"MolTable"}}],
			ImportFormattedCheckpointFile
			},
		"FunctionChannels"->{"Streams"}
		]&,
	{"FCHK", "FormattedCheckpoint"}
	];
(* 
	Scan
	*)
Map[
	ImportExport`RegisterImport[
		#,
		{
			"MolTable":>
				Function[{"MolTable"->ImportGaussianScan[#, "MolTable"]}],
			"Elements":>
				Function[{"Elements"->{"MolTable"}}],
			ImportGaussianScan
			},
		"FunctionChannels"->{"Streams"}
		]&,
	{"GaussianScan"}
	];
`Private`$ImportsRegistered=True
];



