Notebook[{

Cell[CellGroupData[{
Cell["Wavefunctions", \
"CodeSection",ExpressionUUID->"ce12fc74-14d9-4140-b8eb-f0dcebd187a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultPrepareHamiltonian", "::", "usage"}], "=", "\n", 
   RowBox[{
    RowBox[{"ChemDVRDefaultWavefunctions", "::", "usage"}], "=", 
    "\"\<\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultExtendWavefunctions", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridWavefunctions", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultInterpolatingWavefunctions", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultExpectationValues", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrix", "::", "usage"}], "=", "\"\<\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrixElements", "::", "usage"}], "=", 
   "\"\<\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"648d799f-64d0-4bf1-864c-cb9c7b6283bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"0e55d644-7d11-4200-87af-\
275b741b17e2"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WavefunctionSelection\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7314328449319057`*^9, 
  3.731432847539864*^9}},ExpressionUUID->"39673ad7-3a4a-40ad-ba48-\
c962311a84f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
   RowBox[{"s_", ",", " ", "len_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"s", ">=", "1"}], ",", " ", "\n", "\t\t\t", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
    RowBox[{"s", "==", "0"}], ",", "\n", "\t\t\t", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
    RowBox[{"s", "<", "0"}], ",", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"Ceiling", "[", 
      RowBox[{"s", "*", "len"}], "]"}], ";;"}], ",", "\n", "\t\t", "True", 
    ",", "\n", "\t\t\t", 
    RowBox[{";;", 
     RowBox[{"Floor", "[", 
      RowBox[{"s", "*", "len"}], "]"}]}]}], " ", "\n", "\t\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.732423489260847*^9, 3.732423517468217*^9}, {
  3.73242373378449*^9, 3.732423752340508*^9}, {3.732424010043816*^9, 
  3.7324240110646477`*^9}},ExpressionUUID->"622e24b7-7e89-41a5-b2e7-\
85b575a7f095"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\<WavefunctionSelection\>\"", "\[Rule]", "All"}], "\n", "\t\t",
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
    RowBox[{"wfs_", ",", " ", "\n", "\t", 
     RowBox[{"sel", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"_", "?", "OptionQ"}], "]"}]}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"sel", "=!=", "All"}], ",", "\n", "\t\t", 
     RowBox[{"wfs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "\n", "\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"sel", ",", "\n", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"i_Integer", "?", "Positive"}], "\[RuleDelayed]", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", ">", 
                RowBox[{"Length", "@", 
                 RowBox[{"wfs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", "All", ",", 
               " ", 
               RowBox[{";;", "i"}]}], "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"i_Integer", "?", "Negative"}], "\[RuleDelayed]", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "i"}], ">", 
                RowBox[{"Length", "@", 
                 RowBox[{"wfs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", "All", ",", 
               " ", 
               RowBox[{"i", ";;"}]}], "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"s_", "?", "NumericQ"}], "]"}], ":>", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
              RowBox[{"s", ",", " ", 
               RowBox[{"Length", "@", 
                RowBox[{"wfs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"min_", "?", "NumericQ"}], ",", " ", 
                RowBox[{"max_", "?", "NumericQ"}]}], "}"}], "]"}], ":>", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"minMax", "=", 
                 RowBox[{"Sort", "@", 
                  RowBox[{"{", 
                   RowBox[{"min", ",", " ", "max"}], "}"}]}]}], "}"}], ",", 
               "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"Replace", "[", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
                    RowBox[{
                    RowBox[{"minMax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"Length", "@", 
                    RowBox[{"wfs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
                    RowBox[{
                    RowBox[{"minMax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"Length", "@", 
                    RowBox[{"wfs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\n", 
                  "\t\t\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "}"}], ":>", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M_", ";;"}], ",", " ", 
                    RowBox[{";;", "m_"}]}], "}"}], "|", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m_", ";;"}], ",", " ", 
                    RowBox[{"M_", ";;"}]}], "}"}], "|", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{";;", "m_"}], ",", " ", 
                    RowBox[{";;", "M_"}]}], "}"}]}], "\[RuleDelayed]", 
                    RowBox[{"m", ";;", "M"}]}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", "e_", "}"}], "\[RuleDelayed]", "e"}]}], "\n",
                   "\t\t\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t\t\t", 
                "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"e", ":", 
              RowBox[{"Except", "[", 
               RowBox[{"_Span", "|", "All", "|", 
                RowBox[{"{", "__Integer", "}"}]}], "]"}]}], ":>", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
              "Automatic", ",", "\n", "\t\t\t\t\t\t\t", 
               "\"\<Wavefunction selection spec `` couldn't be processed\>\"",
                ",", "\n", "\t\t\t\t\t\t\t", "e"}], "\n", "\t\t\t\t\t\t\t", 
              "]"}]}]}], "\n", "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", 
         "]"}]}], "\n", "\t\t\t", "]"}], "]"}], ",", "\n", "\t\t", "wfs"}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
   RowBox[{"wfs_", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
   RowBox[{"wfs", ",", "\n", "\t\t", 
    RowBox[{"OptionValue", "[", "\"\<WavefunctionSelection\>\"", "]"}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"55eaed55-a8ed-49ec-ae8b-e40be7635b13"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPrepareHamiltonian\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,ExpressionUUID->"7b51baa6-f0ac-4439-a6cb-229c12d9c02c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultPrepareHamiltonian", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "True"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", "None"}], ",", "\n", "\t\t", 
     
     RowBox[{"\"\<HamiltonianRounding\>\"", "\[Rule]", "None"}]}], "\n", 
    "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultPrepareHamiltonian", "[", 
   RowBox[{"T_", ",", " ", "V_", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"prune", "=", 
       RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], ",", 
      "\n", "\t\t\t", "vDiag", ",", "\n", "\t\t\t", "prunePos", ",", "\n", 
      "\t\t\t", "fullLen", ",", "\n", "\t\t\t", 
      RowBox[{"round", "=", 
       RowBox[{"OptionValue", "[", "\"\<HamiltonianRounding\>\"", "]"}]}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"keMat", "=", 
       RowBox[{"ReleaseHold", "@", "T"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"peMat", "=", 
       RowBox[{"ReleaseHold", "@", "V"}]}], ",", "\n", "\t\t\t", "ham", ",", 
      "\n", "\t\t\t", 
      RowBox[{"validate", "=", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<ValidateHamiltonian\>\"", "]"}], "=!=",
         "False"}]}], ",", "\n", "\t\t\t", "hermCut"}], "\n", "\t\t\t", "}"}],
     ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "keMat", "]"}]}], "||", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{"validate", "&&", 
          RowBox[{"!", 
           RowBox[{"MatrixQ", "[", 
            RowBox[{"keMat", ",", " ", "Internal`RealValuedNumericQ"}], 
            "]"}]}]}], ")"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "Automatic", ",", "\n", "\t\t\t\t", 
         "\"\<The kinetic energy is not a square numerical matrix\>\""}], 
        "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "peMat", "]"}]}], "||", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{"validate", "&&", 
          RowBox[{"!", 
           RowBox[{"MatrixQ", "[", 
            RowBox[{"peMat", ",", " ", "Internal`RealValuedNumericQ"}], 
            "]"}]}]}], ")"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "Automatic", ",", "\n", "\t\t\t\t", 
         "\"\<The potential energy is not a square numerical matrix\>\""}], 
        "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"ham", "=", 
      RowBox[{"keMat", "+", "peMat"}]}], ";", "\n", "\t\t", 
     RowBox[{"fullLen", "=", 
      RowBox[{"Length", "@", "ham"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "ham", "]"}]}], "||", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{"validate", "&&", 
          RowBox[{"!", 
           RowBox[{"MatrixQ", "[", 
            RowBox[{"ham", ",", " ", "Internal`RealValuedNumericQ"}], 
            "]"}]}]}], ")"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "Automatic", ",", "\n", "\t\t\t\t", 
         "\"\<The Hamiltonian is not a square numerical matrix\>\""}], "\n", 
        "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ";", " ", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericQ", "@", "prune"}], "||", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"prune", ",", " ", 
          RowBox[{"Scaled", "[", 
           RowBox[{"_", "?", "NumericQ"}], "]"}]}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"vDiag", "=", 
         RowBox[{"Normal", "@", 
          RowBox[{"Diagonal", "[", 
           RowBox[{"ReleaseHold", "@", "V"}], "]"}]}]}], ";", "\n", "\t\t\t", 
        
        RowBox[{"prune", "=", "\n", "\t\t\t\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"prune", ",", " ", "\n", "\t", "\t\t\t\t", 
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"i_", "?", "NumericQ"}], "\[RuleDelayed]", 
              RowBox[{"Rescale", "[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"MinMax", "@", "vDiag"}]}], "]"}]}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", "s"}]}], 
            "\n", "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ";", 
        "\n", "\t\t\t", 
        RowBox[{"vDiag", "=", 
         RowBox[{"Rescale", "[", "vDiag", "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"prunePos", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"vDiag", ",", " ", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", ">", "prune"}], "&"}], ")"}]}], ",", " ", "1"}], 
           "]"}]}]}], ";", "\n", "\t\t\t", 
        RowBox[{"ham", "=", "\n", "\t\t\t\t", 
         RowBox[{"ham", "[", 
          RowBox[{"[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "ham"}], "]"}], ",", " ", "prunePos"}], 
             "]"}], ",", " ", "\n", "\t\t\t\t\t", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "ham"}], "]"}], ",", " ", "prunePos"}], 
             "]"}]}], "\n", "\t\t\t\t\t", "]"}], "]"}]}], ";"}]}], "\n", 
      "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"round", ">", "1"}], ",", " ", 
       RowBox[{"round", "=", 
        RowBox[{"10", "^", 
         RowBox[{"-", "round"}]}]}]}], "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"NumericQ", "@", "round"}], ",", " ", 
       RowBox[{"ham", "=", 
        RowBox[{"Round", "[", 
         RowBox[{"ham", ",", " ", 
          RowBox[{"N", "@", "round"}]}], "]"}]}]}], "]"}], ";", "\n", "\t\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"validate", "&&", 
        RowBox[{"!", 
         RowBox[{"HermitianMatrixQ", "@", "ham"}]}]}], ",", " ", "\n", 
       "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"HermitianMatrixQ", "[", 
          RowBox[{"ham", ",", " ", 
           RowBox[{"Tolerance", "\[Rule]", 
            RowBox[{"10", "^", 
             RowBox[{"-", "7"}]}]}]}], "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"hermCut", "=", "\n", "\t\t\t\t\t", 
           RowBox[{"SelectFirst", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Range", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Floor", "@", "$MachinePrecision"}], ",", "\n", 
               "\t\t\t\t\t\t\t", "7", ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"-", "1"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], ",", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"HermitianMatrixQ", "[", 
               RowBox[{"ham", ",", " ", 
                RowBox[{"Tolerance", "\[Rule]", 
                 RowBox[{"10", "^", 
                  RowBox[{"-", "#"}]}]}]}], "]"}], "&"}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
           "Automatic", ",", "\n", "\t", "\t\t\t\t", 
            "\"\<Hamiltonian isn't Hermitian. \\\nNumerical instability may \
have introduced lack of hermiticity. \\\nTry passing \
\\\"HamiltonianRounding\\\"->``.\>\"", ",", "\n", "\t\t\t\t\t", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"c", "=", "hermCut"}], "}"}], ",", " ", 
              RowBox[{"HoldForm", "[", 
               RowBox[{"10", "^", 
                RowBox[{"-", "c"}]}], "]"}]}], "]"}]}], "\n", "\t\t\t\t\t", 
           "]"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{
         "PackageRaiseException", "@", "\n", "\t\t\t\t\t", 
          "\"\<Hamiltonian is neither Hermitian nor approximately Hermitian\>\
\""}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ";", " ", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{"ham", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "@", "prunePos"}], ",", " ", "prunePos", ",", " ", 
           RowBox[{"{", "}"}]}], "]"}], ",", " ", "fullLen"}], "}"}]}], 
      "}"}]}]}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"97ec6d63-42ea-4eef-8efa-896351ec533c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultWavefunctions\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,ExpressionUUID->"76843220-7806-415f-a772-de79c02cd6a1"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"eae8dff5-cac3-4372-a843-ac7e09517c10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultWavefunctions", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Options", "[", "WFEigensystem", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultWavefunctions", "[", 
    RowBox[{"T_", ",", " ", "V_", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"WFEigensystem", "[", 
    RowBox[{"T", ",", " ", "V", ",", " ", "ops"}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"b93e39a8-ea03-4b90-9d91-5eb5d82de70e"]\

}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExtendWavefunctions\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,ExpressionUUID->"e07d38ec-7ecd-430c-a719-4649bccbc0fa"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefaultExtendWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4b184121-c314-4f6f-9a35-86faaae0c28e"],

Cell["\<\
\[LeftCeiling]
\tAttempt to figure out where the new eigenvalues should be built from.
\t
\tA future version should try to apply some clever \[OpenCurlyQuote]chunking\
\[CloseCurlyQuote] or something.
\t\tBasically if no new eigenvalues would be generated (or too few) apply the \
process iteratively.
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"a9551975-4142-4c39-9005-835fde4efd9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "iChemDVRDefaultExtendWavefunctions", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Options", "[", "ChemDVRDefaultWavefunctions", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"iChemDVRDefaultExtendWavefunctions", "[", "\n", "\t", 
   RowBox[{
   "T_", ",", "\n", "\t", "V_", ",", " ", "\n", "\t", "wfns_", ",", "\n", 
    "\t", "n_", ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"eigNum", "=", "n"}], ",", "\n", "\t\t\t", 
      RowBox[{"engs", "=", 
       RowBox[{"wfns", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t\t", "mengPos", ",",
       " ", "meng", ",", "\n", "\t\t\t", "engLen", ",", " ", "lastN", ",", 
      " ", "\n", "\t\t\t", "targetEstimator", ",", "\n", "\t\t\t", 
      RowBox[{"targetE", "=", 
       RowBox[{"OptionValue", "[", "\"\<TargetEigenvalue\>\"", "]"}]}], ",", 
      " ", "guessWf", ",", "\n", "\t\t\t", "newEngs", ",", " ", "newWfs", ",",
       "\n", "\t\t\t", "new", ",", " ", "orderNew"}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"mengPos", "=", 
      RowBox[{
       RowBox[{"Ordering", "[", 
        RowBox[{"engs", ",", " ", "1"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"meng", "=", 
      RowBox[{"engs", "[", 
       RowBox[{"[", "mengPos", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"NumericQ", "@", "targetE"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"engLen", "=", 
         RowBox[{"Min", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "engs", "]"}], ",", " ", 
            RowBox[{"Max", "@", 
             RowBox[{"{", 
              RowBox[{"n", ",", " ", "5"}], "}"}]}]}], "}"}]}]}], ";", "\n", 
        "\t", "\t\t", 
        RowBox[{"lastN", "=", 
         RowBox[{"engs", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "engLen"}], ";;"}], "]"}], "]"}]}], ";", "\n", "\t", 
        "\t\t", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{"engLen", ">", "3"}], ",", "\n", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{"targetEstimator", "=", "\n", "\t", "\t\t\t\t", 
            RowBox[{"Table", "[", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"LinearModelFit", "[", 
               RowBox[{"lastN", ",", " ", 
                SuperscriptBox["\[FormalN]", 
                 RowBox[{"Range", "[", "m", "]"}]], ",", " ", "\[FormalN]"}], 
               "]"}], ",", "\n", "\t", "\t", "\t\t\t\t", 
              RowBox[{"{", 
               RowBox[{"m", ",", " ", "3"}], "}"}]}], "\n", "\t", "\t", 
             "\t\t\t\t", "]"}]}], ";", "\n", "\t", "\t\t\t", 
           RowBox[{"targetEstimator", "=", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"MaximalBy", "[", 
               RowBox[{"targetEstimator", ",", " ", 
                RowBox[{
                 RowBox[{"#", "[", "\"\<RSquared\>\"", "]"}], "&"}]}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Function\>\"", 
             "]"}]}]}], ",", "\n", "\t", "\t\t\t", 
          RowBox[{"engLen", ">", "1"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"targetEstimator", "=", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Evaluate", "[", 
             RowBox[{"Fit", "[", 
              RowBox[{"lastN", ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "#"}], "}"}], ",", " ", "#"}], "]"}], 
             "]"}], "&"}]}], ",", "\n", "\t", "\t\t\t", "True", ",", "\n", 
          "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"eigNum", "++"}], ";", "\n", "\t", "\t\t\t\t", 
           RowBox[{"targetEstimator", "=", 
            RowBox[{"meng", "&"}]}], ";"}]}], "\n", "\t", "\t\t\t", "]"}], 
        ";", "\n", "\t", "\t\t", 
        RowBox[{"targetE", "=", 
         RowBox[{"targetEstimator", "[", 
          RowBox[{"engLen", "+", "1"}], "]"}]}]}]}], "\n", "\t\t\t", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"guessWf", "=", 
      RowBox[{"wfns", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", " ", "mengPos"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", "\n", "\t\t\t", 
      RowBox[{"ChemDVRDefaultWavefunctions", "[", "\n", "\t\t\t\t", 
       RowBox[{"T", ",", " ", "V", ",", " ", "\n", "\t\t\t\t", 
        RowBox[{"\"\<NumberOfWavefunctions\>\"", "->", "n"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"\"\<PreadjustHamiltonian\>\"", "\[Rule]", "True"}], ",", 
        "\n", "\t", "\t", "\t\t", 
        RowBox[{"\"\<ArnoldiGuessWavefunction\>\"", "->", "guessWf"}], ",", 
        "\n", "\t\t\t\t", 
        RowBox[{"\"\<TargetEigenvalue\>\"", "\[Rule]", "targetE"}], ",", "\n",
         "\t\t\t\t", "ops"}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{"new", ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"_List", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"VectorQ", "[", 
               RowBox[{"#", ",", " ", "Internal`RealValuedNumberQ"}], "]"}], 
              "&"}], ")"}]}], ",", " ", 
           RowBox[{"_List", "?", "MatrixQ"}]}], "}"}]}], "\n", "\t\t\t\t\t", 
        "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"newEngs", ",", " ", "newWfs"}], "}"}], "=", "newWfs"}], ",",
        "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
         RowBox[{
         "Automatic", ",", "\n", "\t\t\t\t", 
          "\"\<Failed to generate wavefunctions\>\""}], "\n", "\t\t\t\t", 
         "]"}], ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"newEngs", ",", " ", 
        RowBox[{"Not", "@*", 
         RowBox[{"MatchQ", "[", 
          RowBox[{"Alternatives", "@@", "engs"}], "]"}]}]}], "]"}]}], ";", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "new"}], "===", "0"}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "Automatic", ",", "\n", "\t\t\t\t", 
         "\"\<Failed to find any new wavefunctions with eigenvalue shift ``. \
\\\nTry supplying a different \\\"TargetEigenvalue\\\" directly\>\"", ",", 
         "\n", "\t\t\t\t", "targetE"}], "\n", "\t\t\t\t", "]"}]}], "\n", 
      "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", 
      RowBox[{"{", 
       RowBox[{"new", ",", " ", 
        RowBox[{"Pick", "[", 
         RowBox[{"newWfs", ",", " ", 
          RowBox[{
           RowBox[{"Not", "@*", 
            RowBox[{"MatchQ", "[", 
             RowBox[{"Alternatives", "@@", "engs"}], "]"}]}], "/@", 
           "newEngs"}]}], "]"}]}], "}"}]}], ";", "\n", "\t\t", 
     RowBox[{"new", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{"Join", ",", "\n", "\t", "\t\t\t", 
        RowBox[{"{", "\n", "\t", "\t\t\t\t", 
         RowBox[{"new", ",", "\n", "\t", "\t\t\t\t", "wfns"}], "\n", "\t", 
         "\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"orderNew", "=", 
      RowBox[{"Ordering", "[", 
       RowBox[{"new", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "orderNew", "]"}], "]"}], "&"}], "/@", "new"}]}]}], "\n",
    "\t\t", "]"}]}]}], \
"CodeInput",ExpressionUUID->"4a4863d8-31a3-48b0-9f24-46fa1ef55585"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExtendWavefunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"49d92430-0148-452c-95a2-7f09d37a6273"],

Cell[BoxData[
 RowBox[{"ChemDVRDefaultExtendWavefunctions", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"2318055d-743b-4c8a-b230-34ad3da0dfd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultExtendWavefunctions", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Options", "[", "iChemDVRDefaultExtendWavefunctions", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultExtendWavefunctions", "[", "\n", "\t", 
   RowBox[{
   "T_", ",", "\n", "\t", "V_", ",", " ", "\n", "\t", "wfns_", ",", "\n", 
    "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"iChemDVRDefaultExtendWavefunctions", "[", "\n", "\t\t", 
   RowBox[{"T", ",", " ", "V", ",", " ", 
    RowBox[{"ReleaseHold", "[", "wfns", "]"}], ",", "\n", "\t\t", 
    RowBox[{"Replace", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"OptionValue", "[", "\"\<NumberOfWavefunctions\>\"", "]"}], ",",
       "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Except", "[", 
        RowBox[{"_Integer", "?", "IntegerQ"}], "]"}], "\[Rule]", "5"}]}], 
     "\n", "\t\t\t", "]"}], ",", "\n", "\t\t", "ops"}], "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"ad463b96-6978-43e6-956d-f241a707da24"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGridWavefunctions\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795308679735*^9},ExpressionUUID->"3faffae1-8b52-4623-a73d-\
7a1b8e8e156c"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefaultThreadGridWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"d0326ac1-00ee-4258-b34f-dd197f6fbe15"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultThreadGridWavefunctions", "[", 
    RowBox[{"gps_", ",", " ", "wfns_", ",", " ", "retE_"}], "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"grid", "=", "gps"}], "\n", "\t\t\t", "}"}], ",", "\n", 
     "\t\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "@", 
          RowBox[{"First", "@", "grid"}]}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"grid", "=", 
         RowBox[{"List", "/@", "grid"}]}]}], "\n", "\t", "\t\t\t", "]"}], ";",
       "\n", "\t\t", 
      RowBox[{"grid", "=", 
       RowBox[{"Developer`ToPackedArray", "@", "grid"}]}], ";", "\n", "\t\t", 
      
      RowBox[{"If", "[", 
       RowBox[{"retE", ",", " ", "\n", "\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "->", 
            RowBox[{"Join", "[", 
             RowBox[{"grid", ",", " ", 
              RowBox[{"List", "/@", "#2"}], ",", " ", "2"}], "]"}]}], "&"}], 
          ",", "\n", "\t", "\t\t\t", "wfns"}], "\n", "\t", "\t\t\t", "]"}], 
        ",", "\n", "\t\t\t", 
        RowBox[{"Map", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"grid", ",", " ", 
             RowBox[{"List", "/@", "#"}], ",", " ", "2"}], "]"}], "&"}], ",", 
          " ", "\n", "\t\t\t\t", 
          RowBox[{"wfns", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
       "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"89ed9223-1658-439b-b851-42e8cf5fb882"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGridWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"b3927d96-4667-4978-a8cf-5553090de25a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultGridWavefunctions", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<ReturnEnergies\>\"", "\[Rule]", "False"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", "None"}]}], "\n", "\t\t\t",
       "}"}], ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridWavefunctions", "[", "\n", "\t", 
    RowBox[{
    "grid_", ",", " ", "\n", "\t", "wfs_", ",", "\n", "\t", "V_", ",", "\n", 
     "\t", 
     RowBox[{"o", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultPruneGridPoints", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ChemDVRDefaultGridPointList", "[", 
           RowBox[{"grid", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "o", "}"}], ",", " ", 
              RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
             "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "V", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", "\n", "\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultWavefunctionSelection", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ReleaseHold", "@", "wfs"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "o", "}"}], ",", " ", 
            RowBox[{
            "Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"iChemDVRDefaultThreadGridWavefunctions", "[", "\n", "\t\t\t", 
      RowBox[{
      "coreGridPoints", ",", "\n", "\t\t\t", "wfns", ",", "\n", "\t\t\t", 
       "retE"}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"1b8834c0-af8e-44c6-b0e0-afd4db9417fe"]\

}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultInterpolatingWavefunctions\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795314403144*^9},ExpressionUUID->"b99cdb95-38ed-4f0a-9b3a-\
c17c238a369c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultInterpolatingWavefunctions", "]"}], 
   "=", "\n", "\t", 
   RowBox[{"Options", "@", "ChemDVRDefaultGridWavefunctions"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultInterpolatingWavefunctions", "[", "\n", "\t", 
   RowBox[{
   "grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", "V_", ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"wf", "=", 
      RowBox[{"ChemDVRDefaultGridWavefunctions", "[", 
       RowBox[{"grid", ",", " ", "wfs", ",", " ", "V", ",", " ", "ops"}], 
       "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MatchQ", "[", 
        RowBox[{
         RowBox[{"wf", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", " ", "_Rule"}], "]"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
         RowBox[{"Interpolation", "[", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}], ",", "\n", 
       "\t\t\t", "Interpolation"}], "\n", "\t\t\t", "]"}], "/@", "wf"}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"823c7587-f077-4505-8f21-c0295b5a1a2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExpectationValues\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795314403144*^9, {3.731432771580377*^9, 3.731432776098288*^9}, 
   3.731704203049971*^9},ExpressionUUID->"b6f3cabd-26b8-4466-b805-\
bfbc55ef99c4"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]validateWfns\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"fff0c8ea-b660-43e7-914b-fca0faac7583"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"validateWfns", "[", "wfns_", "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"!", 
       RowBox[{"ListQ", "@", "wfns"}]}], "&&", 
      RowBox[{
       RowBox[{"Length", "@", "wfns"}], "\[Equal]", "2"}], "&&", 
      RowBox[{"VectorQ", "[", 
       RowBox[{
        RowBox[{"wfns", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
        "Internal`RealValuedNumericQ"}], "]"}]}], ",", "\n", "\t\t\t", 
     RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
      RowBox[{
      "Automatic", ",", "\n", "\t\t\t\t", 
       "\"\<Supplied wavefunctions are invalid\>\""}], "\n", "\t\t\t\t", 
      "]"}]}], "\n", "\t\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"37c2e6b0-3697-44e2-bcf0-0713f953e0dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]chemDVRCalcExpectationValue\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7318728678577757`*^9, 
  3.7318728701394367`*^9}},ExpressionUUID->"c536089d-153c-4c96-9286-\
63f0955d43bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValueVec", "[", 
    RowBox[{"func_", ",", " ", "grid_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"func", "@", "grid"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"_List", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
           RowBox[{"Length", "@", "grid"}]}], "&"}], ")"}]}], "]"}], ":>", 
      RowBox[{"Map", "[", 
       RowBox[{"func", ",", " ", "grid"}], "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValueVec", "[", 
    RowBox[{"func_", ",", " ", "grid_", ",", " ", "wf_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{"grid", ",", " ", "wf"}], "]"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"_List", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
           RowBox[{"Length", "@", "grid"}]}], "&"}], ")"}]}], "]"}], ":>", 
      "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"{", 
         RowBox[{"grid", ",", " ", "wf"}], "}"}]}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], \
"CodeInput",ExpressionUUID->"15b97a3e-a413-4958-8246-a2b89a5e1116"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"multiplicativeOperator", "[", "func_Function", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"Slot", "[", "2", "]"}], ",", " ", "\[Infinity]"}], "]"}], "||",
       "\n", "\t\t\t", 
      RowBox[{"MatchQ", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{
         RowBox[{"Verbatim", "[", "Function", "]"}], "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "_"}], "}"}], ",", " ", "___"}], "]"}]}], 
       "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"multiplicativeOperator", "[", "e_", "]"}], ":=", "\n", "\t", 
   "False"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"2be248d9-eed3-495a-bb47-00439ad36a35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValue", "[", "\n", "\t", 
    RowBox[{
    "func_Function", ",", " ", "grid_", ",", " ", "wfL_", ",", " ", "wfR_", 
     ",", "\n", "\t", "multiplicative_"}], "\n", "\t", "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"wfL", ".", "\n", "\t\t", 
    RowBox[{"With", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t\t\t", 
       RowBox[{"mult", "=", "\n", "\t\t\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"multiplicative", "===", "Automatic"}], ",", "\n", 
          "\t\t\t\t\t\t", 
          RowBox[{"multiplicativeOperator", "[", "func", "]"}], ",", "\n", 
          "\t\t\t\t\t\t", 
          RowBox[{"TrueQ", "@", "multiplicative"}]}], "\n", "\t\t\t\t\t\t", 
         "]"}]}], "\n", "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "mult"}], ",", "\n", "\t", "\t\t\t", 
        RowBox[{"chemDVRCalcExpectationValueVec", "[", 
         RowBox[{"func", ",", " ", "grid", ",", " ", "wfR"}], "]"}], ",", 
        "\n", "\t", "\t\t\t", 
        RowBox[{"Quiet", "[", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Check", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"wfR", "*", 
             RowBox[{"chemDVRCalcExpectationValueVec", "[", 
              RowBox[{"func", ",", " ", "grid"}], "]"}]}], ",", "\n", "\t", 
            "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{
             "PackageRaiseException", "[", "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{
              "Automatic", ",", "\n", "\t", "\t", "\t\t\t\t\t", 
               "\"\<Dimension mismatch in matrix element calculation for \
function ``.\\\n Wavefunction has dimension `` and the grid has dimension \
``\>\"", 
               RowBox[{"(*", 
                RowBox[{",", " ", 
                 RowBox[{
                  RowBox[{"\\\n", "and"}], " ", "the", " ", "function", " ", 
                  "applied", " ", "to", " ", "the", " ", "grid", " ", "has", 
                  " ", "dimension", " ", "``"}]}], "*)"}], ",", "\n", "\t", 
               "\t\t\t\t\t\t", "func", ",", "\n", "\t", "\t\t\t\t\t\t", 
               RowBox[{"Dimensions", "[", "wfR", "]"}], ",", " ", "\n", "\t", 
               "\t", "\t\t\t\t\t", 
               RowBox[{"Dimensions", "@", "grid"}]}], 
              RowBox[{"(*", 
               RowBox[{",", "\n", "\t", "\t\t\t\t\t\t", 
                RowBox[{"Dimensions", "@", 
                 RowBox[{"chemDVRCalcExpectationValueVec", "[", 
                  RowBox[{"func", ",", " ", "grid"}], "]"}]}]}], "*)"}], "\n",
               "\t", "\t", "\t\t\t\t\t", "]"}], ";"}]}], "\n", "\t", 
           "\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"Thread", "::", "tdlen"}]}], "\n", "\t\t\t\t\t", "]"}]}], 
       "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"chemDVRCalcExpectationValue", "[", 
   RowBox[{
    RowBox[{"func", ":", 
     RowBox[{"Except", "[", "_Function", "]"}]}], ",", " ", "grid_", ",", " ",
     "wfL_", ",", " ", "wfR_", ",", "\n", "\t", "multiplicative_"}], "\n", 
   "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"wfL", ".", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"chemDVRCalcExpectationValueVec", "[", 
      RowBox[{"func", ",", " ", "grid", ",", " ", "wfR"}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"_func", ",", " ", "__"}], "}"}], "\[RuleDelayed]", "\n", 
       "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"chemDVRCalcExpectationValueVec", "[", 
          RowBox[{"func", ",", " ", "grid"}], "]"}], ",", "\n", "\t\t\t\t\t", 
         
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_func", ",", " ", "__"}], "}"}], ":>", "\n", 
            "\t\t\t\t\t\t\t", 
            RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{
             "Automatic", ",", "\n", "\t\t\t\t\t\t\t\t", 
              "\"\<Operator `` in matrix element calculation didn't \
evaluate\>\"", ",", "\n", "\t\t\t\t\t\t\t\t", "func"}], "\n", 
             "\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{"l_", "\[RuleDelayed]", 
            RowBox[{"wfR", "*", "l"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], 
        "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
    "]"}]}]}]}], \
"CodeInput",ExpressionUUID->"164be355-1fb9-42b4-89c5-e7b2ac5cfe8d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExpectationValues\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7317846940930567`*^9},ExpressionUUID->"c0e0f6d5-c534-49f1-909f-\
6a49285a657b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultExpectationValues", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Options", "@", "ChemDVRDefaultGridWavefunctions"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"\"\<MultiplicativeOperator\>\"", "\[Rule]", "Automatic"}], 
      "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultExpectationValues", "[", "\n", "\t", 
    RowBox[{
    "grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", "evs_", ",", "\n", 
     "\t", 
     RowBox[{"V", ":", 
      RowBox[{
       RowBox[{"_", "?", "SquareMatrixQ"}], "|", 
       RowBox[{"Hold", "[", 
        RowBox[{"_", "?", "SquareMatrixQ"}], "]"}]}]}], ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultPruneGridPoints", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ChemDVRDefaultGridPointList", "[", 
           RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t\t", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "ops", "}"}], ",", " ", 
              RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
             "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "V", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"exfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", "evs"}]}]}], ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", "\n", "\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultWavefunctionSelection", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ReleaseHold", "@", "wfs"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{
            "Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", "\n", "\t\t\t\t", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}], ",",
        "\n", "\t\t\t", 
       RowBox[{"mul", "=", 
        RowBox[{
        "OptionValue", "[", "\"\<MultiplicativeOperator\>\"", "]"}]}]}], "\n",
       "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"retE", ",", " ", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"wfns", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "#"}], "&"}], ",", "\n",
         "\t\t\t", "Identity"}], "\n", "\t\t\t", "]"}], "@", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"ListQ", "@", "evs"}]}], ",", " ", 
         RowBox[{"Map", "[", "First", "]"}], ",", " ", "Identity"}], "]"}], 
       "@", "\n", "\t\t\t\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"Map", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"chemDVRCalcExpectationValue", "[", 
             RowBox[{
             "#", ",", " ", "coreGridPoints", ",", " ", "wf", ",", " ", "wf", 
              ",", " ", "mul"}], "]"}], "&"}], ",", "\n", "\t\t\t\t\t\t\t", 
           "exfns"}], "\n", "\t\t\t\t\t\t\t", "]"}], ",", "\n", 
         "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"wf", ",", " ", 
           RowBox[{"wfns", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\n", "\t\t\t\t\t\t", 
        "]"}]}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"6c0b1d1a-eef8-4382-aea1-d35fe2e03deb"]\

}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultOperatorMatrix\[RightFloor]", \
"CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{3.731784687520719*^9, 
  3.731791503246063*^9},ExpressionUUID->"335cc5ba-099b-4e88-bb3e-\
9f6243c89af3"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultOperatorMatrix\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"ad0134ca-af1c-42b5-b2f6-889cb8a1d422"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultOperatorMatrix", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Options", "@", "ChemDVRDefaultExpectationValues"}], ",", "\n", 
     "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<AssumeSymmetric\>\"", "\[Rule]", "True"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<AssumeHermitian\>\"", "\[Rule]", "False"}]}], "\n", 
      "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrix", "[", "\n", "\t", 
    RowBox[{
    "grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", "evs_", ",", "\n", 
     "\t", 
     RowBox[{"V", ":", 
      RowBox[{
       RowBox[{"_", "?", "SquareMatrixQ"}], "|", 
       RowBox[{"Hold", "[", 
        RowBox[{"_", "?", "SquareMatrixQ"}], "]"}]}]}], ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultPruneGridPoints", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ChemDVRDefaultGridPointList", "[", 
           RowBox[{"grid", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "ops", "}"}], ",", " ", 
              RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
             "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "V", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"exfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", "evs"}]}]}], ",", "\n", "\t\t\t", "els", ",", 
       "\n", "\t\t\t", "sels", ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", 
        RowBox[{"ReleaseHold", "@", "wfs"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", "\n", "\t\t\t\t", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}], ",",
        "\n", "\t\t\t", "mat", ",", "\n", "\t\t\t", "engs", ",", "\n", 
       "\t\t\t", "wfnSel", ",", "\n", "\t\t\t", "exFs", ",", "\n", "\t\t\t", 
       RowBox[{"asrs", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<AssumeSymmetric\>\"", "]"}]}]}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"ash", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<AssumeHermitian\>\"", "]"}]}]}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"mul", "=", 
        RowBox[{
        "OptionValue", "[", "\"\<MultiplicativeOperator\>\"", "]"}]}]}], "\n",
       "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sels", ",", " ", "exfns"}], "}"}], "=", "\n", "\t\t\t", 
       RowBox[{"Transpose", "@", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"exfns", ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sel_", "\[Rule]", "fn_"}], ")"}], "\[RuleDelayed]", 
             "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"sel", ",", " ", "fn"}], "}"}]}], ",", "\n", 
            "\t\t\t\t\t\t", 
            RowBox[{"fn_", ":>", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "OptionValue", "[", "\"\<WavefunctionSelection\>\"", "]"}], 
               ",", " ", "fn"}], "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}], ",", 
          "\n", "\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t", "]"}]}]}], ";", "\n",
       "\t\t", 
      RowBox[{"wfns", "=", "\n", "\t\t\t", 
       RowBox[{"Map", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
           RowBox[{"wfns", ",", " ", "#"}], "]"}], "&"}], ",", " ", "\n", 
         "\t\t\t\t", "sels"}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "sels"}], "\[Equal]", "1"}], ",", " ", 
         "First", ",", " ", "Identity"}], "]"}], "@", "\n", "\t\t\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"engs", "=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
           RowBox[{"wfnSel", "=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", "\t\t\t\t\t", 
           RowBox[{"exFs", "=", "#2"}], ";", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{"retE", ",", " ", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"Array", "[", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"engs", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
                    RowBox[{"engs", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}]}], "}"}], "&"}], ",", 
                  "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Length", "@", "wfnSel"}], ",", " ", 
                    RowBox[{"Length", "@", "wfnSel"}]}], "}"}]}], "\n", 
                 "\t\t\t\t\t\t\t", "]"}], "\[Rule]", "#"}], "&"}], ",", "\n", 
              "\t\t\t\t\t\t", "Identity"}], "\n", "\t\t\t\t\t\t", "]"}], "@", 
            "\n", "\t\t\t\t\t", 
            RowBox[{"Block", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"rmat", "=", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0.", ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Length", "@", "wfnSel"}], ",", " ", 
                    RowBox[{"Length", "@", "wfnSel"}], ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Not", "@", 
                    RowBox[{"ListQ", "@", "exFs"}]}], ",", " ", "Nothing", 
                    ",", " ", 
                    RowBox[{"Length", "@", "exFs"}]}], "]"}]}], "\n", 
                   "\t\t\t\t\t\t\t\t\t\t", "}"}]}], "\n", 
                 "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t", "}"}],
               ",", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Do", "[", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"rmat", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "=", "\n", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"asrs", "||", "ash"}], ")"}], "&&", 
                    RowBox[{"i", ">", "j"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    "ash", ",", " ", "Conjugate", ",", " ", "Identity"}], 
                    "]"}], "@", 
                    RowBox[{"rmat", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", " ", "i"}], "]"}], "]"}]}], ",", "\n", 
                    "\t", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"gr", "=", "coreGridPoints"}], ",", " ", 
                    RowBox[{"wfL", "=", 
                    RowBox[{"wfnSel", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
                    RowBox[{"wfR", "=", 
                    RowBox[{"wfnSel", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", "\n", 
                    "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Not", "@", 
                    RowBox[{"ListQ", "@", "exFs"}]}], ",", "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "chemDVRCalcExpectationValue", "[", "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "exFs", ",", " ", "\n", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", "gr", ",", " ", "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t", "wfL", ",", " ", "wfR", ",", 
                    "\n", "\t\t\t\t\t\t\t\t\t\t\t\t", "mul"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "Map", "[", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "chemDVRCalcExpectationValue", "[", "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "#", ",", " ", "\n", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", "gr", ",", " ", "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t\t", "wfL", ",", " ", "wfR", ",",
                     "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t", "mul"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "exFs"}], "\n", "\t", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", 
                   "\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", " ", 
                   RowBox[{"Length", "@", "wfnSel"}]}], "}"}], ",", "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", " ", 
                   RowBox[{"Length", "@", "wfnSel"}]}], "}"}]}], "\n", 
                "\t\t\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t\t", 
               "rmat"}]}], "\n", "\t\t\t\t\t\t", "]"}]}]}], "\n", 
          "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{"wfns", ",", "\n", "\t\t\t\t\t", "exfns"}], "\n", 
          "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], \
"CodeInput",ExpressionUUID->"84d84d4c-129e-4a3d-aaf0-674ec173c5c0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultOperatorMatrixElements\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e44707f9-d40e-49cf-8bff-0bd43e934d0c"],

Cell[BoxData[
 RowBox[{"ChemDVRDefaultOperatorMatrixElements", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"d8f45a09-3983-4d02-84b4-f74f360cfcad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultOperatorMatrixElements", "]"}], "=",
    "\n", "\t", 
   RowBox[{"Options", "@", "ChemDVRDefaultOperatorMatrix"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrixElements", "[", "\n", "\t", 
    RowBox[{"grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", 
     RowBox[{"evs", ":", "\n", "\t\t", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"_", ",", " ", "_"}], "}"}], "->", "_"}], ")"}], "|", "\n",
         "\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", " ", "_"}], "}"}], "..."}], "}"}], "->", "_"}],
          ")"}], "|", "\n", "\t\t", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"_", ",", " ", "_"}], "}"}], "..."}], "}"}], "|", 
              RowBox[{"{", 
               RowBox[{"_", ",", " ", "_"}], "}"}]}], ")"}], "->", "_"}], 
           ")"}], ".."}], "}"}]}], ")"}]}], ",", "\n", "\t", 
     RowBox[{"V", ":", 
      RowBox[{
       RowBox[{"_", "?", "SquareMatrixQ"}], "|", 
       RowBox[{"Hold", "[", 
        RowBox[{"_", "?", "SquareMatrixQ"}], "]"}]}]}], ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultPruneGridPoints", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ChemDVRDefaultGridPointList", "[", 
           RowBox[{"grid", ",", " ", "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "ops", "}"}], ",", " ", 
              RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
             "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "V", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"exfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", "evs"}]}]}], ",", "\n", "\t\t\t", "els", ",", 
       "\n", "\t\t\t", "sels", ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", 
        RowBox[{"ReleaseHold", "@", "wfs"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", "\n", "\t\t\t\t", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}], ",",
        "\n", "\t\t\t", "wfSelL", ",", "\n", "\t\t\t", "wfSelR", ",", "\n", 
       "\t\t\t", "engsL", ",", "\n", "\t\t\t", "engsR", ",", "\n", "\t\t\t", 
       "wfnsL", ",", "\n", "\t\t\t", "wfnsR", ",", "\n", "\t\t\t", "exFs", 
       ",", "\n", "\t\t\t", 
       RowBox[{"mul", "=", 
        RowBox[{
        "OptionValue", "[", "\"\<MultiplicativeOperator\>\"", "]"}]}]}], "\n",
       "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sels", ",", " ", "exfns"}], "}"}], "=", "\n", "\t\t\t", 
       RowBox[{"Transpose", "[", 
        RowBox[{"List", "@@@", "exfns"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"validateWfns", "[", "wfns", "]"}], ";", "\n", "\t\t", 
      RowBox[{"wfSelL", "=", "\n", "\t\t\t", 
       RowBox[{"Map", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
              RowBox[{"wfns", ",", " ", "#"}], "]"}], "&"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Replace", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"Replace", "[", 
                RowBox[{"#", ",", " ", 
                 RowBox[{
                  RowBox[{"k", ":", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Except", "[", "_List", "]"}], ",", " ", "_"}], 
                    "}"}]}], "\[RuleDelayed]", 
                  RowBox[{"{", "k", "}"}]}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"i_Integer", "\[RuleDelayed]", 
               RowBox[{"{", "i", "}"}]}], ",", "\n", "\t\t\t\t\t\t", "1"}], 
             "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], 
         ",", "\n", "\t\t\t\t", "sels"}], "\n", "\t\t\t\t", "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{"wfSelR", "=", "\n", "\t\t\t", 
       RowBox[{"Map", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Map", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
              RowBox[{"wfns", ",", " ", "#"}], "]"}], "&"}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Replace", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"Replace", "[", 
                RowBox[{"#", ",", " ", 
                 RowBox[{
                  RowBox[{"k", ":", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Except", "[", "_List", "]"}], ",", " ", "_"}], 
                    "}"}]}], "\[RuleDelayed]", 
                  RowBox[{"{", "k", "}"}]}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"i_Integer", "\[RuleDelayed]", 
               RowBox[{"{", "i", "}"}]}], ",", "\n", "\t\t\t\t\t\t", "1"}], 
             "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], 
         ",", "\n", "\t\t\t\t", "sels"}], "\n", "\t\t\t\t", "]"}]}], ";", 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "sels"}], "\[Equal]", "1"}], ",", " ", 
         "First", ",", " ", "Identity"}], "]"}], "@", "\n", "\t\t\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"exFs", "=", "#3"}], ";", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", " ", 
              "First", ",", " ", "Identity"}], "]"}], "@", "\n", "\t\t\t\t\t", 
            RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Function", "[", "\n", "\t", "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"engsL", "=", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\t", "\t", 
                "\t\t\t\t\t", 
                RowBox[{"engsR", "=", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
                "\t\t\t\t\t\t\t", 
                RowBox[{"wfnsL", "=", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
                "\t\t\t\t\t\t\t", 
                RowBox[{"wfnsR", "=", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ";", "\n", 
                "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"Which", "[", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "wfnsL"}], "\[Equal]", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"Length", "@", "wfnsR"}], "\[Equal]", "1"}]}], 
                   ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{"First", "@", "#"}]}], "&"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "wfnsL"}], "\[Equal]", "1"}], "||", 
                    RowBox[{
                    RowBox[{"Length", "@", "wfnsR"}], "\[Equal]", "1"}]}], 
                   ",", " ", "\n", "\t", "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"#", ",", " ", "1"}], "]"}], "&"}], ",", " ", 
                   "\n", "\t\t\t\t\t\t\t\t", "True", ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", "Identity"}], "\n", 
                  "\t\t\t\t\t\t\t\t", "]"}], "@", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"retE", ",", " ", "\n", "\t", "\t", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Array", "[", "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"engsL", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
                    RowBox[{"engsR", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}]}], "}"}], "&"}], ",", 
                    "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "wfnsL"}], ",", " ", 
                    RowBox[{"Length", "@", "wfnsR"}]}], "}"}]}], "\n", "\t", 
                    "\t", "\t\t\t\t\t\t\t", "]"}], "\[Rule]", "#"}], "&"}], 
                    ",", "\n", "\t", "\t", "\t\t\t\t\t\t", "Identity"}], "\n",
                    "\t", "\t", "\t\t\t\t\t\t", "]"}], "@", "\n", "\t", "\t", 
                  "\t\t\t\t\t", 
                  RowBox[{"Table", "[", "\n", "\t", "\t", "\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"gr", "=", "coreGridPoints"}], ",", " ", 
                    RowBox[{"wfL", "=", "wfL"}], ",", " ", 
                    RowBox[{"wfR", "=", "wfR"}]}], "}"}], ",", "\n", "\t", 
                    "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Not", "@", 
                    RowBox[{"ListQ", "@", "exFs"}]}], ",", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "chemDVRCalcExpectationValue", "[", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "exFs", ",", " ", "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    "gr", ",", " ", "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    "wfL", ",", " ", "wfR", ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t", "mul"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "Map", "[", "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "chemDVRCalcExpectationValue", "[", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"#", ",", " ", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", "gr", ",", " ", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t", "wfL", ",", " ", "wfR", ",", "\n",
                     "\t\t\t\t\t\t\t\t\t\t\t\t", "mul"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t\t", "exFs"}], "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"wfL", ",", " ", "wfnsL"}], "}"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"wfR", ",", " ", "wfnsR"}], "}"}]}], "\n", "\t", 
                   "\t\t\t\t\t\t\t", "]"}]}]}]}], "\n", "\t", "\t\t\t\t\t\t", 
               "]"}], ",", "\n", "\t", "\t\t\t\t\t", 
              RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t", 
               RowBox[{"#", ",", "\n", "\t", "\t\t\t\t\t\t", "#2"}], "\n", 
               "\t", "\t\t\t\t\t\t", "}"}]}], "\n", "\t", "\t\t\t\t\t", 
             "]"}]}]}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
          "wfSelL", ",", "\n", "\t\t\t\t\t", "wfSelR", ",", "\n", 
           "\t\t\t\t\t", "exfns"}], "\n", "\t\t\t\t\t", "}"}]}], "\n", 
        "\t\t\t\t", "]"}]}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"604d9760-2108-451e-be2c-dfa7ac5311b0"]\

}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"fdeebcf6-8c06-4eff-91a0-\
04c994bffda0"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"9009c70d-1aad-415c-9701-\
edff1eaf5262"]
},
WindowSize->{789, 764},
WindowMargins->{{Automatic, -958}, {-7, Automatic}},
TaggingRules->{
 "UUIDButtons" -> {
   "Active" -> {
     "Button-b8297203-6b28-48f9-8ba3-edbd5eb431d2" -> False, 
      "Button-8c92aebb-2725-4f7c-a6a8-f90e3a4dce9c" -> False, 
      "Button-ede3a027-3279-40a0-8aa4-1fcc5f60357d" -> False}}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

