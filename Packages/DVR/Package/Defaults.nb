Notebook[{

Cell[CellGroupData[{
Cell["Defaults", "CodeSection",
 CellChangeTimes->{{3.699193506559762*^9, 3.699193508534224*^9}, {
  3.7323031681209297`*^9, 3.732303175462882*^9}, {3.734895443704739*^9, 
  3.7348954447664747`*^9}, {3.735146650576437*^9, 
  3.735146651588457*^9}},ExpressionUUID->"ce12fc74-14d9-4140-b8eb-\
f0dcebd187a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultFormatGrid", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGrid", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Default DVR grid function\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedGrid", "::", "usage"}], "=", "\"\<\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDirectProductGrid", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Creates a direct product grid from two grid functions\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDirectProductKineticEnergy", "::", "usage"}], "=", "\n", 
   "\t", "\"\<Creates a direct product ke from two ke functions\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRKroneckerProductKineticEnergy", "::", "usage"}], "=", "\n",
    "\t", "\"\<Calculates the kinetic energy as a Kronecker product\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultKineticEnergy", "::", "usage"}], "=", "\n", "\t", 
  "\"\<Calculates the kinetic energy as a product of kes\>\""}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "::", "usage"}], "=", "\"\<\>\""}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultPotentialEnergy", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridPotentialEnergy", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultPrepareHamiltonian", "::", "usage"}], "=", "\n", 
   RowBox[{
    RowBox[{"ChemDVRDefaultWavefunctions", "::", "usage"}], "=", 
    "\"\<\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridWavefunctions", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultInterpolatingWavefunctions", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultExpectationValues", "::", "usage"}], "=", 
   "\"\<\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrix", "::", "usage"}], "=", "\"\<\>\""}],
   ";"}]}], "CodeInput",
 CellChangeTimes->{{3.719787111239002*^9, 3.719787180779767*^9}, {
   3.7197882642541027`*^9, 3.7197882700760813`*^9}, {3.719788464329248*^9, 
   3.719788470679223*^9}, {3.7292285158943157`*^9, 3.729228527892273*^9}, {
   3.731161960273127*^9, 3.731161967843996*^9}, 3.731162000404421*^9, 
   3.731162033727303*^9, {3.731432695863593*^9, 3.7314327049157667`*^9}, {
   3.731785718909966*^9, 3.7317857342039537`*^9}, 3.731791504505604*^9, {
   3.731988398037353*^9, 3.73198840174786*^9}, {3.73206607777111*^9, 
   3.732066118598529*^9}, {3.732066654427018*^9, 3.732066656463282*^9}, {
   3.7323024211289883`*^9, 3.732302426014752*^9}, {3.732302743522944*^9, 
   3.732302781622141*^9}, {3.7323042575680943`*^9, 3.732304260683733*^9}, {
   3.732305069988263*^9, 3.732305083780917*^9}, {3.7324215197548923`*^9, 
   3.7324215593981533`*^9}, {3.732422115931074*^9, 3.732422120751442*^9}, 
   3.734733384586195*^9, {3.7348974172908773`*^9, 3.734897419315358*^9}, {
   3.735159556126212*^9, 
   3.735159561603642*^9}},ExpressionUUID->"648d799f-64d0-4bf1-864c-\
cb9c7b6283bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"0e55d644-7d11-4200-87af-\
275b741b17e2"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Grids\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.724795278381548*^9, 3.7247952816361103`*^9}, {
  3.734894996696185*^9, 
  3.7348949975120373`*^9}},ExpressionUUID->"498d4274-9e46-4872-88c9-\
66d665c6c165"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FormatGrid\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.718047631253413*^9, 3.7180476325647182`*^9}, 
   3.724795287514295*^9},ExpressionUUID->"4516bcf2-fd24-4959-86d1-\
d883a725bd3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultFormatGrid", "[", 
    RowBox[{"grid_", ",", "points_", ",", "___"}], "]"}], ":=", "\n", "\t", 
   "grid"}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 
   3.718048462412904*^9}},ExpressionUUID->"36845978-d538-43bc-936d-\
e32c0f0f8abd"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]DefaultGridPointList\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.727731400821661*^9, 
  3.7277314261174*^9}},ExpressionUUID->"325fc124-0aad-4e2f-afda-171b99c57177"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\<GridPrepFunction\>\"", "\[Rule]", "Identity"}], "\n", "\t\t",
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridPointList", "[", 
    RowBox[{"grid_", ",", " ", 
     RowBox[{"o", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dims", "=", 
       RowBox[{"Dimensions", "[", "grid", "]"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Depth", "@", "grid"}], "<=", "3"}], ",", "\n", "\t", "\t\t", 
       
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<GridPrepFunction\>\"", "]"}], "@", 
        "grid"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"Flatten", "[", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<GridPrepFunction\>\"", "]"}], "@", 
          "grid"}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{"Depth", "[", "grid", "]"}], "-", "3"}]}], "\n", "\t\t\t\t",
         "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.7277314096463203`*^9, 3.727731452374588*^9}, {
   3.7277314998621473`*^9, 3.727731503398785*^9}, {3.7277315358287687`*^9, 
   3.727731541054201*^9}, 3.727731576810924*^9, {3.72773187739285*^9, 
   3.727731890516594*^9}},ExpressionUUID->"f3dc70cb-643d-49d9-8ab4-\
8e1440faeaf6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDirectProductGrid\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.72772649488496*^9, 3.727726526863521*^9}, {
  3.732066671238274*^9, 3.732066673699185*^9}, {3.7323017547179937`*^9, 
  3.7323017552362328`*^9}},ExpressionUUID->"f0a6cba7-3f0f-457b-927f-\
1b565df8e694"],

Cell["\<\
\[LeftCeiling]Alas this is best implemented procedurally owing to lack of \
FoldTuple\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.732302043296379*^9, 
  3.732302072535481*^9}},ExpressionUUID->"914de9a0-5f32-4825-b3e2-\
bc2068107da4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chemDVRComputeGrid", "[", 
   RowBox[{"fn_", ",", " ", "pt_", ",", " ", "reg_", ",", " ", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"fn", "[", 
   RowBox[{"pt", ",", " ", "reg", ",", " ", 
    RowBox[{"FilterRules", "[", 
     RowBox[{
      RowBox[{"{", "opts", "}"}], ",", " ", 
      RowBox[{"Options", "[", "fn", "]"}]}], "]"}]}], "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.732302263763823*^9, 
  3.732302311062009*^9}},ExpressionUUID->"9b720d08-097e-41b6-a74f-\
cde6a09069e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDirectProductGrid", "[", 
    RowBox[{"{", "grids__", "}"}], "]"}], ":=", "\n", "\t\t", 
   RowBox[{"Outer", "[", 
    RowBox[{"List", ",", " ", "grids"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDirectProductGrid", "[", "\n", "\t", 
   RowBox[{
   "fns_", ",", "\n", "\t", "pts_", ",", "\n", "\t", "regions_", ",", "\n", 
    "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"ChemDVRDirectProductGrid", "@", "\n", "\t\t", 
   RowBox[{"MapThread", "[", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"#2", ",", " ", "#3", ",", " ", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "opts", "}"}], ",", " ", 
          RowBox[{"Options", "[", "#", "]"}]}], "]"}]}], "]"}], "&"}], ",", 
     "\n", "\t\t\t", 
     RowBox[{"{", "\n", "\t\t\t\t", 
      RowBox[{
      "fns", ",", "\n", "\t\t\t\t", "pts", ",", "\n", "\t\t\t\t", "regions"}],
       "\n", "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}]}]}]}], "CodeInput",
 CellChangeTimes->{{3.727726588967136*^9, 3.727726626597754*^9}, 
   3.72773166068155*^9, {3.72822823994071*^9, 3.728228243339076*^9}, {
   3.732301756596129*^9, 3.732301767539969*^9}, {3.7323018793387403`*^9, 
   3.732301942422942*^9}, {3.732302027575333*^9, 3.732302033009302*^9}, {
   3.7323020911796837`*^9, 3.732302156309366*^9}, {3.732302242376899*^9, 
   3.7323023170141068`*^9}, {3.732420378468354*^9, 
   3.7324204934079247`*^9}},ExpressionUUID->"7b423d48-e1b3-4d34-8bcf-\
d2ba5d23268f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGrid\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.72772649488496*^9, 3.727726526863521*^9}, {
  3.732066671238274*^9, 3.732066673699185*^9}, {3.7323017547179937`*^9, 
  3.7323017552362328`*^9}, {3.7323969131145363`*^9, 3.732396915440076*^9}, {
  3.732421980298258*^9, 
  3.732421982103204*^9}},ExpressionUUID->"a2c34bfc-3885-4680-bf56-\
6c2e786a21e3"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultNamedGrid\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732396982414033*^9, 3.732396985440037*^9}, 
   3.7324201297784157`*^9},ExpressionUUID->"e39e85e5-c484-49c4-8d20-\
20d3a57687ea"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RegularSubdivision\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732396995847362*^9, 3.732397001983787*^9}, {
  3.7323971414806843`*^9, 3.7323971473731947`*^9}, {3.732398444969429*^9, 
  3.732398445896202*^9}, {3.732398544077197*^9, 
  3.732398566549446*^9}},ExpressionUUID->"f6df9bf2-6a5a-4795-b8eb-\
dc099e6357b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t", 
    RowBox[{
    "\"\<RegularSubdivision\>\"", ",", " ", "\n", "\t", "pt_Integer", ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"min_", ",", " ", "max_"}], "}"}]}], "\n", "\t", "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"Subdivide", "@@", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"min", ",", " ", "max", ",", " ", 
       RowBox[{"pt", "-", "1"}]}], "}"}]}]}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.732396989589134*^9, 3.732397093769566*^9}, 
   3.7323971489126596`*^9, 3.732398449183454*^9, {3.732398524093149*^9, 
   3.7323985646458273`*^9}, {3.73242202856642*^9, 
   3.7324220319139957`*^9}},ExpressionUUID->"c8fe8845-f4cf-41a3-8784-\
b8226648e55d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InteriorSubdivision\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732396995847362*^9, 3.732397001983787*^9}, {
  3.7323971414806843`*^9, 3.7323971473731947`*^9}, {3.732398547614887*^9, 
  3.732398569965201*^9}},ExpressionUUID->"37ac7d3b-955b-4c4a-ab93-\
17bdce39cd29"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t", 
    RowBox[{
    "\"\<InteriorSubdivision\>\"", ",", " ", "\n", "\t", "pt_Integer", ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"min_", ",", " ", "max_"}], "}"}]}], "\n", "\t", "]"}], ":=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"max", "-", "min"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"pt", "+", "1"}], ")"}]}], "*", 
      RowBox[{"Range", "[", "pt", "]"}]}], ")"}], "+", "min"}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.732396989589134*^9, 3.732397093769566*^9}, 
   3.7323971489126596`*^9, {3.732398455945573*^9, 3.732398466167584*^9}, {
   3.732398521248809*^9, 3.732398522358704*^9}, {3.732398555860317*^9, 
   3.732398574967497*^9}, {3.7324220352043457`*^9, 3.732422038202054*^9}, {
   3.7324290821207333`*^9, 
   3.732429097493587*^9}},ExpressionUUID->"3b4e23af-f469-40e6-9419-\
f5573e7f00c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]AzimuthalSubdivision\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732396995847362*^9, 3.732397001983787*^9}, {
  3.7323971414806843`*^9, 3.7323971473731947`*^9}, {3.732398444969429*^9, 
  3.732398445896202*^9}, {3.732398544077197*^9, 3.7323985946496887`*^9}, {
  3.732398673069306*^9, 
  3.732398681299217*^9}},ExpressionUUID->"c62be3e2-0f35-47e3-9921-\
9caf75d95420"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t", 
   RowBox[{
   "\"\<AzimuthalSubdivision\>\"", ",", " ", "\n", "\t", "pt_Integer", ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"min_", ",", " ", "max_"}], "}"}]}], "\n", "\t", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", 
       RowBox[{"2", "\[Pi]"}]}], "]"}], "&"}], "]"}], "@", "\n", "\t\t", 
   RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t\t\t", 
    RowBox[{
    "\"\<RegularSubdivision\>\"", ",", " ", "\n", "\t\t\t", "pt", ",", " ", 
     RowBox[{"{", 
      RowBox[{"min", ",", " ", "max"}], "}"}]}], "\n", "\t\t\t", 
    "]"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.732398642723968*^9, 3.732398648214239*^9}, {
  3.732398685453044*^9, 3.7323987165953693`*^9}, {3.73242204058654*^9, 
  3.732422048354006*^9}},ExpressionUUID->"fa01c63d-993d-4bf9-b3f0-\
b2ab04ca11fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PolarSubdivision\[RightFloor]", "CodeSubsubsubsubsection",
 
 Evaluatable->True,
 CellChangeTimes->{{3.732396995847362*^9, 3.732397001983787*^9}, {
   3.7323971414806843`*^9, 3.7323971473731947`*^9}, {3.732398444969429*^9, 
   3.732398445896202*^9}, {3.732398544077197*^9, 3.7323985946496887`*^9}, {
   3.732398673069306*^9, 3.732398694130725*^9}, 
   3.732398742203006*^9},ExpressionUUID->"a338d65f-fb21-4248-8401-\
09d28fea679c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t", 
   RowBox[{
   "\"\<PolarSubdivision\>\"", ",", " ", "\n", "\t", "pt_Integer", ",", " ", 
    RowBox[{"{", 
     RowBox[{"min_", ",", " ", "max_"}], "}"}]}], "\n", "\t", "]"}], ":=", 
  "\n", "\t", 
  RowBox[{
   RowBox[{"DeleteDuplicatesBy", "[", 
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", " ", "\[Pi]"}], "]"}], "&"}], "]"}], "@", "\n", 
   "\t\t", 
   RowBox[{"ChemDVRDefaultNamedGrid", "[", "\n", "\t\t\t", 
    RowBox[{
    "\"\<RegularSubdivision\>\"", ",", " ", "\n", "\t\t\t", "pt", ",", " ", 
     RowBox[{"{", 
      RowBox[{"min", ",", " ", "max"}], "}"}]}], "\n", "\t\t\t", 
    "]"}]}]}]], "CodeInput",
 CellChangeTimes->{{3.732398642723968*^9, 3.732398648214239*^9}, 
   3.732398685453044*^9, {3.7323987210435457`*^9, 3.732398743872141*^9}, {
   3.73242205509026*^9, 
   3.7324220627540627`*^9}},ExpressionUUID->"bdb7351e-c76c-494d-a896-\
a81d913182a3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGrid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7323984848431463`*^9, 
  3.732398487937194*^9}},ExpressionUUID->"43bc8fcc-5713-40e5-aa99-\
74cafffcc894"],

Cell["\<\
\[LeftCeiling]

\tTODO: 
\t\tinclude default grids; 
\t\tallow for easy specification in DVR template files;
\t\thandle NonCommutativeMultiply for direct product grids;
\t\thandle arbitrary op matrix el func for determining change of basis;

\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.732401091216526*^9, 3.7324011043256073`*^9}, {
  3.732401135982733*^9, 
  3.732401240370591*^9}},ExpressionUUID->"0e9cd278-9edb-4f85-bba0-\
f169e0d76e78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "grdimfn"}], "=", "\n", "\t", 
   "\"\<Dimensions of grid (``) and number of grid types (``) don't \
match\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "ungrid"}], "=", "\n", "\t", 
   "\"\<\\\"GridType\\\" `` not known\>\""}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.732419909668929*^9, 3.73241995563767*^9}, {
  3.73242005218132*^9, 
  3.732420058117425*^9}},ExpressionUUID->"8dd24eab-2f8c-4c25-9b13-\
40ba412a5b7b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultGrid", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\<GridType\>\"", "\[Rule]", "\"\<RegularSubdivision\>\""}], 
    "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultGrid", "[", "\n", "\t", 
   RowBox[{"pts_", ",", "\n", "\t", "regions_", ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"gfs", "=", "\n", "\t\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<GridType\>\"", "]"}], ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"k", ":", 
            RowBox[{"_Cross", "|", "_NonCommutativeMultiply", "|", 
             RowBox[{"_", 
              RowBox[{"(", 
               RowBox[{"Inactive", "[", "CircleTimes", "]"}], ")"}]}]}]}], 
           "\[RuleDelayed]", 
           RowBox[{"List", "@@", "k"}]}], ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"s_", ",", " ", "n_Integer"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"s", ",", " ", "n"}], "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
          
          RowBox[{
           RowBox[{"s_", "?", "AtomQ"}], "\[RuleDelayed]", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"s", ",", " ", 
             RowBox[{"Length", "@", "pts"}]}], "]"}]}]}], "\n", 
         "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t",
      "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"{", "gfs", "}"}], ",", " ", "1"}], "]"}]}], "=!=", 
        RowBox[{"Length", "@", "pts"}]}], ",", " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"ChemDVRRun", "::", "grdimfn"}], ",", " ", 
          RowBox[{"Length", "@", "pts"}], ",", " ", 
          RowBox[{"Length", "@", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", "gfs", "}"}], ",", " ", "1"}], "]"}]}]}], "]"}], 
        ";", "\n", "\t\t\t", 
        RowBox[{"Throw", "[", "$Failed", "]"}]}]}], "\n", "\t\t\t", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"MapThread", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{
          "#", ",", "\n", "\t\t\t\t", "_String", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"Replace", "[", 
            RowBox[{
             RowBox[{"ChemDVRDefaultNamedGrid", "[", 
              RowBox[{"#", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"ChemDVRDefaultNamedGrid", "[", 
               RowBox[{"s_", ",", " ", "__"}], "]"}], ":>", "\n", 
              "\t\t\t\t\t\t\t", 
              RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{
                  RowBox[{"ChemDVRRun", "::", "ungrid"}], ",", " ", "s"}], 
                 "]"}], ";", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{"Throw", "[", "$Failed", "]"}]}], "\n", 
               "\t\t\t\t\t\t\t\t", ")"}]}]}], "\n", "\t\t\t\t\t\t", "]"}], 
           ",", "\n", "\t\t\t\t", "_", ",", "\n", "\t\t\t\t\t", 
           RowBox[{"#", "[", 
            RowBox[{"#2", ",", " ", "#3"}], "]"}]}], "\n", "\t\t\t\t", "]"}], 
         "&"}], ",", "\n", "\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
         "gfs", ",", "\n", "\t\t\t\t", "pts", ",", "\n", "\t\t\t\t", 
          "regions"}], "\n", "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}], "//",
       "\n", "\t\t\t", 
      RowBox[{"Replace", "[", "\n", "\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "l_", "}"}], "\[RuleDelayed]", "l"}], ",", "\n", 
         "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"l", ":", 
           RowBox[{"{", "__", "}"}]}], ":>", 
          RowBox[{"ChemDVRDirectProductGrid", "[", "l", "]"}]}]}], "\n", 
        "\t\t\t\t\t", "}"}], "\n", "\t\t\t\t", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.732396842509378*^9, 3.7323968505821257`*^9}, {
   3.732396965331862*^9, 3.732396977752389*^9}, {3.732398529916191*^9, 
   3.7323985397984123`*^9}, {3.732398761383811*^9, 3.732398790565381*^9}, {
   3.732398955627776*^9, 3.732398978191824*^9}, {3.732399013084043*^9, 
   3.732399026978743*^9}, {3.732399064426015*^9, 3.732399095839439*^9}, {
   3.732401083984981*^9, 3.7324011294761877`*^9}, {3.732419959866748*^9, 
   3.73242000478271*^9}, {3.7324200853834887`*^9, 3.732420344038039*^9}, {
   3.732420557795519*^9, 3.732420600160469*^9}, {3.732420643940814*^9, 
   3.732420658137434*^9}, {3.732421999939419*^9, 3.732422000127563*^9}, {
   3.7324220826250772`*^9, 3.732422111377037*^9}, 3.732422753094709*^9, {
   3.734895804320291*^9, 
   3.734895832863714*^9}},ExpressionUUID->"fc4f85bb-db86-4ac1-9460-\
d6f56701040f"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PotentialEnergy\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734894999982567*^9, 
  3.734895011271511*^9}},ExpressionUUID->"7478438c-e886-47d9-99f6-\
9314b2584d7f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]NamedPotential\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.718047631253413*^9, 3.7180476325647182`*^9}, {
  3.724795287514295*^9, 
  3.724795292850572*^9}},ExpressionUUID->"dd47dca5-6862-4a1f-bd04-\
02037f0c7301"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRObject", "::", "nonpot"}], "=", 
   "\"\<Named potential `` unknown\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.7311599137670507`*^9, 
  3.731159933141715*^9}},ExpressionUUID->"39d85116-43a3-47c2-854d-\
cb2086324a9a"],

Cell[BoxData[
 RowBox[{"ChemDVRDefaultNamedPotential", "//", "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.731703292528319*^9, 
  3.7317032931651287`*^9}},ExpressionUUID->"43b357ed-5eb8-4d8f-9f8c-\
965a66cca63f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]HarmonicOscillator\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.731989260037402*^9},ExpressionUUID->"9635072c-e94b-4afd-b7ed-\
6d42960c45aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"\"\<HarmonicOscillator\>\"", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<ForceConstant\>\"", ",", 
          " ", 
          RowBox[{"1", "/", "2"}]}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"re", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", 
          "\"\<EquilibriumBondLength\>\"", ",", " ", "0"}], "]"}]}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"basic", "=", 
          RowBox[{"k", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "-", "re"}], ")"}], "^", "2"}]}]}], "}"}], ",", 
        "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "basic"}], ">", "1"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"Total", "[", "basic", "]"}], ",", "\n", "\t\t\t\t", 
          "basic"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], 
      "&"}]}], "\n", "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.731159945959352*^9, 3.7311599804576063`*^9}, {
  3.731160961022451*^9, 3.731161000121834*^9}, {3.731161272993369*^9, 
  3.731161286068269*^9}, {3.731702654808814*^9, 3.731702709772344*^9}, {
  3.7317027614272003`*^9, 3.73170279026587*^9}, {3.731703044125525*^9, 
  3.731703130206279*^9}, {3.7317032576034*^9, 3.731703284843528*^9}, {
  3.7317037103783283`*^9, 3.731703739124189*^9}, {3.7317868044773617`*^9, 
  3.731786807209291*^9}, {3.731989249775194*^9, 3.7319892534757233`*^9}, {
  3.7351691543187723`*^9, 
  3.7351691667650547`*^9}},ExpressionUUID->"f1839273-76a3-4be2-b476-\
34b6e76d7d85"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MorseOscillator\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.731989256604802*^9},ExpressionUUID->"6a335a92-fe9c-4116-8798-\
68e0d96c86a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"\"\<MorseOscillator\>\"", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"de", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<DissociationEnergy\>\"", 
          ",", " ", "10"}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"a", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<WellWidth\>\"", ",", " ", 
          "1"}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"re", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", 
          "\"\<EquilibriumBondLength\>\"", ",", " ", "0"}], "]"}]}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"basic", "=", 
          RowBox[{"(", 
           RowBox[{"de", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "a"}], ")"}]}], "*", 
                 RowBox[{"(", 
                  RowBox[{"#", "-", "re"}], ")"}]}], "]"}]}], ")"}], "^", 
             "2"}]}], ")"}]}], "}"}], ",", "\n", "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "basic"}], ">", "1"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"Total", "[", "basic", "]"}], ",", "\n", "\t\t\t\t", 
          "basic"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], 
      "&"}]}], "\n", "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.731159945959352*^9, 3.7311599804576063`*^9}, {
  3.731160961022451*^9, 3.731161000121834*^9}, {3.731161272993369*^9, 
  3.731161286068269*^9}, {3.731702654808814*^9, 3.731702709772344*^9}, {
  3.7317027614272003`*^9, 3.73170279026587*^9}, {3.731703044125525*^9, 
  3.731703130206279*^9}, {3.7317032576034*^9, 3.731703284843528*^9}, {
  3.7317037103783283`*^9, 3.731703739124189*^9}, {3.7317868044773617`*^9, 
  3.731786807209291*^9}, {3.731989249775194*^9, 3.731989265325032*^9}, {
  3.7324292506282673`*^9, 3.7324292544019957`*^9}, {3.73242943515804*^9, 
  3.732429435324175*^9}, {3.732429680848701*^9, 3.7324296823883038`*^9}, {
  3.7324679372674017`*^9, 3.732467937937348*^9}, {3.735169124105852*^9, 
  3.735169148507904*^9}},ExpressionUUID->"ecfcc71b-da60-404a-b102-\
fab3a6fe3485"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MultiWellPolynomial\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,
 CellChangeTimes->{3.731989256604802*^9, 
  3.732467977108077*^9},ExpressionUUID->"48db298b-f7d7-445e-9301-\
c3e0007e9ec6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"\"\<MultiWellPolynomial\>\"", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"pos", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<TurningPoints\>\"", ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"dep", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<Depth\>\"", ",", " ", 
          "5"}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"min", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<Minimum\>\"", ",", " ", 
          "0"}], "]"}]}], ",", "\n", "\t\t\t", "mainPol", ",", "\n", "\t\t\t",
        "minValPos", ",", "\n", "\t\t\t", "minPos", ",", "\n", "\t\t\t", 
       "minVal", ",", "\n", "\t\t\t", "minDiff"}], "\n", "\t\t\t", "}"}], ",",
      "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "@", 
         RowBox[{"Length", "@", "pos"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"pos", "=", 
         RowBox[{"Riffle", "[", 
          RowBox[{"pos", ",", " ", 
           RowBox[{"MovingAverage", "[", 
            RowBox[{"pos", ",", " ", "2"}], "]"}]}], "]"}]}]}], "\n", 
       "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"mainPol", "=", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{"\[FormalX]p", "-", "t"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"t", ",", " ", "pos"}], "}"}]}], "]"}], ",", " ", 
         "\[FormalX]p"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"minValPos", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[FormalI]pol", ",", " ", "mainPol"}], "}"}], "/.", 
        RowBox[{"MapIndexed", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[FormalX]p", "\[Rule]", "#"}], ",", " ", 
             RowBox[{"\[FormalI]pol", "\[Rule]", 
              RowBox[{"#2", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], ",", " ", 
          "pos"}], "]"}]}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"minPos", ",", " ", "minVal"}], "}"}], "=", "\n", "\t\t\t", 
       RowBox[{"First", "@", 
        RowBox[{"MinimalBy", "[", 
         RowBox[{
          RowBox[{"minValPos", "[", 
           RowBox[{"[", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "@", "pos"}], ",", " ", "2"}], "]"}], "]"}], 
           "]"}], ",", " ", "Last"}], "]"}]}]}], ";", "\n", "\t\t", 
      RowBox[{"minDiff", "=", "\n", "\t\t\t", 
       RowBox[{"Min", "@", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"minPos", ">", "1"}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"minValPos", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"minPos", "-", "1"}], ",", " ", "2"}], "]"}], "]"}], 
             "-", "minVal"}], ",", "\n", "\t\t\t\t\t", "\[Infinity]"}], "\n", 
           "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"minPos", "<", 
             RowBox[{"Length", "@", "pos"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"minValPos", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"minPos", "+", "1"}], ",", " ", "2"}], "]"}], "]"}], 
             "-", "minVal"}], ",", "\n", "\t\t\t\t\t", "\[Infinity]"}], "\n", 
           "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "}"}]}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"minDiff", ">", "0"}], ",", " ", "\n", "\t\t\t", 
        RowBox[{"dep", "=", 
         RowBox[{"dep", "/", "minDiff"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"dep", "=", "1"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expr", "=", 
          RowBox[{
           RowBox[{"dep", 
            RowBox[{"(", 
             RowBox[{"mainPol", "/.", 
              RowBox[{"\[FormalX]p", "\[Rule]", "#"}]}], ")"}]}], "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"dep", "*", "minVal"}], "-", "min"}], ")"}]}]}], "}"}], 
        ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"basic", "=", "expr"}], "}"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "basic"}], ">", "1"}], ",", "\n", "\t", 
             "\t\t\t\t", 
             RowBox[{"Total", "[", "basic", "]"}], ",", "\n", "\t", 
             "\t\t\t\t", "basic"}], "\n", "\t", "\t\t\t\t", "]"}]}], "\n", 
          "\t\t\t\t", "]"}], "&"}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t",
     "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQzbzZrnD+mdeO25b0lYLo19sVPoBogWfMX0H0upPy
4guAtJP+IQkQfe7hzfwVZ187cm/fUQaiF6zWrQXRTE0nGkC0L0vLAhB9babb
ahDN52+8G0Tr/Zu1D0S7SJ/5DKKjfyZ/B9E9bv1tF4F086ZnYDrlnEWCybnX
jqvStJJA9BGpEAvu868d1e6eAdOr+FL9QfSS+Cww3a8hnQei/+T4gOkJUVG3
ZID0s3LvuyD6nX3jHVkgnc1/7C2Itnuz7COInmS/gFMOSN8RWsIHonXZZ5qB
6Ia4x1YgWosl0RpM8x+3B4sLzXQA0QuW63mA6NyrWxNA9EF3eVHXK68d96nz
SoFoUbf/lW5AWuJVRi2IBgCGW7oz
  
  "],ExpressionUUID->"408fcd88-a639-4689-aa26-a7848a5041f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]HinderedRotor\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.731989260037402*^9, 3.7319892746085253`*^9}, {
  3.731989589886169*^9, 
  3.731989591515553*^9}},ExpressionUUID->"24ee5ffb-67bf-4881-a417-\
c3c2f8af8a60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"\"\<HinderedRotor\>\"", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"w", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<WellNumber\>\"", ",", " ",
           "3"}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"d", "=", 
        RowBox[{"Lookup", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", "\"\<WellDepth\>\"", ",", " ", 
          "5."}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"basic", "=", 
          RowBox[{"d", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["w", "2"], "*", "#"}], "]"}]}]}], "}"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "basic"}], ">", "1"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"Total", "[", "basic", "]"}], ",", "\n", "\t\t\t\t", 
          "basic"}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], 
      "&"}]}], "\n", "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.731159945959352*^9, 3.7311599804576063`*^9}, {
  3.731160961022451*^9, 3.731161000121834*^9}, {3.731161272993369*^9, 
  3.731161286068269*^9}, {3.731702654808814*^9, 3.731702709772344*^9}, {
  3.7317027614272003`*^9, 3.73170279026587*^9}, {3.731703044125525*^9, 
  3.731703130206279*^9}, {3.7317032576034*^9, 3.731703284843528*^9}, {
  3.7317037103783283`*^9, 3.731703739124189*^9}, {3.7317868044773617`*^9, 
  3.731786807209291*^9}, {3.731989249775194*^9, 3.731989277085188*^9}, {
  3.7319895096145153`*^9, 3.731989558748035*^9}, {3.732070881274988*^9, 
  3.732070882623251*^9}, {3.732074524009158*^9, 3.732074524380455*^9}, {
  3.735169250309519*^9, 
  3.735169258678437*^9}},ExpressionUUID->"00d75572-686a-44b0-b973-\
22376492e15a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.731989283615492*^9, 
  3.7319892852873487`*^9}},ExpressionUUID->"4f784278-5967-4872-9262-\
cec04b407c73"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"name_String", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FileExistsQ", "[", "name", "]"}], "||", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"ChemDVRPotentials", "[", "]"}], ",", " ", "name"}], "]"}]}], 
     ",", "\n", "\t\t", "name", ",", "\n", "\t\t", 
     RowBox[{"With", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"pe", "=", 
          RowBox[{"PhysicalSystemData", "[", 
           RowBox[{"name", ",", " ", "\"\<PotentialEnergy\>\""}], "]"}]}], 
         ",", "\n", "\t", "\t\t\t", 
         RowBox[{"crds", "=", 
          RowBox[{"PhysicalSystemData", "[", 
           RowBox[{"name", ",", " ", "\"\<Coordinates\>\""}], "]"}]}], ",", 
         "\n", "\t", "\t\t\t", 
         RowBox[{"vars", "=", 
          RowBox[{"PhysicalSystemData", "[", 
           RowBox[{"name", ",", " ", "\"\<Variables\>\""}], "]"}]}]}], "\n", 
        "\t", "\t\t\t", "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MissingQ", "@", "pe"}], "||", 
          RowBox[{"MissingQ", "@", "crds"}]}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"ChemDVRObject", "::", "nonpot"}], ",", " ", "name"}], 
           "]"}], ";", "\n", "\t", "\t", "\t\t", 
          RowBox[{"Throw", "[", "$Failed", "]"}]}], ",", "\n", "\t", "\t\t\t", 
         RowBox[{"With", "[", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{"potExpr", "=", "\n", "\t", "\t\t\t\t\t\t", 
             RowBox[{"pe", "/.", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{"Join", "[", "\n", "\t", "\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"MapIndexed", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                   "Sequence", "@@", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "\[Rule]", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Slot", ",", " ", "#2"}], "]"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"#", "[", "___", "]"}], "\[Rule]", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"Slot", ",", " ", "#2"}], "]"}]}]}], "}"}]}], 
                   "&"}], ",", "\n", "\t", "\t", "\t", "\t", "\t", 
                  "\t\t\t\t\t", "crds"}], "\n", "\t", "\t", "\t", "\t", "\t", 
                 "\t\t\t\t\t", "]"}], ",", " ", "\n", "\t", "\t", "\t", "\t", 
                "\t\t\t\t\t", 
                RowBox[{"Flatten", "@", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                 RowBox[{"Join", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"{", "ops", "}"}], ",", " ", "\n", "\t", 
                   "\t\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                   "Replace", "[", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Flatten", "@", 
                    RowBox[{"{", "ops", "}"}]}], ",", "\n", "\t", "\t", "\t", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"s_String", "\[Rule]", "v_"}], ")"}], 
                    "\[RuleDelayed]", "\n", "\t", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"QuantityVariable", "[", 
                    RowBox[{"_", ",", " ", "s"}], "]"}], "\[Rule]", "v"}], 
                    ",", " ", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"QuantityVariable", "[", 
                    RowBox[{"s", ",", " ", "_"}], "]"}], "\[Rule]", "v"}]}], 
                    "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t\t\t", "}"}]}]}], ",", 
                    "\n", "\t", "\t\t\t\t\t\t\t\t\t\t\t", "1"}], "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t", 
                  "\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t", 
                "\t\t\t\t\t\t\t\t", 
                RowBox[{"Thread", "[", 
                 RowBox[{"vars", "\[Rule]", "1"}], "]"}]}], "\n", "\t", 
               "\t\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t\t\t\t\t\t", 
            "}"}], ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{"Function", "[", "potExpr", "]"}]}], "\n", "\t", 
          "\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
      "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultNamedPotential", "[", "e___", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ChemDVRObject", "::", "nonpot"}], ",", " ", 
      RowBox[{"{", "e", "}"}]}], "]"}], ";", 
    RowBox[{"Throw", "[", "$Failed", "]"}]}], ")"}]}]}], "CodeInput",
 CellChangeTimes->{{3.731159945959352*^9, 3.7311599804576063`*^9}, {
   3.731160961022451*^9, 3.731161000121834*^9}, {3.731161272993369*^9, 
   3.731161286068269*^9}, {3.731702654808814*^9, 3.731702709772344*^9}, {
   3.7317027614272003`*^9, 3.73170279026587*^9}, {3.731703044125525*^9, 
   3.731703130206279*^9}, {3.7317032576034*^9, 3.731703284843528*^9}, {
   3.7317037103783283`*^9, 3.731703739124189*^9}, {3.7317868044773617`*^9, 
   3.731786807209291*^9}, 3.731989249775194*^9, {3.732074084874954*^9, 
   3.732074100504568*^9}},ExpressionUUID->"f1757c79-debf-4bd8-a2d5-\
3d2fccecfe55"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]GridBasedPotential\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.711061095682518*^9, 3.711061097785287*^9}, {
  3.734897533956188*^9, 
  3.734897534659515*^9}},ExpressionUUID->"0d591dd9-97a1-4fd1-b288-\
90186ef4adba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dvrImportPotential", "[", 
    RowBox[{"obj_", ",", 
     RowBox[{"grid", ":", 
      RowBox[{"{", 
       RowBox[{"_List", ",", "___"}], "}"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"g", "=", "\n", "\t\t\t", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"grid", ",", 
           RowBox[{
            RowBox[{"Depth", "[", "grid", "]"}], "-", "3"}]}], "]"}], ",", 
         RowBox[{"AllTrue", "[", "NumericQ", "]"}]}], "]"}]}], "\n", "\t\t\t",
       "}"}], ",", "\n", "\t\t", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{";;", 
            RowBox[{"-", "2"}]}]}], "]"}], "]"}], ",", 
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}]}], "\n", "\t", 
    "\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dvrImportPotential", "[", 
   RowBox[{"obj_", ",", 
    RowBox[{"vals", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "?", "NumericQ"}], ",", "___"}], "}"}]}]}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{"grid", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], "&&", 
           RowBox[{"MatrixQ", "@", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "]"}], "&"}], "@", 
       RowBox[{"ChemDVRGrid", "[", "obj", "]"}]}]}], "\n", "\t\t", "}"}], ",",
     "\n", "\t\t", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"grid", ",", 
         RowBox[{
          RowBox[{"Depth", "[", "grid", "]"}], "-", "3"}]}], "]"}], ",", 
       "vals"}], "}"}], "]"}]}], "\n", "\t", "\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.711059681406206*^9, 3.711059729643276*^9}, {
  3.711059782908168*^9, 3.711059796587542*^9}, {3.7110601820479383`*^9, 
  3.711060301856887*^9}, {3.711060436297085*^9, 3.711060488738284*^9}, {
  3.711060541945222*^9, 3.7110606192770576`*^9}, {3.7110608211668577`*^9, 
  3.711060826318776*^9}, {3.711060858188053*^9, 3.711060860996961*^9}, {
  3.7110609545591917`*^9, 3.711061064311831*^9}, {3.7110611098690567`*^9, 
  3.711061124893055*^9}, {3.7159862390232267`*^9, 3.7159862400239*^9}, {
  3.71598787548462*^9, 
  3.715987902883874*^9}},ExpressionUUID->"66e9af72-7793-43fc-ae6a-\
563dd9b256fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dvrImportPotential", "[", 
   RowBox[{"obj_", ",", 
    RowBox[{"file_String", "?", "FileExistsQ"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"res", "=", "\n", "\t\t\t", 
      RowBox[{"dvrImportPotential", "[", "\n", "\t\t\t\t", 
       RowBox[{"obj", ",", "\n", "\t\t\t\t", 
        RowBox[{"Import", "[", "file", "]"}]}], "\n", "\t", "\t\t\t", "]"}]}],
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"res", "/;", 
     RowBox[{"AllTrue", "[", 
      RowBox[{"res", ",", "ListQ"}], "]"}]}]}], "\n", "\t", "\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.711060271297646*^9, 3.711060287311977*^9}, {
  3.7110603998614388`*^9, 3.7110604257078953`*^9}, {3.711060627683467*^9, 
  3.7110606407151613`*^9}, {3.711061563098775*^9, 3.711061564601282*^9}, {
  3.715986233787491*^9, 3.715986237151125*^9}, {3.715987910374197*^9, 
  3.715987927927762*^9}},ExpressionUUID->"8006dec8-de8f-4885-ad1b-\
2b632c951d90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "dvrAlignPotential", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Tolerance", "\[Rule]", ".01"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<GridPotentialPrepFunction\>\"", "\[Rule]", "Identity"}]}], 
    "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dvrAlignPotential", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"grid", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "OptionQ"}], "]"}]}], ",", "\n", "\t", 
    RowBox[{"peInput", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "OptionQ"}], "]"}]}], ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"peGrid", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "OptionValue", "[", "\"\<GridPotentialPrepFunction\>\"", "]"}], "@", 
         "peInput"}], ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Except", "[", "_List", "]"}], ":>", "peInput"}]}], "\n", 
       "\t\t\t\t", "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Dimensions", "[", "grid", "]"}], ";", "\n", "\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"d1", "=", 
          RowBox[{"Depth", "[", "grid", "]"}]}], ",", "\n", "\t\t\t", 
         RowBox[{"d2", "=", 
          RowBox[{"Depth", "[", "peGrid", "]"}]}], ",", "\n", "\t\t\t", 
         RowBox[{"tol", "=", 
          RowBox[{"OptionValue", "[", "Tolerance", "]"}]}]}], "\n", "\t\t\t", 
        "}"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"d1", "<", "d2"}], ",", 
          RowBox[{"Throw", "[", "$Failed", "]"}]}], "]"}], ";", "\n", "\t", 
        "\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"points1", "=", "\n", "\t\t\t\t\t\t", 
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"grid", "[", 
                  RowBox[{"[", 
                   RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "\[Rule]", 
                 "#"}], "&"}], ",", " ", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"Position", "[", 
                RowBox[{"grid", ",", 
                 RowBox[{"{", 
                  RowBox[{"__", "?", "NumericQ"}], "}"}]}], "]"}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{"points2", "=", "\n", "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Last", "@", 
                 RowBox[{"Dimensions", "[", "peGrid", "]"}]}], "===", "2"}], 
               ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"peGrid", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"Most", "/@", "peGrid"}]}], "\n", "\t\t\t\t\t\t\t", 
              "]"}]}]}], "\n", "\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "points1", "]"}], "=!=", 
             RowBox[{"Length", "[", "points2", "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"interpf", "=", 
                RowBox[{"Interpolation", "[", "peGrid", "]"}]}], "}"}], ",", 
              "\n", "\t\t\t\t\t\t", 
              RowBox[{"ReplacePart", "[", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"grid", ",", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{"Thread", "@", "\n", "\t\t\t\t\t\t\t\t", 
                 RowBox[{"Rule", "[", 
                  RowBox[{
                   RowBox[{"Last", "/@", "points1"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"Quiet", "[", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"interpf", "@@@", 
                    RowBox[{"Map", "[", 
                    RowBox[{"First", ",", "points1"}], "]"}]}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"InterpolatingFunction", "::", "dmval"}]}], "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                  "\t\t\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t\t", 
               "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
            
            RowBox[{"(*", "\n", "\t\t\t\t\t", 
             RowBox[{
             "Find", " ", "the", " ", "nearest", " ", "point", " ", "to", " ",
               "the", " ", "points", "\n", "\t\t\t\t\t\t", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "issues", " ", "with", " ", "duplicates", " ", "may", " ", 
                 "arise"}], ",", " ", 
                RowBox[{
                 RowBox[{"but", " ", "only", " ", "for", " ", "ill"}], "-", 
                 RowBox[{"aligned", " ", "data"}]}]}], " ", ")"}], "\n", 
              "\t\t\t\t\t", "Replace", " ", "the", " ", "grid", " ", "points",
               " ", "with", " ", "the", " ", "potential", " ", "values"}], 
             "\n", "\t\t\t\t\t", "\n", "\t\t\t\t\t", "*)"}], "\n", 
            "\t\t\t\t\t", 
            RowBox[{"Block", "[", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"nearestChoices", "=", "points1"}], ",", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"nearestValues", "=", "points2"}], ",", "\n", 
                "\t\t\t\t\t\t", 
                RowBox[{"nearestFound", "=", 
                 RowBox[{"{", "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}], ",", 
              "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"While", "[", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"nearestFound", "=", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"nearestFound", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "DeleteDuplicates", "@", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "AssociationThread", "[", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                    
                    RowBox[{
                    "nearestValues", "->", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Map", "[", 
                    RowBox[{"First", ",", " ", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{"nearestChoices", ",", " ", "nearestValues"}], 
                    "]"}]}], "]"}]}], "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                    "]"}]}]}], "\n", "\t\t\t\t\t\t\t\t\t", "}"}]}], ";", "\n",
                  "\t\t\t\t\t\t\t", 
                 RowBox[{"nearestChoices", "=", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"DeleteCases", "[", 
                   RowBox[{
                   "nearestChoices", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"_", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"Alternatives", "@@", 
                    RowBox[{"Values", "@", 
                    RowBox[{"Last", "[", "nearestFound", "]"}]}]}], ")"}]}]}],
                    "\n", "\t\t\t\t\t\t\t\t\t", "]"}]}], ";", "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"nearestValues", "=", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"DeleteCases", "[", 
                   RowBox[{"nearestValues", ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Alternatives", "@@", 
                    RowBox[{"Keys", "@", 
                    RowBox[{"Last", "[", "nearestFound", "]"}]}]}]}], "\n", 
                   "\t\t\t\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Length", "[", "nearestValues", "]"}], ">", "0"}]}],
                 "\n", "\t\t\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t\t", 
               RowBox[{"nearestFound", "=", 
                RowBox[{"Apply", "[", 
                 RowBox[{"Join", ",", " ", 
                  RowBox[{"Map", "[", 
                   RowBox[{"Values", ",", " ", 
                    RowBox[{"Flatten", "[", "nearestFound", "]"}]}], "]"}]}], 
                 "]"}]}], ";", "\n", "\t\t\t\t\t\t", 
               RowBox[{"ReplacePart", "[", "\n", "\t\t\t\t\t\t\t", 
                RowBox[{"grid", ",", "\n", "\t\t\t\t\t\t\t", 
                 RowBox[{"Thread", "[", "\n", "\t\t\t\t\t\t\t\t", 
                  RowBox[{"nearestFound", "->", "\n", "\t\t\t\t\t\t\t\t", 
                   RowBox[{"peGrid", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\n", 
                  "\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t", 
                "]"}]}]}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", 
           "]"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "]"}]}]}], 
   "\n", "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.71106115983678*^9, 3.711061291106675*^9}, {
   3.7110613260501213`*^9, 3.711061347534607*^9}, {3.7110614656910973`*^9, 
   3.711061520285655*^9}, {3.711061661325329*^9, 3.711061673506959*^9}, {
   3.7110617100698547`*^9, 3.711061772317848*^9}, {3.711062209700679*^9, 
   3.711062221899032*^9}, {3.711062346909327*^9, 3.7110624055650673`*^9}, {
   3.7110624613885813`*^9, 3.711062487556774*^9}, {3.711062579599313*^9, 
   3.71106264441905*^9}, {3.711062696623996*^9, 3.711062737638442*^9}, {
   3.711838225556767*^9, 3.711838330269305*^9}, {3.7118383699853163`*^9, 
   3.711838371363419*^9}, {3.711838574548581*^9, 3.711838647228166*^9}, {
   3.711839289681869*^9, 3.711839290297269*^9}, {3.71598622550419*^9, 
   3.715986230864448*^9}, {3.715986298669754*^9, 3.71598637700975*^9}, {
   3.715986560116501*^9, 3.715986561368948*^9}, {3.7159867286902122`*^9, 
   3.7159867375252743`*^9}, {3.7159867788667507`*^9, 3.715987002514758*^9}, {
   3.715987050347571*^9, 3.715987050826755*^9}, {3.715987775490653*^9, 
   3.7159877795751343`*^9}, {3.715988057279538*^9, 3.715988062221723*^9}, {
   3.715988528732129*^9, 3.715988785361414*^9}, {3.715988821098933*^9, 
   3.7159888307772083`*^9}, {3.715988864252236*^9, 3.7159888932814913`*^9}, 
   3.715988980198165*^9, {3.715989062873452*^9, 3.7159891265257263`*^9}, {
   3.715989340372538*^9, 3.715989449793867*^9}, {3.715989487219141*^9, 
   3.715989531427794*^9}, {3.7159897207599363`*^9, 3.715989789130486*^9}, {
   3.715995824497034*^9, 3.7159958474403343`*^9}, {3.71599591939919*^9, 
   3.7159959527038794`*^9}, {3.715995985073577*^9, 3.7159960248377542`*^9}, {
   3.715997129994727*^9, 3.715997134361384*^9}, 3.7159978969513187`*^9, {
   3.715997979050208*^9, 3.715998118588015*^9}, {3.715998152732917*^9, 
   3.715998204313005*^9}, {3.715998305523741*^9, 3.715998352198983*^9}, {
   3.715998397696088*^9, 3.715998826399201*^9}, {3.715998887027473*^9, 
   3.7159988905745697`*^9}, {3.7159989237770023`*^9, 3.715998943862809*^9}, {
   3.715999019447576*^9, 3.715999038190391*^9}, {3.715999105868196*^9, 
   3.715999127799575*^9}, {3.7159992196062927`*^9, 3.7159992302545*^9}, {
   3.7159992829263*^9, 3.715999284465829*^9}, {3.7159993787501593`*^9, 
   3.715999424942309*^9}, 3.716001267986636*^9, {3.716001305443116*^9, 
   3.7160014052146387`*^9}},ExpressionUUID->"875c2f35-8ac8-4c85-a188-\
af4bbac009da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "dvrImportAlignPotential", "]"}], "=", 
   RowBox[{"Options", "[", "dvrAlignPotential", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dvrImportAlignPotential", "[", 
   RowBox[{"obj_", ",", "grid_", ",", 
    RowBox[{"pot", ":", 
     RowBox[{"Except", "[", 
      RowBox[{"_", "?", "OptionQ"}], "]"}]}], ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", "=", 
      RowBox[{"dvrImportPotential", "[", 
       RowBox[{"obj", ",", "pot"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"dvrAlignPotential", "[", 
     RowBox[{"grid", ",", "p", ",", "ops"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.7159864060853577`*^9, 3.715986421993225*^9}, {
   3.715986577436757*^9, 3.7159866660607986`*^9}, {3.715986714199174*^9, 
   3.715986714598933*^9}, {3.71598733256569*^9, 3.715987337447113*^9}, {
   3.715987931751667*^9, 3.715987936170681*^9}, 
   3.715988051428129*^9},ExpressionUUID->"d0fedf88-150b-4d68-9de7-\
ac99ed1a3aa6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPotentialEnergy\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.7247952957921553`*^9, 
  3.731703347748749*^9},ExpressionUUID->"640c65fb-c1c2-4d75-a4ae-\
44d398e03b2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChemDVRObject", "::", "badpot"}], "=", "\n", "\t", 
    "\"\<Potential function `` didn't return a numerical vector over the \
gridpoints\>\""}], ";"}], " "}]], "CodeInput",
 CellChangeTimes->{{3.731158644702427*^9, 
  3.731158666133348*^9}},ExpressionUUID->"bea79571-9aa8-460f-a99e-\
4cdb6cf3ec26"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefaultPotentialFunction\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7323086233019333`*^9},ExpressionUUID->"874bd405-6d02-41b6-8023-\
6ed943622ade"],

Cell["\<\
\[LeftCeiling]
\t
\tNeed good symbolic representation for a direct product of potential \
functions, which can also work for the grid and for the kinetic energy too.

\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.732313986113139*^9, 3.7323140144250193`*^9}, {
  3.7351492988461103`*^9, 
  3.735149304787219*^9}},ExpressionUUID->"e322b52c-1783-4d7e-bc7a-\
baeab36803f3"],

Cell[BoxData[
 RowBox[{"iChemDVRDefaultPotentialFunction", "//", "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.732308620348827*^9, 
  3.732308620946097*^9}},ExpressionUUID->"6b1243ee-7843-4bd2-8a89-\
fc386b8706ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", 
    RowBox[{"s_String", ",", " ", "ops___"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"s", ",", " ", "ops"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s_String", ",", " ", 
       RowBox[{"op___", "?", "OptionQ"}]}], "}"}], ",", "\n", "\t", "___"}], 
    "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"ChemDVRDefaultNamedPotential", "[", 
    RowBox[{"s", ",", " ", "op"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s_", ",", " ", "n_Integer"}], "}"}], ",", " ", "\n", "\t", 
     "ops___"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"NonCommutativeMultiply", "@@", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"s", ",", " ", "n"}], "]"}]}], ",", "\n", "\t\t", "ops"}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"NonCommutativeMultiply", "|", "List", "|", "Cross"}], ")"}], 
      "[", 
      RowBox[{"a", ":", 
       RowBox[{"Repeated", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", "OptionQ"}], "]"}], ".."}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", " ", "\[Infinity]"}], "}"}]}], "]"}]}], "]"}], 
     ",", " ", "\n", "\t", "ops___"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"Function", "[", "\n", "\t\t", 
     RowBox[{"Evaluate", "@", "\n", "\t\t\t", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"Slot", "@@", "#2"}], "]"}], "&"}], ",", " ", "\n", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"iChemDVRDefaultPotentialFunction", "[", 
           RowBox[{"#", ",", " ", "ops"}], "]"}], "&"}], "/@", 
         RowBox[{"{", "a", "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t",
      "]"}], "/.", 
    RowBox[{
     RowBox[{"Slot", "[", "n_", "]"}], "\[RuleDelayed]", 
     RowBox[{"#", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"NonCommutativeMultiply", "|", "List", "|", "Cross"}], ")"}], 
      "[", 
      RowBox[{"a", ":", 
       RowBox[{"Except", "[", 
        RowBox[{"_", "?", "OptionQ"}], "]"}]}], "]"}], ",", " ", "\n", "\t", 
     "ops___"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"iChemDVRDefaultPotentialFunction", "[", 
    RowBox[{"a", ",", " ", "ops"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"iChemDVRDefaultPotentialFunction", "[", 
   RowBox[{"e_", ",", " ", "___"}], "]"}], ":=", "\n", "\t", 
  "e"}]}], "CodeInput",
 CellChangeTimes->{{3.732307840622902*^9, 3.7323079181443768`*^9}, {
  3.732308523850862*^9, 3.7323085763388243`*^9}, {3.732308617701934*^9, 
  3.732308648054762*^9}, {3.7323962429814177`*^9, 3.7323963063262587`*^9}, {
  3.732396372206493*^9, 3.7323964648404207`*^9}, {3.73242168827665*^9, 
  3.732421722863482*^9}, {3.734896271179063*^9, 3.7348963648586082`*^9}, {
  3.73489680958148*^9, 3.7348968145673933`*^9}, {3.734896871163299*^9, 
  3.7348970476301947`*^9}, {3.7349082209854593`*^9, 
  3.7349082316514072`*^9}},ExpressionUUID->"6eabf2f0-7834-4ccd-970c-\
84de60599af4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPotentialEnergyElementFunction\[RightFloor]\
", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734908300769663*^9, 3.7349083108941507`*^9}, {
  3.734908431302496*^9, 
  3.7349084335430737`*^9}},ExpressionUUID->"44044b7d-22ac-4e4f-a9f4-\
c8aff24a374c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "Options", "[", "ChemDVRDefaultPotentialEnergyElementFunction", "]"}], "=",
    "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "Automatic"}], ",", "\n",
      "\t\t", 
     RowBox[{"Function", "\[Rule]", "Automatic"}]}], "\n", "\t\t", "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultPotentialEnergyElementFunction", "[", 
   RowBox[{"ops", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Replace", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", "\t\t", 
     RowBox[{"Lookup", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"{", "ops", "}"}]}], ",", " ", "\"\<PotentialFunction\>\"", 
       ",", " ", "\n", "\t\t\t\t", 
       RowBox[{"Lookup", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{
         "Options", "[", "ChemDVRDefaultPotentialEnergyElementFunction", 
          "]"}], ",", " ", "\n", "\t\t\t\t\t", "\"\<PotentialFunction\>\""}], 
        "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}], "\n", "\t\t\t", 
     "]"}], ",", "\n", "\t", "\t", 
    RowBox[{
     RowBox[{"Except", "[", "\n", "\t", "\t\t", 
      RowBox[{
      "_Function", "|", "_InterpolatingFunction", "|", "\n", "\t", "\t\t", 
       "_CompiledFunction", "|", 
       RowBox[{"_Symbol", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{
            RowBox[{"DownValues", "[", "#", "]"}], ">", "0"}], "]"}], "&"}], 
         ")"}]}]}], "\n", "\t", "\t\t", "]"}], ":>", "\n", "\t", "\t\t", 
     RowBox[{"iChemDVRDefaultPotentialFunction", "[", "\n", "\t", "\t\t\t", 
      RowBox[{"Lookup", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"{", "ops", "}"}]}], ",", " ", "Function", ",", " ", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"Lookup", "[", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{
          "Options", "[", "ChemDVRDefaultPotentialEnergyElementFunction", 
           "]"}], ",", " ", "\n", "\t\t\t\t\t\t", "Function"}], "\n", 
         "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}], "\n", "\t\t\t\t",
       "]"}]}]}], "\n", "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.734908317238635*^9, 3.734908361515026*^9}, {
  3.734908435402933*^9, 3.7349084542005167`*^9}, {3.73515513149615*^9, 
  3.735155137256124*^9}},ExpressionUUID->"511a14bd-a59e-4f5d-8e02-\
6542dd53df3e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRPotentialEnergy\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7351492860815563`*^9, 
  3.735149315448614*^9}},ExpressionUUID->"1b8fa04c-503d-4868-baf2-\
a87967ad698e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iChemDVRPotentialEnergy", "[", 
   RowBox[{"gridpoints_", ",", " ", "function_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"gpVec", "=", "\n", "\t\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"Quiet", "@", 
         RowBox[{"function", "@", "gridpoints"}]}], ",", " ", "\n", 
        "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{"_List", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
              RowBox[{"Length", "[", "gridpoints", "]"}]}], "&"}], ")"}]}], 
          "]"}], ":>", 
         RowBox[{"Map", "[", 
          RowBox[{"function", ",", " ", "gridpoints"}], "]"}]}]}], "]"}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"VectorQ", "@", "gpVec"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"ChemDVRObject", "::", "badpot"}], ",", " ", "function"}], 
        "]"}], ";", "\n", "\t\t\t", 
       RowBox[{"Throw", "[", "$Failed", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"SparseArray", "[", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "1"}], "}"}], "]"}], "->", "gpVec"}], 
       "]"}]}], "\n", "\t", "\t\t", "]"}]}], "\n", "\t", "\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.735149324862508*^9, 
  3.735149354065137*^9}},ExpressionUUID->"6a62e11a-598c-4ddb-8df0-\
f0fad297a992"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPotentialEnergy\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732308631126637*^9, 
  3.732308636105748*^9}},ExpressionUUID->"60d50ce4-43fe-43d3-b6b5-\
40da14a529f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultPotentialEnergy", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
     "Options", "[", "ChemDVRDefaultPotentialEnergyElementFunction", "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultPotentialEnergy", "[", 
   RowBox[{"grid_", ",", " ", 
    RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"pf", "=", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"Function", "[", "e_List", "]"}], "\[RuleDelayed]", 
          RowBox[{"Function", "[", 
           RowBox[{"Total", "[", "e", "]"}], "]"}]}], "]"}], "@", "\n", 
        "\t\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultPotentialEnergyElementFunction", "[", "ops", "]"}]}]}],
       ",", "\n", "\t\t\t", 
      RowBox[{"gp", "=", "\n", "\t\t\t\t", 
       RowBox[{"ChemDVRDefaultGridPointList", "[", 
        RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "ops", "}"}], ",", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], "\n", 
          "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", 
     "\t\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"iChemDVRPotentialEnergy", "[", 
     RowBox[{"gp", ",", " ", "pf"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 3.718048462412904*^9}, {
   3.718048499432167*^9, 3.718048580482065*^9}, {3.7180514962992773`*^9, 
   3.718051498934264*^9}, {3.718051591926693*^9, 3.7180516583028107`*^9}, {
   3.7277265075922527`*^9, 3.727726520287879*^9}, 3.7277317599198933`*^9, {
   3.7277317956500797`*^9, 3.727731809806579*^9}, {3.731158275580161*^9, 
   3.73115844918017*^9}, {3.731158504203574*^9, 3.7311586387019567`*^9}, {
   3.731158714188323*^9, 3.7311587412025347`*^9}, {3.731159884118897*^9, 
   3.731159886400958*^9}, {3.731161014366889*^9, 3.731161042475547*^9}, {
   3.7317033497071743`*^9, 3.731703400814232*^9}, {3.731703571460451*^9, 
   3.731703593145343*^9}, {3.731703755185617*^9, 3.7317037830556593`*^9}, {
   3.7323078378564587`*^9, 3.732307873762175*^9}, {3.732308583784424*^9, 
   3.732308609962387*^9}, {3.7325120256455793`*^9, 3.732512029508812*^9}, {
   3.732515889975792*^9, 3.732515897023177*^9}, {3.732515952794894*^9, 
   3.732515953806324*^9}, {3.734896112787912*^9, 3.734896176745227*^9}, {
   3.734896255213624*^9, 3.7348962633669653`*^9}, {3.734896750758012*^9, 
   3.734896762852803*^9}, {3.7348968330710497`*^9, 3.734896841182722*^9}, {
   3.734908234287483*^9, 3.73490824471109*^9}, {3.734908373395298*^9, 
   3.734908397983758*^9}, {3.734908458931283*^9, 3.734908460010092*^9}, {
   3.735149361241414*^9, 3.735149371056888*^9}, {3.735169292963431*^9, 
   3.735169293605179*^9}},ExpressionUUID->"e8baee08-cf00-4f85-a457-\
ac95fb6d1f87"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGridPotentialEnergy\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734897083375174*^9, 3.734897087103837*^9}, 
   3.734897412543874*^9},ExpressionUUID->"82f2ba25-d13d-4e0b-8842-\
aab0ab4ae246"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultGridPotentialEnergy", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridPotentialEnergy", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"grid", ":", "_List"}], ",", " ", "\n", "\t", 
     RowBox[{"pe", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Except", "[", "_List", "]"}], ",", " ", "___"}], "}"}]}], 
     ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"MapThread", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Flatten", "@*", "List"}], ",", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"ChemDVRDefaultGridPointList", "[", 
        RowBox[{"grid", ",", " ", "ops"}], "]"}], ",", "\n", "\t\t\t", "pe"}],
       "\n", "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultGridPotentialEnergy", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"grid", ":", "_List"}], ",", " ", "\n", "\t", 
    RowBox[{"pe", ":", 
     RowBox[{"_SparseArray", "|", 
      RowBox[{"_List", "?", 
       RowBox[{"(", "SquareMatrixQ", ")"}]}]}]}], ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"ChemDVRDefaultGridPotentialEnergy", "[", "\n", "\t\t", 
   RowBox[{"grid", ",", "\n", "\t\t", 
    RowBox[{"Normal", "@", 
     RowBox[{"Diagonal", "@", "pe"}]}], ",", "\n", "\t\t", "ops"}], "\n", 
   "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.734897089607368*^9, 3.734897233560751*^9}, {
  3.7348974074628963`*^9, 3.734897410990103*^9}, {3.7348978577129593`*^9, 
  3.734897933353877*^9}, {3.735137532509691*^9, 
  3.7351375422025747`*^9}},ExpressionUUID->"8342752e-f057-47cd-9b1e-\
ebae6040c9f6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]KineticEnergy\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734895005144917*^9, 
  3.734895008799642*^9}},ExpressionUUID->"c3b2ec38-27fa-4c97-81e7-\
909ef955bf97"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRKroeneckerProductKineticEnergy\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.72772649488496*^9, 3.727726526863521*^9}, {
  3.732066671238274*^9, 3.732066673699185*^9}, {3.7323023608602667`*^9, 
  3.7323023628165007`*^9}},ExpressionUUID->"88830f9a-0f3a-4524-bdc1-\
929e58de9ef5"],

Cell["\<\
\[LeftCeiling]Many, many, many thanks to Henrik Schumacher for this wonderful \
implementation:
\thttps://mathematica.stackexchange.com/a/165953/38205\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.727726588967136*^9, 3.727726626597754*^9}, 
   3.72773166068155*^9, {3.72822823994071*^9, 
   3.728228243339076*^9}},ExpressionUUID->"56e18733-d234-4beb-858d-\
72556b5dda91"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Imp\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7320667512096043`*^9, 
  3.732066756089809*^9}},ExpressionUUID->"b98c4a04-76c6-430a-ac65-\
137aaad4b73d"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dvrKGetValues\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.732066691135359*^9},ExpressionUUID->"54be5a62-b506-46a0-bcc8-\
dd4963c38ce5"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", 
     RowBox[{"OwnValues", "[", "dvrKGetValues", "]"}]}], "\[Equal]", "0"}], 
   ",", "\n", "\t", 
   RowBox[{"dvrKGetValues", " ", ":=", " ", "\n", "\t\t", 
    RowBox[{"dvrKGetValues", "=", "\n", "\t", "\t\t", 
     RowBox[{"Compile", "[", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"k1row", ",", " ", "_Real", ",", " ", "1"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"blockvals", ",", " ", "_Real", ",", " ", "2"}], "}"}], ",",
          " ", "\n", "\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"diagidx", ",", " ", "_Integer", ",", " ", "1"}], "}"}], 
         ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "_Integer"}], "}"}]}], "\n", "\t\t\t\t\t", 
        "}"}], ",", "\n", "\t\t   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "A", "}"}], ",", "\n", "\t\t    ", 
         RowBox[{
          RowBox[{"A", " ", "=", "\n", "\t\t    \t", 
           RowBox[{"Join", "[", "\n", "\t\t\t      ", 
            RowBox[{
             RowBox[{"Table", "[", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"k1row", ",", " ", "k"}], "]"}], ",", " ", "\n", "\t",
                "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"l", ",", " ", "1", ",", " ", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", "blockvals", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", "\n", 
               "\t", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"k", ",", " ", "1", ",", " ", "i"}], "}"}]}], "\n", 
              "\t", "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t      ", 
             "blockvals", ",", "\n", "\t", "\t\t      ", 
             RowBox[{"Table", "[", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"k1row", ",", " ", "k"}], "]"}], ",", " ", "\n", "\t",
                "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"l", ",", " ", "1", ",", " ", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", "blockvals", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", "\n", 
               "\t", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"k", ",", " ", 
                 RowBox[{"i", " ", "+", " ", "2"}], ",", " ", 
                 RowBox[{"Length", "[", "k1row", "]"}]}], "}"}]}], "\n", "\t",
               "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t      ", "2"}], 
            "\n", "\t", "\t\t      ", "]"}]}], ";", "\n", "\t\t    ", 
          RowBox[{"Do", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", 
               RowBox[{"k", ",", " ", 
                RowBox[{
                 RowBox[{"Compile`GetElement", "[", 
                  RowBox[{"diagidx", ",", " ", "k"}], "]"}], " ", "+", " ", 
                 "i"}]}], "]"}], "]"}], " ", "+=", " ", "\n", "\t\t\t\t\t\t", 
             
             RowBox[{"Compile`GetElement", "[", 
              RowBox[{"k1row", ",", " ", 
               RowBox[{"i", " ", "+", " ", "1"}]}], "]"}]}], ",", " ", "\n", 
            "\t\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{"k", ",", " ", "1", ",", " ", 
              RowBox[{"Length", "[", "blockvals", "]"}]}], "}"}]}], "\n", 
           "\t\t\t\t\t", "]"}], ";", "\n", "\t\t    ", "A"}]}], "\n", 
        "\t\t    ", "]"}], ",", "\n", "\t", "\t", "   ", 
       RowBox[{"RuntimeAttributes", " ", "->", " ", 
        RowBox[{"{", "Listable", "}"}]}], ",", "\n", "\t", "\t", "   ", 
       RowBox[{"Parallelization", " ", "->", " ", "True"}], ",", "\n", "\t", 
       "\t", "   ", 
       RowBox[{"CompilationTarget", " ", "->", " ", "\"\<C\>\""}], ",", "\n", 
       "\t", "\t", "   ", 
       RowBox[{"RuntimeOptions", " ", "->", " ", "\"\<Speed\>\""}]}], "\n", 
      "\t", "\t   ", "]"}]}]}]}], "\n", "\t", "]"}]], "CodeInput",
 CellChangeTimes->{{3.728228164522757*^9, 3.72822823208564*^9}, {
  3.72822850787564*^9, 
  3.7282285735910788`*^9}},ExpressionUUID->"14d3f449-ff95-4676-99c3-\
f5925d71ea27"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dvrKGetColumnIndices\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7320666985687227`*^9},ExpressionUUID->"7a8bc86a-4686-40bd-b86a-\
d5fe4163505a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", 
      RowBox[{"OwnValues", "[", "dvrKGetColumnIndices", "]"}]}], "\[Equal]", 
     "0"}], ",", "\n", "\t", 
    RowBox[{"dvrKGetColumnIndices", " ", ":=", " ", "\n", "\t\t", 
     RowBox[{"dvrKGetColumnIndices", "=", "\n", "\t\t\t", 
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t", "\t    ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"blockci", ",", " ", "_Integer", ",", " ", "3"}], "}"}], 
          ",", " ", 
          RowBox[{"{", 
           RowBox[{
           "diagci", ",", " ", "_Integer", ",", " ", "\n", "\t", "\t", 
            "     ", "3"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"m", ",", " ", "_Integer"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"n", ",", " ", "_Integer"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "_Integer"}], "}"}]}], "\n", "\t", "\t", 
         "    ", "}"}], ",", "\n", "\t", "\t", "   ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", " ", ">", " ", "0"}], ",", "\n", "\t", "\t", "    ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", " ", "<", " ", 
             RowBox[{"m", " ", "-", " ", "1"}]}], ",", "\n", "\t\t     ", 
            RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"diagci", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", "i"}]}], "]"}], "]"}], ",", " ",
               "\n", "\t\t\t\t\t\t", 
              RowBox[{"blockci", " ", "+", " ", 
               RowBox[{"i", " ", "n"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"diagci", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", 
                  RowBox[{
                   RowBox[{"i", " ", "+", " ", "1"}], " ", ";;", " ", 
                   RowBox[{"m", " ", "-", " ", "1"}]}]}], "]"}], "]"}], " ", 
               "+", " ", 
               RowBox[{"(", "n", ")"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
              "2"}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t     ", 
            RowBox[{"Join", "[", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"diagci", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", " ", 
                 RowBox[{"1", " ", ";;", " ", "i"}]}], "]"}], "]"}], ",", " ",
               "\n", "\t\t\t\t\t\t", 
              RowBox[{"blockci", " ", "+", " ", 
               RowBox[{"i", " ", "n"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
              "2"}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t     ", "]"}], 
          ",", "\n", "\t\t    ", 
          RowBox[{"Join", "[", "\n", "\t\t    \t", 
           RowBox[{
            RowBox[{"blockci", " ", "+", " ", 
             RowBox[{"i", " ", "n"}]}], ",", " ", "\n", "\t\t    \t", 
            RowBox[{
             RowBox[{"diagci", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", " ", 
                RowBox[{
                 RowBox[{"i", " ", "+", " ", "1"}], " ", ";;", " ", 
                 RowBox[{"m", " ", "-", " ", "1"}]}]}], "]"}], "]"}], " ", 
             "+", " ", 
             RowBox[{"(", "n", ")"}]}], ",", " ", "\n", "\t\t    \t", "2"}], 
           "\n", "\t\t    \t", "]"}]}], "\n", "\t\t    ", "]"}], ",", "\n", 
        "\t\t   ", 
        RowBox[{"RuntimeAttributes", " ", "->", " ", 
         RowBox[{"{", "Listable", "}"}]}], ",", "\n", "\t", "\t", "   ", 
        RowBox[{"Parallelization", " ", "->", " ", "True"}], ",", "\n", "\t", 
        "\t", "   ", 
        RowBox[{"CompilationTarget", " ", "->", " ", "\"\<C\>\""}], ",", "\n",
         "\t", "\t", "   ", 
        RowBox[{"RuntimeOptions", " ", "->", " ", "\"\<Speed\>\""}]}], "\n", 
       "\t\t   ", "]"}]}]}]}], "\n", "\t", "]"}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.728228164522757*^9, 3.7282282066584377`*^9}, {
  3.728228238148632*^9, 3.728228260012741*^9}, {3.728228367643873*^9, 
  3.728228367655983*^9}, {3.728228469062359*^9, 
  3.7282284986803102`*^9}},ExpressionUUID->"ebd4b780-9fcf-49b1-b0af-\
55b30c14da78"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dvrKToSparseArray\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7320667069448767`*^9, 
  3.732066722575148*^9}},ExpressionUUID->"0f9aa5d0-173f-471e-9098-\
cb3e4f1ced0d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dvrKToSparseArrayData", "[", 
    RowBox[{"b_", "?", "MatrixQ"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", "\n", "  ", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SparseArray", "[", "b", "]"}], "[", "\"\<ColumnIndices\>\"", 
        "]"}], ",", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", "b", "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\n", "  ", "b", ",", 
     "\n", "  ", 
     RowBox[{
      RowBox[{"Dimensions", "[", "b", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", "\n", "  ", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"Dimensions", "[", "b", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\n", "  ", "}"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"dvrKToSparseArray", "[", "X_", "]"}], " ", ":=", " ", "\n", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d1", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"d2", " ", "=", " ", 
       RowBox[{
        RowBox[{"Dimensions", "[", 
         RowBox[{"X", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", "\n", "  ", 
    RowBox[{"SparseArray", " ", "@@", " ", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", " ", 
       RowBox[{"{", 
        RowBox[{"d1", ",", " ", "d1"}], "}"}], ",", " ", "0", ",", "\n", 
       "    ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", " ", 
             RowBox[{"d1", " ", "d2"}], ",", " ", "d2"}], "]"}], ",", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", "1"}], "]"}]}], "}"}],
          ",", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"X", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}]}], "}"}]}]}], "\n", 
   "  ", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.728228164522757*^9, 3.728228169368814*^9}, {
  3.728228267736788*^9, 3.728228270979926*^9}, {3.728228385265861*^9, 
  3.728228386903335*^9}},ExpressionUUID->"210173d3-2e24-4951-a965-\
d3f65d29552e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]dvrKIteration\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7320667255524597`*^9},ExpressionUUID->"3f017319-ad7f-494b-ae15-\
16028a7b12ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dvrKIteration", "[", 
   RowBox[{"X_", ",", " ", "a_"}], "]"}], " ", ":=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", "   ", 
     RowBox[{
      RowBox[{"m", " ", "=", " ", 
       RowBox[{"Length", "[", "a", "]"}]}], ",", "\n", "   ", 
      RowBox[{"blockci", " ", "=", " ", 
       RowBox[{"X", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "   ", 
      RowBox[{"blockvals", " ", "=", " ", 
       RowBox[{"X", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", "\n", "   ", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"X", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", "\n", "   ", 
      RowBox[{"diagidx", " ", "=", " ", 
       RowBox[{"X", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}]}], "\n", "   ", "}"}], ",", "\n", 
    "  ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ran", " ", "=", " ", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"m", " ", "-", " ", "1"}]}], "]"}]}], "}"}], ",", "\n", 
      "   ", 
      RowBox[{"{", "\n", "    ", 
       RowBox[{
        RowBox[{"Join", " ", "@@", " ", "\n", "    \t", 
         RowBox[{"dvrKGetColumnIndices", "[", 
          RowBox[{"blockci", ",", " ", "\n", "    \t\t", 
           RowBox[{"Transpose", "[", 
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"m", " ", "-", " ", "1"}], ")"}], " ", "n"}], 
                 "]"}], ",", " ", "1"}], "]"}], ",", " ", "n"}], "]"}], "]"}],
            ",", " ", "\n", "    \t\t", "m", ",", " ", "\n", "    \t\t", "n", 
           ",", " ", "\n", "    \t\t", "ran"}], "\n", "    \t\t", "]"}]}], 
        ",", "\n", "    ", 
        RowBox[{"Join", " ", "@@", " ", 
         RowBox[{"dvrKGetValues", "[", 
          RowBox[{
          "a", ",", " ", "blockvals", ",", " ", "diagidx", ",", " ", "ran"}], 
          "]"}]}], ",", "\n", "    ", 
        RowBox[{"m", " ", "n"}], ",", "\n", "    ", 
        RowBox[{"Join", " ", "@@", " ", 
         RowBox[{"Outer", "[", 
          RowBox[{"Plus", ",", " ", "ran", ",", " ", "diagidx"}], "]"}]}]}], 
       "\n", "    ", "}"}]}], "\n", "   ", "]"}]}], "\n", "  ", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.728228164522757*^9, 3.7282281671780977`*^9}, 
   3.7282282879164248`*^9, {3.728228367634501*^9, 3.728228410009253*^9}, {
   3.728228449492806*^9, 
   3.728228459568502*^9}},ExpressionUUID->"9be4df07-5269-4cda-8116-\
9440f055e8db"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDirectProductKineticEnergy\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.732066746770686*^9},ExpressionUUID->"69513c6c-729d-44ad-ba69-\
6a5afaff5a6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChemDVRKroeneckerProductKineticEnergy", "[", 
   RowBox[{"keMats", ":", 
    RowBox[{"{", "__List", "}"}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"dvrKToSparseArray", "[", "\n", "\t\t", 
   RowBox[{"Fold", "[", 
    RowBox[{"dvrKIteration", ",", " ", "\n", "\t\t\t", 
     RowBox[{"dvrKToSparseArrayData", "[", 
      RowBox[{"keMats", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", "\n", "\t\t\t", 
     RowBox[{"Rest", "[", "keMats", "]"}]}], "\n", "\t\t\t", "]"}], "\n", 
   "\t\t", "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.727726528860077*^9, 3.727726580792251*^9}, {
   3.727731180934949*^9, 3.727731193490567*^9}, {3.727731242914007*^9, 
   3.727731247097042*^9}, {3.7282284061759768`*^9, 3.728228441391821*^9}, {
   3.732066733883779*^9, 3.7320667415678673`*^9}, 
   3.732302371640963*^9},ExpressionUUID->"f151fe7b-7de6-4719-9ec8-\
306b20c49e85"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDirectProductKineticEnergy\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.72772649488496*^9, 3.727726526863521*^9}, {
  3.732066671238274*^9, 3.732066673699185*^9}, {3.7323017547179937`*^9, 
  3.7323017552362328`*^9}, {3.7323028256078043`*^9, 3.7323028276462507`*^9}, {
  3.732303203466049*^9, 
  3.7323032044784803`*^9}},ExpressionUUID->"1d49bcf7-d36e-46e8-aa56-\
dde2dc796448"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRKeOptValue", "[", 
    RowBox[{"k_", ",", " ", "opts_", ",", " ", "fns_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Lookup", "[", 
    RowBox[{"opts", ",", " ", "k", ",", "\n", "\t\t", 
     RowBox[{"Lookup", "[", 
      RowBox[{
       RowBox[{"Merge", "[", 
        RowBox[{
         RowBox[{"Options", "/@", "fns"}], ",", " ", "First"}], "]"}], ",", 
       " ", "k", ",", "\n", "\t\t\t", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"Options", "[", "ChemDVRDirectProductKineticEnergy", "]"}], 
         ",", " ", "k"}], "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
    "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.732303456510405*^9, 
  3.7323035209737463`*^9}},ExpressionUUID->"46622dda-91a4-489d-af19-\
c2a9af1cb67e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDirectProductKineticEnergy", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<Masses\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{"\"\<HBars\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t\t", 
       RowBox[{"\"\<ScalingFactors\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"Precision", "\[Rule]", "MachinePrecision"}]}], "\n", "\t\t\t",
       "}"}], ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDirectProductKineticEnergy", "[", "\n", "\t", 
   RowBox[{"fns_", ",", "\n", "\t", "grid_", ",", "\n", "\t", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"subgrids", "=", "\n", "\t\t\t\t", 
       RowBox[{"Map", "[", "\n", "\t", "\t", "\t\t\t", 
        RowBox[{"DeleteDuplicates", ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"Transpose", "@", "\n", "\t\t\t\t\t\t", 
          RowBox[{"ChemDVRDefaultGridpointList", "[", 
           RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", " ", 
              RowBox[{"Options", "[", "ChemDVRDefaultGridpointList", "]"}]}], 
             "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t", 
        "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"masses", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"chemDVRKeOptValue", "[", 
          RowBox[{"\"\<Masses\>\"", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "opts", "}"}]}], ",", " ", "fns"}], "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"n_", "?", "NumericQ"}], "\[RuleDelayed]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"n", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n__", "?", "NumericQ"}], "}"}], "\[RuleDelayed]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"n", ",", " ", 
                RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{"_", ":>", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"hbars", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"chemDVRKeOptValue", "[", 
          RowBox[{"\"\<HBars\>\"", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "opts", "}"}]}], ",", " ", "fns"}], "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"n_", "?", "NumericQ"}], "\[RuleDelayed]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"n", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n__", "?", "NumericQ"}], "}"}], "\[RuleDelayed]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"n", ",", " ", 
                RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{"_", ":>", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"sfacs", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"chemDVRKeOptValue", "[", 
          RowBox[{"\"\<ScalingFactors\>\"", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "opts", "}"}]}], ",", " ", "fns"}], "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"n_", "?", "NumericQ"}], "\[RuleDelayed]", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"n", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n__", "?", "NumericQ"}], "}"}], "\[RuleDelayed]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"ConstantArray", "[", 
               RowBox[{"n", ",", " ", 
                RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", 
               RowBox[{"Length", "@", "fns"}]}], "]"}], "]"}]}], ",", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{"_", ":>", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"1", ",", " ", 
              RowBox[{"Length", "@", "fns"}]}], "]"}]}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"prec", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"chemDVRKeOptValue", "[", 
          RowBox[{"Precision", ",", " ", 
           RowBox[{"Flatten", "@", 
            RowBox[{"{", "opts", "}"}]}], ",", " ", "fns"}], "]"}], ",", "\n",
          "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Except", "[", 
           RowBox[{
            RowBox[{"_", "?", "NumericQ"}], "|", "\[Infinity]"}], "]"}], 
          "\[Rule]", "MachinePrecision"}]}], "\n", "\t\t\t\t\t", "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"ChemDVRKroneckerProductKineticEnergy", "[", "\n", "\t\t\t", 
     RowBox[{"(*", "\n", "\t\t\t\t", 
      RowBox[{
      "Compute", " ", "the", " ", "individual", " ", "KEs", " ", "to", " ", 
       "feed", " ", "into", " ", "Henriks", " ", "Kronecker", " ", "Product", 
       " ", "KE"}], "\n", "\t\t\t", "*)"}], "\n", "\t\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"opt", "=", 
            RowBox[{"Association", "@", 
             RowBox[{"Options", "[", "fns", "]"}]}]}], "}"}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"opt", ",", " ", "\"\<ScalingFactor\>\""}], "]"}], ",", 
             "\n", "\t\t\t\t\t\t", "Identity", ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"f", "=", "#5"}], "}"}], ",", " ", 
               RowBox[{
                RowBox[{"f", "*", "#"}], "&"}]}], "]"}]}], "\n", 
            "\t\t\t\t\t\t", "]"}], "@", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"KeyExistsQ", "[", 
               RowBox[{"opt", ",", " ", "Precision"}], "]"}], ",", "\n", 
              "\t\t\t\t\t\t\t", "Identity", ",", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"N", "[", 
               RowBox[{"#", ",", " ", "prec"}], "]"}]}], "\n", 
             "\t\t\t\t\t\t\t", "]"}], "@", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"#", "[", 
             RowBox[{"#2", ",", " ", "\n", "\t\t\t\t\t\t\t\t", 
              RowBox[{"FilterRules", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<Mass\>\"", "\[Rule]", "#3"}], ",", " ", 
                  RowBox[{"\"\<HBar\>\"", "\[Rule]", "#4"}], ",", " ", 
                  RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "#5"}], ",", 
                  " ", 
                  RowBox[{"Precision", "\[Rule]", "prec"}]}], "}"}], ",", 
                "\n", "\t\t\t\t\t\t\t\t\t", 
                RowBox[{"Options", "[", "#", "]"}]}], "\n", 
               "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t\t", 
             "]"}]}]}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], ",", "\n", 
       "\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t", 
        RowBox[{
        "fns", ",", "\n", "\t\t\t\t\t", "subgrids", ",", "\n", "\t\t\t\t\t", 
         "masses", ",", "\n", "\t\t\t\t\t", "hbars", ",", "\n", "\t\t\t\t\t", 
         "sfacs"}], "\n", "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}], 
     "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.727726588967136*^9, 3.727726626597754*^9}, 
   3.72773166068155*^9, {3.72822823994071*^9, 3.728228243339076*^9}, {
   3.732301756596129*^9, 3.732301767539969*^9}, {3.7323018793387403`*^9, 
   3.732301942422942*^9}, {3.732302027575333*^9, 3.732302033009302*^9}, {
   3.7323020911796837`*^9, 3.732302156309366*^9}, {3.732302242376899*^9, 
   3.7323023170141068`*^9}, {3.732303271599111*^9, 3.732303454063621*^9}, {
   3.7323035244253263`*^9, 3.732303662395685*^9}, {3.732303711586133*^9, 
   3.7323037911536207`*^9}, {3.732303823601671*^9, 3.7323040480436068`*^9}, 
   3.732304087287846*^9, {3.7323041551398077`*^9, 3.73230425242659*^9}, {
   3.7323042908575077`*^9, 
   3.732304291455995*^9}},ExpressionUUID->"e69fcb5b-66a4-437f-9866-\
46329bfb33d9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultKineticEnergy\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.72772649488496*^9, 3.727726526863521*^9}, {
  3.732066671238274*^9, 3.732066673699185*^9}, {3.7323017547179937`*^9, 
  3.7323017552362328`*^9}, {3.7323028256078043`*^9, 3.7323028276462507`*^9}, {
  3.732303203466049*^9, 3.7323032044784803`*^9}, {3.7323042804529333`*^9, 
  3.73230428545313*^9}},ExpressionUUID->"7c1b4b2d-0100-4e69-a0e6-\
1442526f8d98"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefaultKineticEnergy1D\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.732306447518417*^9},ExpressionUUID->"694071f9-3543-4916-8f2e-\
e7928198643e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "badkeel"}], "=", "\n", "\t", 
   "\"\<Couldn't determine arguments for element function ``. \\\nExpected to \
take (i, j), (i, j, N) or (i, j, N, x[i], x[j])\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.7323048271574*^9, 3.732304896530672*^9}, {
   3.73230494097934*^9, 3.732304962643544*^9}, 
   3.7324229688501*^9},ExpressionUUID->"b98674bb-2d57-47d6-98ba-d836f274d2a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "badke"}], "=", "\n", "\t", 
   "\"\<Kinetic energy function returned non-numerical KE\>\""}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.7323048271574*^9, 3.732304896530672*^9}, {
  3.73230494097934*^9, 
  3.732304962643544*^9}},ExpressionUUID->"8b5984c6-410f-4f26-ba67-\
0567a1a85a77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "iChemDVRDefaultKineticEnergy1D", "]"}], "=", "\n",
    "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Mass\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<HBar\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"Precision", "\[Rule]", "MachinePrecision"}]}], "\n", "\t\t", 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefaultKineticEnergy1D", "[", "\n", "\t", 
    RowBox[{"elementFunction_", ",", "\n", "\t", 
     RowBox[{"gridpoints", ":", 
      RowBox[{"{", 
       RowBox[{"__", "?", "NumericQ"}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"gn", "=", 
        RowBox[{"Length", "@", "gridpoints"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"dx", "=", 
        RowBox[{
         RowBox[{"gridpoints", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"gridpoints", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\n", "\t\t\t", 
       RowBox[{"hb", "=", 
        RowBox[{"OptionValue", "[", "\"\<HBar\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"m", "=", 
        RowBox[{"OptionValue", "[", "\"\<Mass\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", "coeff", ",", "\n", "\t\t\t", "ke", ",", "\n", "\t\t\t", 
       RowBox[{"elf", "=", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"elementFunction", ",", "\n", "\t\t\t\t\t", 
          RowBox[{"s_String", "\[RuleDelayed]", 
           RowBox[{
           "iChemDVRDefaultKineticEnergyElementFunction", "[", "s", "]"}]}]}],
          "\n", "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"coeff", "=", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"NumericQ", "@", 
           RowBox[{"OptionValue", "[", "\"\<ScalingFactor\>\"", "]"}]}], ",", 
          "\n", "\t\t\t\t", 
          RowBox[{"OptionValue", "[", "\"\<ScalingFactor\>\"", "]"}], ",", 
          "\n", "\t\t\t\t", "1"}], "\n", "\t\t\t\t", "]"}], "*", 
        RowBox[{
         RowBox[{"hb", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "m", "*", 
           RowBox[{"dx", "^", "2"}]}], ")"}]}]}]}], ";", "\n", "\t\t", 
      RowBox[{"ke", "=", "\n", "\t\t\t", 
       RowBox[{"Which", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Quiet", "@", 
          RowBox[{"NumericQ", "@", 
           RowBox[{"elf", "[", 
            RowBox[{"1", ",", " ", "1"}], "]"}]}]}], ",", "\n", "\t\t\t\t\t", 
         
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"coeff", "*", 
            RowBox[{"elf", "[", 
             RowBox[{"i", ",", " ", "j"}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "gn"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "gn"}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Quiet", "@", 
          RowBox[{"NumericQ", "@", 
           RowBox[{"elf", "[", 
            RowBox[{"1", ",", " ", "1", ",", " ", "gn"}], "]"}]}]}], ",", 
         "\n", "\t\t\t\t\t", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"coeff", "*", 
            RowBox[{"elf", "[", 
             RowBox[{"i", ",", " ", "j", ",", " ", "gn"}], "]"}]}], ",", " ", 
           
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "gn"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "gn"}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"Quiet", "@", 
          RowBox[{"NumericQ", "@", 
           RowBox[{"elf", "[", 
            RowBox[{"1", ",", " ", "1", ",", " ", "gn", ",", " ", 
             RowBox[{"gridpoints", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
             RowBox[{"gridpoints", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"coeff", "*", 
            RowBox[{"elf", "[", 
             RowBox[{"i", ",", " ", "j", ",", " ", "gn", ",", " ", 
              RowBox[{"gridpoints", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
              RowBox[{"gridpoints", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "gn"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"j", ",", " ", "gn"}], "}"}]}], "]"}], ",", "\n", 
         "\t\t\t\t", "True", ",", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"ChemDVRRun", "::", "badkeel"}], ",", " ", "elf"}], "]"}],
           ";", "\n", "\t\t\t\t\t", 
          RowBox[{"Throw", "[", "$Failed", "]"}]}]}], "\n", "\t\t\t\t", 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MatrixQ", "[", 
          RowBox[{"ke", ",", " ", "NumericQ"}], "]"}]}], ",", " ", "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{"ChemDVRRun", "::", "badke"}], ";", "\n", "\t\t\t", 
         RowBox[{"Throw", "[", "$Failed", "]"}]}]}], "\n", "\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Precision", "]"}], "===", 
         "\[Infinity]"}], ",", "\n", "\t\t\t", "ke", ",", "\n", "\t\t\t", 
        RowBox[{"N", "[", 
         RowBox[{"ke", ",", " ", 
          RowBox[{"OptionValue", "[", "Precision", "]"}]}], "]"}]}], "\n", 
       "\t\t\t", "]"}]}]}], "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.732304326661312*^9, 3.7323044329945183`*^9}, {
   3.7323044720662413`*^9, 3.7323047819669037`*^9}, {3.732304816480308*^9, 
   3.732304821774274*^9}, {3.732304900476348*^9, 3.732305059838354*^9}, {
   3.732305103372595*^9, 3.732305117223804*^9}, {3.732305426911302*^9, 
   3.732305432322577*^9}, {3.732305512024581*^9, 3.7323055467286*^9}, {
   3.732305707470067*^9, 3.732305769029565*^9}, {3.7323062232800903`*^9, 
   3.7323062282633953`*^9}, {3.732422978192111*^9, 3.732423018785892*^9}, {
   3.732424829698866*^9, 3.7324248432216063`*^9}, {3.734896549405959*^9, 
   3.7348966300408688`*^9}, {3.734904011672714*^9, 3.734904021992105*^9}, {
   3.734904315545396*^9, 3.734904355976894*^9}, 3.734906382479241*^9, {
   3.734906430073812*^9, 3.734906436625128*^9}, 3.7349064802912607`*^9, 
   3.734906560722844*^9, 
   3.735152298452097*^9},ExpressionUUID->"04b7b754-5776-401a-b6e8-\
b81df13973f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefaultKineticEnergyElementFunction\[RightFloor]",\
 "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.732306457620776*^9, 
  3.73514806090901*^9},ExpressionUUID->"223d6a0a-7699-4485-bfb5-779db309e284"],

Cell[BoxData[
 RowBox[{"iChemDVRDefaultKineticEnergyElementFunction", "//", 
  "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.73230659151262*^9, 3.732306592486142*^9}, 
   3.735152306389072*^9},ExpressionUUID->"2f1d5d80-b6b8-43f7-89c5-\
aaab918a0a18"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ColbertMillerCartesian\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.732306462140473*^9, {3.73489660043335*^9, 
   3.734896601632539*^9}},ExpressionUUID->"41295b5c-56b6-4d2c-8a9f-\
9490c6ca54d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "iChemDVRDefaultKineticEnergyElementFunction", "[", 
    "\"\<ColbertMillerCartesian\>\"", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "#2"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\[Pi]", "^", "2"}], "/", "3"}], ",", " ", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"#", "-", "#2"}], ")"}]}], ")"}], "*", 
       RowBox[{"2", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "-", "#2"}], ")"}], "^", "2"}]}]}]}], "\n", "\t\t\t", 
     "]"}], "\n", "\t\t", "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.732304326661312*^9, 3.7323044329945183`*^9}, {
   3.7323044720662413`*^9, 3.7323047819669037`*^9}, {3.732304816480308*^9, 
   3.732304821774274*^9}, {3.732304900476348*^9, 3.732305059838354*^9}, {
   3.732305103372595*^9, 3.732305117223804*^9}, {3.732305426911302*^9, 
   3.732305432322577*^9}, {3.732305512024581*^9, 3.732305601674129*^9}, {
   3.732305681712768*^9, 3.732305696383099*^9}, {3.73230578229959*^9, 
   3.732305826471333*^9}, {3.732305950245553*^9, 3.732306012440419*^9}, {
   3.732306106707663*^9, 3.732306114668222*^9}, {3.73230615436681*^9, 
   3.732306164348983*^9}, {3.732306211549629*^9, 3.732306215541771*^9}, {
   3.732306249653275*^9, 3.732306259115436*^9}, {3.732306293869852*^9, 
   3.732306315533745*^9}, {3.732306367091919*^9, 3.732306431948894*^9}, {
   3.734906105833115*^9, 3.734906108457333*^9}, 
   3.735152323662662*^9},ExpressionUUID->"744c23a0-9d02-4c64-967e-\
fda7e8cdc32f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ColbertMillerRadial\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732306465102538*^9, 
  3.7323064677302847`*^9}},ExpressionUUID->"90902009-f17b-4d38-a6ea-\
120871d97f39"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "iChemDVRDefaultKineticEnergyElementFunction", "[", 
    "\"\<ColbertMillerRadial\>\"", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "#2"}], ",", " ", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Pi]", "^", "2"}], "/", "3"}], "-", 
        RowBox[{"1", "/", 
         SuperscriptBox["#", "2"]}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"2", "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "#2"}], ")"}], "^", "2"}]}], "-", 
        RowBox[{"2", "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "+", "#2"}], ")"}], "^", "2"}]}]}]}], "\n", "\t\t\t", 
      "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"#", "-", "#2"}], ")"}]}], ")"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.732304326661312*^9, 3.7323044329945183`*^9}, {
   3.7323044720662413`*^9, 3.7323047819669037`*^9}, {3.732304816480308*^9, 
   3.732304821774274*^9}, {3.732304900476348*^9, 3.732305059838354*^9}, {
   3.732305103372595*^9, 3.732305117223804*^9}, {3.732305426911302*^9, 
   3.732305432322577*^9}, {3.732305512024581*^9, 3.732305601674129*^9}, {
   3.732305681712768*^9, 3.732305696383099*^9}, {3.73230578229959*^9, 
   3.732305826471333*^9}, {3.732305950245553*^9, 3.732306012440419*^9}, {
   3.732306106707663*^9, 3.732306114668222*^9}, {3.73230615436681*^9, 
   3.732306164348983*^9}, {3.732306211549629*^9, 3.732306215541771*^9}, {
   3.732306249653275*^9, 3.732306259115436*^9}, {3.732306293869852*^9, 
   3.732306315533745*^9}, {3.732306367091919*^9, 3.73230643298936*^9}, 
   3.735152325944079*^9},ExpressionUUID->"83adb91d-9def-48ad-9c03-\
b2fb9bbfdc8e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ColbertMillerPolar\[RightFloor]", \
"CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7323064753957043`*^9},ExpressionUUID->"1ef8d9e1-5618-4eb6-838d-\
a05afb5d7875"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "iChemDVRDefaultKineticEnergyElementFunction", "[", 
    "\"\<ColbertMillerPolar\>\"", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"#3", "/", "Pi"}], ")"}], "^", "2"}], "/", "2"}], "*", "\n", 
     "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "\[Equal]", "#2"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{"#3", "^", "2"}]}], "+", "1"}], ")"}], "/", "3"}], "-", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "*", 
              RowBox[{"#", "/", "#3"}]}], "]"}], "&"}], "2"}], ")"}]}]}], ",",
        "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"#", "-", "#2"}], ")"}]}], ")"}], "/", "\n", "\t\t\t\t\t", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Pi]", "*", 
               RowBox[{"(", 
                RowBox[{"#", "-", "#2"}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", "*", "#3"}], ")"}]}], "]"}], "^", "2"}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Pi]", "*", 
               RowBox[{"(", 
                RowBox[{"#", "+", "#2"}], ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", "*", "#3"}], ")"}]}], "]"}], "^", "2"}]}], 
         ")"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.732304326661312*^9, 3.7323044329945183`*^9}, {
  3.7323044720662413`*^9, 3.7323047819669037`*^9}, {3.732304816480308*^9, 
  3.732304821774274*^9}, {3.732304900476348*^9, 3.732305059838354*^9}, {
  3.732305103372595*^9, 3.732305117223804*^9}, {3.732305426911302*^9, 
  3.732305432322577*^9}, {3.732305512024581*^9, 3.732305601674129*^9}, {
  3.732305681712768*^9, 3.732305696383099*^9}, {3.73230578229959*^9, 
  3.732305826471333*^9}, {3.732305950245553*^9, 3.732306012440419*^9}, {
  3.732306106707663*^9, 3.732306114668222*^9}, {3.73230615436681*^9, 
  3.732306164348983*^9}, {3.732306211549629*^9, 3.732306215541771*^9}, {
  3.732306249653275*^9, 3.732306259115436*^9}, {3.732306293869852*^9, 
  3.732306315533745*^9}, {3.732306367091919*^9, 3.732306433972761*^9}, {
  3.7351523279379663`*^9, 
  3.7351523296425333`*^9}},ExpressionUUID->"9ec6939c-ba54-4a0a-816e-\
9c8fc62c4ccb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MeyerAzimuthal\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.7323064813794603`*^9, 
  3.732424361706252*^9},ExpressionUUID->"d15ecff6-9de2-437d-992e-\
a1b5dca86ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "iChemDVRDefaultKineticEnergyElementFunction", "[", 
    "\"\<MeyerAzimuthal\>\"", "]"}], ":=", "\n", "\t", 
   RowBox[{"Function", "[", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "\[Equal]", "#2"}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#3", "^", "2"}], "/", "2"}], "+", "1"}], ")"}], "*", 
       RowBox[{"1", "/", "6"}]}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"#", "-", "#2"}], ")"}]}], ")"}], "/", "\n", "\t\t\t\t", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Pi]", "*", 
              RowBox[{"(", 
               RowBox[{"#", "-", "#2"}], ")"}]}], ")"}], "/", "#3"}], "]"}], 
          "^", "2"}]}], ")"}]}]}], "\n", "\t\t\t", "]"}], "\n", "\t\t", 
    "]"}]}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.732304326661312*^9, 3.7323044329945183`*^9}, {
   3.7323044720662413`*^9, 3.7323047819669037`*^9}, {3.732304816480308*^9, 
   3.732304821774274*^9}, {3.732304900476348*^9, 3.732305059838354*^9}, {
   3.732305103372595*^9, 3.732305117223804*^9}, {3.732305426911302*^9, 
   3.732305432322577*^9}, {3.732305512024581*^9, 3.732305601674129*^9}, {
   3.732305681712768*^9, 3.732305696383099*^9}, {3.73230578229959*^9, 
   3.732305826471333*^9}, {3.732305950245553*^9, 3.732306012440419*^9}, {
   3.732306106707663*^9, 3.732306114668222*^9}, {3.73230615436681*^9, 
   3.732306164348983*^9}, {3.732306211549629*^9, 3.732306215541771*^9}, {
   3.732306249653275*^9, 3.732306259115436*^9}, {3.732306293869852*^9, 
   3.732306315533745*^9}, {3.732306367091919*^9, 3.73230643557211*^9}, {
   3.732424358139061*^9, 3.732424359244968*^9}, 
   3.735152335476572*^9},ExpressionUUID->"eed6c411-815c-4494-b3b0-\
c528d79ab7f7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Fallback\[RightFloor]", "CodeSubsubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.732306551347673*^9, 
  3.7323065553753233`*^9}},ExpressionUUID->"cd6fa980-29e9-4b3d-bb0f-\
bcd874770c04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iChemDVRDefaultKineticEnergyElementFunction", "[", "___", "]"}], ":=",
   "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{"Message", "[", 
     RowBox[{
      RowBox[{"ChemDVRRun", "::", "nokel"}], ",", " ", 
      "\"\<Unknown kinetic energy element function ``\>\""}], "]"}], ";", 
    "\n", "\t\t", 
    RowBox[{"Throw", "[", "$Failed", "]"}]}], "\n", "\t\t", 
   ")"}]}]], "CodeInput",
 CellChangeTimes->{{3.732306556031723*^9, 3.732306587879046*^9}, 
   3.735152338049592*^9},ExpressionUUID->"30a543e0-ffd5-4764-8bfd-\
c12fbb907383"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultKineticEnergyElementFunction\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.735147942554453*^9, 3.7351479441734343`*^9}, {
   3.735148052382069*^9, 3.735148065547049*^9}, 
   3.735152342687831*^9},ExpressionUUID->"88ad1934-c85f-458d-97a5-\
78e37613d2a2"],

Cell[BoxData[
 RowBox[{"ChemDVRDefaultKineticEnergyElementFunction", "//", 
  "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.73230659151262*^9, 3.732306592486142*^9}, 
   3.735152306389072*^9, 
   3.735152346457096*^9},ExpressionUUID->"de305ec2-08d1-4a77-980f-\
6f4d54a19107"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "Options", "[", "ChemDVRDefaultKineticEnergyElementFunction", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"{", "\n", "\t\t\t", 
    RowBox[{"\"\<KineticEnergyElementFunction\>\"", "\[Rule]", "Automatic"}], 
    "\n", "\t\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultKineticEnergyElementFunction", "[", "\n", "\t", 
   RowBox[{"ops", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"keel", "=", "\n", "\t\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{
        "OptionValue", "[", "\"\<KineticEnergyElementFunction\>\"", "]"}], 
        ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"k", ":", 
            RowBox[{"_Cross", "|", "_NonCommutativeMultiply", "|", 
             RowBox[{"_", 
              RowBox[{"(", 
               RowBox[{"Inactive", "[", "CircleTimes", "]"}], ")"}]}]}]}], 
           "\[RuleDelayed]", 
           RowBox[{"List", "@@", "k"}]}], ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"s_", ",", " ", "n_Integer"}], "}"}], "\[RuleDelayed]", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"s", ",", " ", "n"}], "]"}]}]}], "\n", "\t\t\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "}"}], ",", 
    "\n", "\t\t", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "keel", ",", "\n", "\t\t\t", "_String", ",", "\n", "\t\t\t\t\t", 
      RowBox[{
      "iChemDVRDefaultKineticEnergyElementFunction", "[", "keel", "]"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{"_String", ",", " ", 
        RowBox[{"___", "?", "OptionQ"}]}], "}"}], ",", "\n", "\t\t\t\t", 
      RowBox[{"Apply", "[", 
       RowBox[{
       "iChemDVRDefaultKineticEnergyElementFunction", ",", " ", "keel"}], 
       "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{"_", ",", " ", "_Integer"}], "}"}], ",", "\n", "\t\t\t\t", 
      RowBox[{"Map", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ChemDVRDefaultKineticEnergyElementFunction", "[", "\n", 
          "\t\t\t\t\t\t", 
          RowBox[{"\"\<KineticEnergyElementFunction\>\"", "\[Rule]", "#"}], 
          "\n", "\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"keel", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"keel", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t\t\t", 
       "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"_String", "|", 
          RowBox[{"{", 
           RowBox[{"_String", ",", " ", 
            RowBox[{"___", "?", "OptionQ"}]}], "}"}]}], ")"}], ".."}], "}"}], 
      ",", "\n", "\t\t\t\t", 
      RowBox[{"Map", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ChemDVRDefaultKineticEnergyElementFunction", "[", "\n", 
          "\t\t\t\t\t\t", 
          RowBox[{"\"\<KineticEnergyElementFunction\>\"", "\[Rule]", "#"}], 
          "\n", "\t\t\t\t\t\t", "]"}], "&"}], ",", "\n", "\t\t\t\t\t", 
        "keel"}], "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"{", "_", "}"}], ",", "\n", "\t\t\t\t", 
      RowBox[{
      "ChemDVRDefaultKineticEnergyElementFunction", "@", "\n", "\t\t\t\t\t", 
       RowBox[{"First", "@", "keel"}]}], ",", "\n", "\t\t\t", "_", ",", "\n", 
      "\t\t\t\t", "keel"}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.735147965507533*^9, 3.7351480679659967`*^9}, 
   3.735148190575337*^9, {3.735151634454154*^9, 3.735151635211235*^9}, {
   3.735152046832343*^9, 3.7351520753120537`*^9}, {3.7351521170380163`*^9, 
   3.735152152139567*^9}, {3.735152277779599*^9, 3.735152286320787*^9}, {
   3.735152517823237*^9, 
   3.735152664058618*^9}},ExpressionUUID->"1d0c6f57-df74-4904-a7ab-\
64a49cb4c921"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultKineticEnergyLists\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734908045352563*^9, 3.734908052551981*^9}, 
   3.7349081406686993`*^9},ExpressionUUID->"b6d22282-8d20-4430-a89b-\
ffba576730ae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultKineticEnergyLists", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Options", "[", "iChemDVRDefaultKineticEnergy1D", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultKineticEnergyLists", "[", "\n", "\t", 
   RowBox[{"gridpoints_", ",", "\n", "\t", "keel_", ",", " ", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"subgrids", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"ChemDVRDefaultGridPointList", "[", "\n", "\t\t\t\t\t\t", 
          RowBox[{"gridpoints", ",", " ", "\n", "\t\t\t\t\t\t", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "ops", "}"}], ",", " ", 
             RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], 
            "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"l", ":", 
             RowBox[{"{", "__List", "}"}]}], ":>", "\n", "\t", "\t\t\t\t\t\t", 
            RowBox[{"Map", "[", "\n", "\t", "\t\t\t\t\t\t\t", 
             RowBox[{
             "DeleteDuplicates", ",", " ", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{"Transpose", "@", "l"}]}], "\n", "\t\t\t\t\t\t\t\t", 
             "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{"l_List", "\[RuleDelayed]", 
            RowBox[{"{", "l", "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"masses", "=", "\n", "\t\t\t\t", 
       RowBox[{"OptionValue", "[", "\"\<Mass\>\"", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"sclFacs", "=", "\n", "\t\t\t\t", 
       RowBox[{"OptionValue", "[", "\"\<ScalingFactor\>\"", "]"}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"hb", "=", "\n", "\t\t\t\t", 
       RowBox[{"OptionValue", "[", "\"\<HBar\>\"", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"prec", "=", "\n", "\t\t\t\t", 
       RowBox[{"OptionValue", "[", "Precision", "]"}]}], ",", "\n", "\t\t\t", 
      
      RowBox[{"keels", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "@", "keel"}]}], ",", " ", 
         RowBox[{"{", "keel", "}"}], ",", " ", "keel"}], "]"}]}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "subgrids"}], "=!=", 
        RowBox[{"Length", "@", "keels"}]}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"ChemDVRRun", "::", "kedimx"}], ",", " ", 
          RowBox[{"Length", "@", "subgrids"}], ",", " ", 
          RowBox[{"Length", "@", "keels"}]}], "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Throw", "[", "$Failed", "]"}]}]}], "\n", "\t\t\t", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"MapThread", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"iChemDVRDefaultKineticEnergy1D", "[", "\n", "\t\t\t\t", 
         RowBox[{
         "#", ",", " ", "\n", "\t\t\t\t", "#2", ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"\"\<Mass\>\"", "\[Rule]", "#3"}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"\"\<ScalingFactor\>\"", "\[Rule]", "#4"}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"\"\<HBar\>\"", "\[Rule]", "#5"}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{"Precision", "\[Rule]", "#6"}], ",", "\n", 
              "\t\t\t\t\t\t", "ops"}], "\n", "\t\t\t\t\t\t", "}"}], ",", " ", 
            "\n", "\t\t\t\t\t", 
            RowBox[{"Options", "[", "iChemDVRDefaultKineticEnergy1D", "]"}]}],
            "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}], "&"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{
        "keels", ",", "\n", "\t\t\t\t", "subgrids", ",", "\n", "\t\t\t\t", 
         RowBox[{"Take", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"masses", ",", " ", 
              RowBox[{"Length", "@", "keels"}]}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Length", "@", "keels"}]}], "\n", "\t\t\t\t\t", "]"}], ",",
          "\n", "\t\t\t\t", 
         RowBox[{"Take", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"sclFacs", ",", " ", 
              RowBox[{"Length", "@", "keels"}]}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Length", "@", "keels"}]}], "\n", "\t\t\t\t\t", "]"}], ",",
          "\n", "\t\t\t\t", 
         RowBox[{"Take", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"hb", ",", " ", 
              RowBox[{"Length", "@", "keels"}]}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Length", "@", "keels"}]}], "\n", "\t\t\t\t\t", "]"}], ",",
          "\n", "\t\t\t\t", 
         RowBox[{"Take", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"prec", ",", " ", 
              RowBox[{"Length", "@", "keels"}]}], "]"}]}], ",", " ", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Length", "@", "keels"}]}], "\n", "\t\t\t\t\t", "]"}]}], 
        "\n", "\t\t\t\t", "}"}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.734908057628085*^9, 3.7349081139492188`*^9}, {
  3.735155366250177*^9, 3.735155375228531*^9}, {3.7351554390462103`*^9, 
  3.73515550239935*^9}},ExpressionUUID->"110b11a2-98b2-4748-ab78-59e20c991550"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultKineticEnergy\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7323064908841543`*^9},ExpressionUUID->"7f7094e1-ef7f-488f-a67b-\
409530a487a6"],

Cell["\<\
\[LeftCeiling]
\tTry to generate the kinetic energy from a kinetic energy elementfunction
\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.7348955301017427`*^9, 
  3.7348955664780083`*^9}},ExpressionUUID->"c514a9c3-b983-406c-beb1-\
ab1cf73153c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "kedimx"}], "=", "\n", "\t", 
   "\"\<Dimension of grid (``) doesn't match number of kinetic energy element\
\\\n functions (``)\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.732306908486438*^9, 
  3.732306963071641*^9}},ExpressionUUID->"55468b83-144d-4647-92d1-\
fe0c12b62101"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultKineticEnergy", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{
     "Options", "[", "ChemDVRDefaultKineticEnergyElementFunction", "]"}], ",",
      "\n", "\t\t", 
     RowBox[{"Options", "[", "iChemDVRDefaultKineticEnergy1D", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultKineticEnergy", "[", "\n", "\t", 
   RowBox[{"gridpoints_", ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Replace", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"ChemDVRDefaultKineticEnergyElementFunction", "@", "\n", "\t\t\t", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "ops", "}"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
       "Options", "@", "ChemDVRDefaultKineticEnergyElementFunction"}]}], "\n",
       "\t\t\t\t", "]"}]}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"keels_List", ":>", "\n", "\t\t\t\t", 
       RowBox[{
       "ChemDVRKroeneckerProductKineticEnergy", "@", "\n", "\t\t\t\t\t", 
        RowBox[{"ChemDVRDefaultKineticEnergyLists", "[", "\n", "\t\t\t\t\t\t", 
         RowBox[{
         "gridpoints", ",", "\n", "\t\t\t\t\t\t", "keels", ",", " ", "\n", 
          "\t\t\t\t\t ", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", "\n", "\t\t\t\t\t \t", 
            RowBox[{"Options", "@", "ChemDVRDefaultKineticEnergyLists"}]}], 
           "\n", "\t\t\t\t\t\t ", "]"}]}], "\n", "\t\t\t\t\t ", "]"}]}]}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"keel_", ":>", "\n", "\t\t\t\t", 
       RowBox[{"iChemDVRDefaultKineticEnergy1D", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
        "keel", ",", " ", "\n", "\t\t\t\t\t", "gridpoints", ",", " ", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "ops", "}"}], ",", " ", 
           RowBox[{"Options", "[", "iChemDVRDefaultKineticEnergy1D", "]"}]}], 
          "]"}]}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "}"}]}], 
   "\n", "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.7323051264591007`*^9, 3.732305207720023*^9}, 
   3.73230530475836*^9, {3.732305404546653*^9, 3.732305415124303*^9}, {
   3.732305455889134*^9, 3.732305499855644*^9}, {3.732306513453114*^9, 
   3.732306545823832*^9}, {3.732306654768217*^9, 3.732306721241197*^9}, 
   3.73230678456282*^9, {3.732306815008149*^9, 3.732306902672139*^9}, {
   3.732306969228294*^9, 3.732306975848778*^9}, {3.732307273046331*^9, 
   3.732307356651196*^9}, {3.7324216348182077`*^9, 3.732421660564908*^9}, {
   3.7324227273110027`*^9, 3.732422734602519*^9}, {3.732422781458602*^9, 
   3.7324228045182953`*^9}, {3.732422872507553*^9, 3.732422940752428*^9}, {
   3.732423092404846*^9, 3.732423115361535*^9}, {3.732423150388412*^9, 
   3.732423156481235*^9}, 3.732517052282962*^9, {3.732517088905349*^9, 
   3.732517090558765*^9}, {3.732517125778096*^9, 3.7325171816681843`*^9}, 
   3.7325172168188972`*^9, {3.734895576205214*^9, 3.734895593805764*^9}, {
   3.73489574858156*^9, 3.73489576660858*^9}, {3.734896513452651*^9, 
   3.73489651551698*^9}, {3.734904089983384*^9, 3.73490428625416*^9}, {
   3.7349063125331497`*^9, 3.734906369768344*^9}, {3.7349077944735603`*^9, 
   3.734907815690447*^9}, 3.734908039813448*^9, {3.734908122883377*^9, 
   3.734908165506418*^9}, {3.735080622130438*^9, 3.735080630394301*^9}, {
   3.735148076923348*^9, 
   3.735148197945979*^9}},ExpressionUUID->"6b69030e-ef42-4002-9cd4-\
9e76af5523ff"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Wavefunctions\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734895035855856*^9, 3.7348950573382196`*^9}, {
  3.735156462224833*^9, 
  3.735156463943283*^9}},ExpressionUUID->"5fbe23d2-62fb-4e63-abf4-\
1a42f92d067b"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]WavefunctionSelection\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7314328449319057`*^9, 
  3.731432847539864*^9}},ExpressionUUID->"39673ad7-3a4a-40ad-ba48-\
c962311a84f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
   RowBox[{"s_", ",", " ", "len_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"s", ">=", "1"}], ",", " ", "\n", "\t\t\t", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
    RowBox[{"s", "==", "0"}], ",", "\n", "\t\t\t", 
    RowBox[{"Sequence", "@@", 
     RowBox[{"{", "}"}]}], ",", "\n", "\t\t", 
    RowBox[{"s", "<", "0"}], ",", "\n", "\t\t\t", 
    RowBox[{
     RowBox[{"Ceiling", "[", 
      RowBox[{"s", "*", "len"}], "]"}], ";;"}], ",", "\n", "\t\t", "True", 
    ",", "\n", "\t\t\t", 
    RowBox[{";;", 
     RowBox[{"Floor", "[", 
      RowBox[{"s", "*", "len"}], "]"}]}]}], " ", "\n", "\t\t", 
   "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.732423489260847*^9, 3.732423517468217*^9}, {
  3.73242373378449*^9, 3.732423752340508*^9}, {3.732424010043816*^9, 
  3.7324240110646477`*^9}},ExpressionUUID->"622e24b7-7e89-41a5-b2e7-\
85b575a7f095"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{"\"\<WavefunctionSelection\>\"", "\[Rule]", "All"}], "\n", "\t\t",
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
    RowBox[{"wfs_", ",", " ", "\n", "\t", 
     RowBox[{"sel", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"_", "?", "OptionQ"}], "]"}]}], ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"sel", "=!=", "All"}], ",", "\n", "\t\t", 
     RowBox[{"wfs", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "\n", "\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"sel", ",", "\n", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"i_Integer", "?", "Positive"}], "\[RuleDelayed]", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", ">", 
                RowBox[{"Length", "@", 
                 RowBox[{"wfs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", "All", ",", 
               " ", 
               RowBox[{";;", "i"}]}], "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"i_Integer", "?", "Negative"}], "\[RuleDelayed]", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "i"}], ">", 
                RowBox[{"Length", "@", 
                 RowBox[{"wfs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ",", " ", "All", ",", 
               " ", 
               RowBox[{"i", ";;"}]}], "]"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"s_", "?", "NumericQ"}], "]"}], ":>", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
              RowBox[{"s", ",", " ", 
               RowBox[{"Length", "@", 
                RowBox[{"wfs", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ",", "\n", 
            "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"min_", "?", "NumericQ"}], ",", " ", 
                RowBox[{"max_", "?", "NumericQ"}]}], "}"}], "]"}], ":>", "\n",
              "\t\t\t\t\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"minMax", "=", 
                 RowBox[{"Sort", "@", 
                  RowBox[{"{", 
                   RowBox[{"min", ",", " ", "max"}], "}"}]}]}], "}"}], ",", 
               "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"Replace", "[", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
                    RowBox[{
                    RowBox[{"minMax", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
                    RowBox[{"Length", "@", 
                    RowBox[{"wfs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"chemDVRScaledWavefunctionSpan", "[", 
                    RowBox[{
                    RowBox[{"minMax", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                    RowBox[{"Length", "@", 
                    RowBox[{"wfs", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "\n", 
                  "\t\t\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", "}"}], ":>", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"M_", ";;"}], ",", " ", 
                    RowBox[{";;", "m_"}]}], "}"}], "|", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"m_", ";;"}], ",", " ", 
                    RowBox[{"M_", ";;"}]}], "}"}], "|", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{";;", "m_"}], ",", " ", 
                    RowBox[{";;", "M_"}]}], "}"}]}], "\[RuleDelayed]", 
                    RowBox[{"m", ";;", "M"}]}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"{", "e_", "}"}], "\[RuleDelayed]", "e"}]}], "\n",
                   "\t\t\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t\t\t", 
                "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}]}]}], "\n", 
           "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", 
       "]"}], "]"}], ",", "\n", "\t\t", "wfs"}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
   RowBox[{"wfs_", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
   RowBox[{"wfs", ",", "\n", "\t\t", 
    RowBox[{"OptionValue", "[", "\"\<WavefunctionSelection\>\"", "]"}]}], 
   "\n", "\t\t", "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.731432848241715*^9, 3.731432937222567*^9}, {
  3.731787382310871*^9, 3.7317874155589447`*^9}, {3.732423208458268*^9, 
  3.732423706331007*^9}, {3.7324237604788313`*^9, 3.732423853932827*^9}, {
  3.732423985468999*^9, 
  3.732424002527217*^9}},ExpressionUUID->"55eaed55-a8ed-49ec-ae8b-\
e40be7635b13"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPrepareHamiltonian\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.724795302183313*^9, 
  3.7351595663019657`*^9},ExpressionUUID->"7b51baa6-f0ac-4439-a6cb-\
229c12d9c02c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultPrepareHamiltonian", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<ValidateHamiltonian\>\"", "\[Rule]", "True"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<PruningEnergy\>\"", "\[Rule]", "None"}]}], "\n", "\t\t", 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultPrepareHamiltonian", "[", 
   RowBox[{"T_", ",", " ", "V_", ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"prune", "=", 
       RowBox[{"OptionValue", "[", "\"\<PruningEnergy\>\"", "]"}]}], ",", 
      "\n", "\t\t\t", "vDiag", ",", "\n", "\t\t\t", "prunePos", ",", "\n", 
      "\t\t\t", 
      RowBox[{"ham", "=", 
       RowBox[{
        RowBox[{"T", "+", "V"}], "//", "ReleaseHold"}]}]}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "ham", "]"}]}], "||", "\n", "\t\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<ValidateHamiltonian\>\"", "]"}], "=!=",
            "False"}], "&&", 
          RowBox[{"!", 
           RowBox[{"MatrixQ", "[", 
            RowBox[{"ham", ",", " ", "NumericQ"}], "]"}]}]}], ")"}]}], ",", 
       "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"ChemDVRRun", "::", "badham"}], "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Throw", "[", "$Failed", "]"}]}]}], "\n", "\t\t\t", "]"}], 
     ";", " ", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NumericQ", "@", "prune"}], "||", 
        RowBox[{"MatchQ", "[", 
         RowBox[{"prune", ",", " ", 
          RowBox[{"Scaled", "[", 
           RowBox[{"_", "?", "NumericQ"}], "]"}]}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"vDiag", "=", 
         RowBox[{"Normal", "@", 
          RowBox[{"Diagonal", "[", 
           RowBox[{"ReleaseHold", "@", "V"}], "]"}]}]}], ";", "\n", "\t\t\t", 
        
        RowBox[{"prune", "=", "\n", "\t\t\t\t", 
         RowBox[{"Replace", "[", 
          RowBox[{"prune", ",", " ", "\n", "\t", "\t\t\t\t", 
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"i_", "?", "NumericQ"}], "\[RuleDelayed]", 
              RowBox[{"Rescale", "[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"MinMax", "@", "vDiag"}]}], "]"}]}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Scaled", "[", "s_", "]"}], "\[RuleDelayed]", "s"}]}], 
            "\n", "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ";", 
        "\n", "\t\t\t", 
        RowBox[{"vDiag", "=", 
         RowBox[{"Rescale", "[", "vDiag", "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"prunePos", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Position", "[", 
           RowBox[{"vDiag", ",", " ", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"#", ">", "prune"}], "&"}], ")"}]}], ",", " ", "1"}], 
           "]"}]}]}], ";", "\n", "\t\t\t", 
        RowBox[{"ham", "=", "\n", "\t\t\t\t", 
         RowBox[{"ham", "[", 
          RowBox[{"[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "ham"}], "]"}], ",", " ", "prunePos"}], 
             "]"}], ",", " ", "\n", "\t\t\t\t\t", 
            RowBox[{"Complement", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"Length", "@", "ham"}], "]"}], ",", " ", "prunePos"}], 
             "]"}]}], "\n", "\t\t\t\t\t", "]"}], "]"}]}], ";"}]}], "\n", 
      "\t\t\t", "]"}], ";", "\n", "\t\t", "ham"}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.735159543043051*^9, 3.735159652894421*^9}, 
   3.735159693671392*^9, {3.7351603035333242`*^9, 3.7351603170455112`*^9}, {
   3.735160351942655*^9, 3.735160407303977*^9}, {3.735160437651202*^9, 
   3.735160453311118*^9}, {3.735160891879528*^9, 3.735160923623416*^9}, {
   3.735160978764132*^9, 3.7351609863261766`*^9}, {3.735161054406172*^9, 
   3.7351611066192837`*^9}, {3.735161154825385*^9, 3.7351611551966457`*^9}, {
   3.735161188107753*^9, 3.735161210563995*^9}, {3.735162361923134*^9, 
   3.735162363656945*^9}, {3.735162407610961*^9, 3.735162488140337*^9}, {
   3.73516251986241*^9, 3.735162557756194*^9}, {3.7351626281829557`*^9, 
   3.735162726241436*^9}, {3.7351627998595448`*^9, 3.73516280569633*^9}, {
   3.7351630687419157`*^9, 3.7351630891075363`*^9}, {3.7351631877469807`*^9, 
   3.735163190536718*^9}, {3.735166463425589*^9, 
   3.735166507352826*^9}},ExpressionUUID->"97ec6d63-42ea-4eef-8efa-\
896351ec533c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795302183313*^9},ExpressionUUID->"76843220-7806-415f-a772-\
de79c02cd6a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "badham"}], "=", 
   "\"\<The computed Hamiltonian is not a square numerical matrix\>\""}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.732422604409165*^9, 
  3.732422621720605*^9}},ExpressionUUID->"8eb6fb85-508b-4d21-a3e4-\
f06c4f878847"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultWavefunctions", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Options", "@", "Eigensystem"}], ",", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "Automatic"}], ",",
        "\n", "\t\t\t", 
       RowBox[{"\"\<CorrectPhase\>\"", "\[Rule]", "True"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<SortEnergies\>\"", "\[Rule]", "True"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
       "\"\<WavefunctionEigensolver\>\"", "\[Rule]", "Eigensystem"}]}], "\n", 
      "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultPrepareHamiltonian", "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultWavefunctions", "[", 
    RowBox[{"T_", ",", " ", "V_", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
      "ham", ",", "\n", "\t\t\t", "wfnSel", ",", "\n", "\t\t\t", "minMaxDiag",
        ",", "\n", "\t\t\t", 
       RowBox[{"nwfs", "=", 
        RowBox[{"OptionValue", "[", "\"\<NumberOfWavefunctions\>\"", "]"}]}], 
       ",", "\n", "\t", "\t\t", 
       RowBox[{"sort", "=", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<SortEnergies\>\"", "]"}], "=!=", 
         "False"}]}], ",", "\n", "\t", "\t\t", 
       RowBox[{"rephase", "=", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<CorrectPhase\>\"", "]"}], "=!=", 
         "False"}]}], ",", "\n", "\t", "\t\t", "wfns", ",", "\n", "\t\t\t", 
       "phase", ",", "\n", "\t\t\t", 
       RowBox[{"solver", "=", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{
          "OptionValue", "[", "\"\<WavefunctionEigensolver\>\"", "]"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"Eigenvectors", "\[Rule]", "Eigensystem"}]}], "\n", 
         "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"ham", "=", "\n", "\t\t\t", 
       RowBox[{"ChemDVRDefaultPrepareHamiltonian", "[", 
        RowBox[{"T", ",", " ", "V", ",", " ", "\n", "\t\t\t\t", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "ops", "}"}], ",", " ", 
           RowBox[{
           "Options", "[", "ChemDVRDefaultPrepareHamiltonian", "]"}]}], 
          "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"wfnSel", "=", "\n", "\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{"nwfs", ",", "\n", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Automatic", ":>", "\n", "\t\t\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "@", "ham"}], "===", "SparseArray"}], ",", " ",
               "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"-", 
               RowBox[{"Abs", "[", 
                RowBox[{"Min", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Length", "@", "ham"}], ",", " ", "25"}], "}"}]}], 
                "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"solver", "===", "Eigenvalues"}], ",", "\n", 
                "\t\t\t\t\t\t\t\t", 
                RowBox[{"-", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"Min", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "ham"}], ",", " ", "25"}], "}"}]}],
                   "]"}]}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"{", "}"}]}]}], "\n", "\t\t\t\t\t\t\t\t", "]"}]}], 
             "\n", "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"i_Integer", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
            RowBox[{"-", "i"}]}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"_", ":>", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"{", "}"}]}]}]}], "\n", "\t\t\t\t\t", "}"}]}], "\n", 
        "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"{", "wfnSel", "}"}]}], ">", "0"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"minMaxDiag", "=", 
          RowBox[{"MinMax", "@", 
           RowBox[{"Diagonal", "[", "ham", "]"}]}]}], ";", "\n", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"minMaxDiag", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"minMaxDiag", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"ham", "=", 
            RowBox[{"ham", "-", 
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Band", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
                RowBox[{"minMaxDiag", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Length", "@", "ham"}], ",", " ", 
                 RowBox[{"Length", "@", "ham"}]}], "}"}]}], "]"}]}]}]}], "\n",
           "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"wfns", "=", "\n", "\t\t\t", 
       RowBox[{"solver", "[", "\n", "\t\t\t\t", 
        RowBox[{"ham", ",", "\n", "\t\t\t\t", "wfnSel", ",", "\n", "\t\t\t\t", 
         RowBox[{"Method", "\[Rule]", "\n", "\t\t\t\t\t", 
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "Method", "]"}], ",", " ", "\n", 
            "\t\t\t\t\t\t", 
            RowBox[{"Automatic", ":>", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Head", "@", "ham"}], "===", "SparseArray"}], ",", 
               " ", "\n", "\t\t\t\t\t\t\t\t", "Automatic", ",", "\n", 
               "\t\t\t\t\t\t\t\t", "\"\<FEAST\>\""}], "\n", 
              "\t\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t\t", "]"}]}], 
         ",", "\n", "\t\t\t\t", 
         RowBox[{"FilterRules", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "ops", "}"}], ",", 
             RowBox[{"Alternatives", "@@", 
              RowBox[{"Keys", "@", 
               RowBox[{"Options", "@", "Eigensystem"}]}]}]}], "]"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"Except", "[", "Method", "]"}]}], "\n", "\t\t\t\t\t", 
          "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"Which", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"NumericQ", "@", 
         RowBox[{"wfns", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t", "\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"just", " ", "energies"}], ",", " ", 
          RowBox[{"so", " ", "just", " ", "return", " ", "them"}]}], " ", 
         "*)"}], "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sort", ",", " ", "Sort", ",", " ", "Identity"}], "]"}], 
         "@", "\n", "\t\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "minMaxDiag", "]"}], "\[Equal]", "2"}], "&&", 
             RowBox[{
              RowBox[{"minMaxDiag", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], "&&", 
             RowBox[{
              RowBox[{"minMaxDiag", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], "]"}], ",", "\n",
            "\t", "\t\t\t\t\t", 
           RowBox[{"wfns", "+", 
            RowBox[{"minMaxDiag", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t", "\t\t\t\t\t", 
           "wfns"}], "\n", "\t", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"Length", "@", "wfns"}], "\[Equal]", "2"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"full", " ", "eigensystem"}], " ", "*)"}], "\n", "\t", 
        "\t\t\t", 
        RowBox[{
         RowBox[{"wfns", "=", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"sort", ",", " ", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", " ", 
                   RowBox[{"Ordering", "[", 
                    RowBox[{"First", "@", "#"}], "]"}]}], "]"}], "]"}], ",", 
                " ", "#"}], "]"}], "&"}], "@", "\n", "\t\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"TrueQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "minMaxDiag", "]"}], "\[Equal]", 
                  "2"}], "&&", 
                 RowBox[{
                  RowBox[{"minMaxDiag", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"minMaxDiag", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ">", "0"}]}], "]"}], ",", 
               "\n", "\t", "\t", "\t", "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"minMaxDiag", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\n", "\t", 
               "\t", "\t", "\t\t\t\t", "#"}], "\n", "\t", "\t", "\t", 
              "\t\t\t\t", "]"}]}], "&"}], "@", "wfns"}]}], ";", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{"rephase", ",", "\n", "\t", "\t", "\t\t\t", 
           RowBox[{
            RowBox[{"phase", "=", 
             RowBox[{"Sign", "@", 
              RowBox[{"wfns", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", " ", 
                 RowBox[{
                  RowBox[{"Ordering", "[", 
                   RowBox[{"First", "@", "wfns"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}]}], ";", 
            "\n", "\t", "\t", "\t", "\t\t", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "@", "wfns"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"phase", "*", "#"}], "&"}], "/@", 
               RowBox[{"Last", "@", "wfns"}]}]}], "}"}]}], ",", "\n", 
           "\t\t\t\t\t", "wfns"}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
        "\t\t\t", "True", ",", "\n", "\t\t\t\t", "wfns"}], "\n", "\t\t\t", 
       "]"}]}]}], "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 3.7180484643377733`*^9}, {
   3.71805108263029*^9, 3.718051418792109*^9}, {3.718051501895123*^9, 
   3.71805158442178*^9}, {3.718051807796692*^9, 3.718051818570958*^9}, {
   3.718051939155568*^9, 3.718051954747117*^9}, {3.7180521348364267`*^9, 
   3.718052175925763*^9}, {3.719855405542396*^9, 3.719855435777013*^9}, {
   3.719855810046487*^9, 3.7198558628499937`*^9}, {3.7198741226820707`*^9, 
   3.719874150574786*^9}, {3.727652122527961*^9, 3.727652221116576*^9}, {
   3.729194918612468*^9, 3.72919492332187*^9}, {3.729194999208186*^9, 
   3.7291950002052383`*^9}, {3.729195705359674*^9, 3.7291957173690968`*^9}, {
   3.731091836238999*^9, 3.731091853724534*^9}, {3.732422526730199*^9, 
   3.732422534578055*^9}, {3.732422573255947*^9, 3.7324226301158648`*^9}, {
   3.734209413037024*^9, 3.73420941897231*^9}, {3.734733016169385*^9, 
   3.734733244150124*^9}, {3.734733312996352*^9, 3.734733313847002*^9}, {
   3.734902308996553*^9, 3.7349025236356087`*^9}, {3.734903001599078*^9, 
   3.734903002758782*^9}, {3.734903233393849*^9, 3.7349032490659733`*^9}, {
   3.734903340375078*^9, 3.734903370603838*^9}, {3.734903441878888*^9, 
   3.734903495438766*^9}, {3.734904960809342*^9, 3.734904961246728*^9}, {
   3.73490501052013*^9, 3.734905181847664*^9}, {3.734905220344164*^9, 
   3.734905383847375*^9}, {3.7349054344178543`*^9, 3.7349054560805407`*^9}, {
   3.735139844621014*^9, 3.735139852096143*^9}, {3.735139997328973*^9, 
   3.735139998910371*^9}, {3.7351401267125053`*^9, 3.735140128603518*^9}, {
   3.735140173951077*^9, 3.735140201114846*^9}, {3.735140291136024*^9, 
   3.7351402934856377`*^9}, {3.7351403311127577`*^9, 3.73514034058263*^9}, {
   3.735158900316084*^9, 3.7351591211069107`*^9}, {3.735159177883911*^9, 
   3.735159342268956*^9}, {3.735159426861991*^9, 3.73515948203543*^9}, {
   3.735159600026978*^9, 3.735159620926791*^9}, {3.7351596591840467`*^9, 
   3.735159696744624*^9}, 
   3.735160491760899*^9},ExpressionUUID->"b93e39a8-ea03-4b90-9d91-\
5eb5d82de70e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultGridWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795308679735*^9},ExpressionUUID->"3faffae1-8b52-4623-a73d-\
7a1b8e8e156c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultGridWavefunctions", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Join", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"\"\<ReturnEnergies\>\"", "\[Rule]", "False"}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}], 
     ",", "\n", "\t\t", 
     RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultGridWavefunctions", "[", 
    RowBox[{"grid_", ",", "wfs_", ",", " ", 
     RowBox[{"o", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultGridPointList", "[", 
         RowBox[{"grid", ",", " ", "\n", "\t", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "o", "}"}], ",", " ", 
            RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", "\n", "\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultWavefunctionSelection", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ReleaseHold", "@", "wfs"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "o", "}"}], ",", " ", 
            RowBox[{
            "Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"retE", ",", " ", "\n", "\t\t\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "->", 
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{"coreGridPoints", ",", "#2"}], "}"}], "]"}]}], "&"}], 
         ",", "\n", "\t", "\t\t\t", "wfns"}], "\n", "\t", "\t\t\t", "]"}], 
       ",", "\n", "\t\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Thread", "[", 
           RowBox[{"{", 
            RowBox[{"coreGridPoints", ",", "#"}], "}"}], "]"}], "&"}], ",", 
         " ", 
         RowBox[{"wfns", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 3.718048466505234*^9}, {
   3.718051665945264*^9, 3.718051688387249*^9}, {3.718051737884864*^9, 
   3.718051768952922*^9}, {3.7180525864505997`*^9, 3.7180526208329144`*^9}, {
   3.718052779782776*^9, 3.7180528043212233`*^9}, {3.718052914616517*^9, 
   3.718052926775758*^9}, {3.727731469092826*^9, 3.727731495123589*^9}, {
   3.727731592997616*^9, 3.727731618160809*^9}, {3.731432943673647*^9, 
   3.731432972372878*^9}, {3.731872660923718*^9, 3.731872791253338*^9}, {
   3.7351598678350143`*^9, 
   3.735159869097538*^9}},ExpressionUUID->"1b8834c0-af8e-44c6-b0e0-\
afd4db9417fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultInterpolatingWavefunctions\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795314403144*^9},ExpressionUUID->"b99cdb95-38ed-4f0a-9b3a-\
c17c238a369c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultInterpolatingWavefunctions", "]"}], 
   "=", "\n", "\t", 
   RowBox[{"Options", "@", "ChemDVRDefaultGridWavefunctions"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultInterpolatingWavefunctions", "[", "\n", "\t", 
    RowBox[{"grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultGridPointList", "[", 
         RowBox[{"grid", ",", " ", "\n", "\t", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{"Options", "@", "ChemDVRDefaultGridPointList"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", "\n", "\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultWavefunctionSelection", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ReleaseHold", "@", "wfs"}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{
            "Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"retE", ",", " ", "\n", "\t\t\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "->", 
           RowBox[{"Interpolation", "@", 
            RowBox[{"MapThread", "[", 
             RowBox[{
              RowBox[{"Flatten", "@*", "List"}], ",", 
              RowBox[{"{", 
               RowBox[{"coreGridPoints", ",", "#2"}], "}"}]}], "]"}]}]}], 
          "&"}], ",", "\n", "\t", "\t\t\t", "wfns"}], "\n", "\t", "\t\t\t", 
        "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Interpolation", "@", 
           RowBox[{"MapThread", "[", 
            RowBox[{
             RowBox[{"Flatten", "@*", "List"}], ",", 
             RowBox[{"{", 
              RowBox[{"coreGridPoints", ",", " ", "#"}], "}"}]}], "]"}]}], 
          "&"}], ",", " ", 
         RowBox[{"wfns", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\n", "\t\t\t", "]"}]}], 
    "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 3.718048466505234*^9}, {
   3.7180516944346323`*^9, 3.718051727382465*^9}, 3.718051775275611*^9, {
   3.7180525956771917`*^9, 3.718052620816251*^9}, {3.718052666389908*^9, 
   3.718052668757285*^9}, {3.718052772612356*^9, 3.718052775410055*^9}, {
   3.718052810171159*^9, 3.71805283240731*^9}, {3.718052877749238*^9, 
   3.718052921497954*^9}, {3.7247953337026653`*^9, 3.7247953356293297`*^9}, {
   3.724796428692997*^9, 3.724796430859977*^9}, {3.724797345433033*^9, 
   3.724797358381427*^9}, {3.731432982747671*^9, 3.731433003962302*^9}, {
   3.731872805691423*^9, 3.731872843032605*^9}, 3.731944374564184*^9, {
   3.731944462728465*^9, 3.731944463204837*^9}, 
   3.73515987706102*^9},ExpressionUUID->"823c7587-f077-4505-8f21-c0295b5a1a2f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Expectations\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.735156459456992*^9, 3.735156460840008*^9}, {
  3.735159858933666*^9, 
  3.7351598627665377`*^9}},ExpressionUUID->"eb764956-850c-4edd-9cbb-\
ad365edfe4e7"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExpectationValues\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.724795314403144*^9, {3.731432771580377*^9, 3.731432776098288*^9}, 
   3.731704203049971*^9},ExpressionUUID->"b6f3cabd-26b8-4466-b805-\
bfbc55ef99c4"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]chemDVRCalcExpectationValue\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7318728678577757`*^9, 
  3.7318728701394367`*^9}},ExpressionUUID->"c536089d-153c-4c96-9286-\
63f0955d43bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValueVec", "[", 
    RowBox[{"func_", ",", " ", "grid_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"func", "@", "grid"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"_List", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
           RowBox[{"Length", "@", "grid"}]}], "&"}], ")"}]}], "]"}], ":>", 
      RowBox[{"Map", "[", 
       RowBox[{"func", ",", " ", "grid"}], "]"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValueVec", "[", 
    RowBox[{"func_", ",", " ", "grid_", ",", " ", "wf_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"func", "[", 
      RowBox[{"grid", ",", " ", "wf"}], "]"}], ",", " ", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"_List", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", 
           RowBox[{"Length", "@", "grid"}]}], "&"}], ")"}]}], "]"}], ":>", 
      "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"{", 
         RowBox[{"grid", ",", " ", "wf"}], "}"}]}], "]"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"chemDVRCalcExpectationValue", "[", 
    RowBox[{
    "func_Function", ",", " ", "grid_", ",", " ", "wfL_", ",", " ", "wfR_"}], 
    "]"}], ":=", "\n", "\t", 
   RowBox[{"wfL", ".", "\n", "\t\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"func", ",", " ", 
        RowBox[{"Slot", "[", "2", "]"}], ",", " ", "\[Infinity]"}], "]"}], 
      ",", "\n", "\t", "\t\t", 
      RowBox[{"chemDVRCalcExpectationValueVec", "[", 
       RowBox[{"func", ",", " ", "grid", ",", " ", "wfR"}], "]"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"wfR", "*", 
       RowBox[{"chemDVRCalcExpectationValueVec", "[", 
        RowBox[{"func", ",", " ", "grid"}], "]"}]}]}], "\n", "\t", "\t\t", 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"chemDVRCalcExpectationValue", "[", 
   RowBox[{
    RowBox[{"func", ":", 
     RowBox[{"Except", "[", "_Function", "]"}]}], ",", " ", "grid_", ",", " ",
     "wfL_", ",", " ", "wfR_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"wfL", ".", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"chemDVRCalcExpectationValueVec", "[", 
      RowBox[{"func", ",", " ", "grid", ",", " ", "wfR"}], "]"}], ",", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"{", "__func", "}"}], "\[RuleDelayed]", 
      RowBox[{"wfR", "*", 
       RowBox[{"chemDVRCalcExpectationValueVec", "[", 
        RowBox[{"func", ",", " ", "grid"}], "]"}]}]}]}], "\n", "\t\t", 
    "]"}]}]}]}], "CodeInput",
 CellChangeTimes->{{3.73178329800983*^9, 3.731783619418199*^9}, 
   3.7317836927178297`*^9, {3.7317845388331614`*^9, 3.7317845617074957`*^9}, 
   3.731784627734921*^9},ExpressionUUID->"15b97a3e-a413-4958-8246-\
a2b89a5e1116"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultExpectationValues\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.7317846940930567`*^9},ExpressionUUID->"c0e0f6d5-c534-49f1-909f-\
6a49285a657b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultExpectationValues", "]"}], "=", 
   "\n", "\t", 
   RowBox[{"Options", "@", "ChemDVRDefaultGridWavefunctions"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultExpectationValues", "[", "\n", "\t", 
    RowBox[{
    "grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", "evs_", ",", "\n", 
     "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultGridPointList", "[", 
         RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"exfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", "evs"}]}]}], ",", "\n", "\t\t\t", 
       RowBox[{"wfns", "=", "\n", "\t\t\t\t", 
        RowBox[{
        "ChemDVRDefaultWavefunctionSelection", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"ReleaseHold", "@", "wfs"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{
            "Options", "[", "ChemDVRDefaultWavefunctionSelection", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", "\n", "\t\t\t\t", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"retE", ",", " ", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"wfns", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", "#"}], "&"}], ",", "\n",
         "\t\t\t", "Identity"}], "\n", "\t\t\t", "]"}], "@", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "@", 
          RowBox[{"ListQ", "@", "evs"}]}], ",", " ", 
         RowBox[{"Map", "[", "First", "]"}], ",", " ", "Identity"}], "]"}], 
       "@", "\n", "\t\t\t\t\t", 
       RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"Map", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"chemDVRCalcExpectationValue", "[", 
             RowBox[{
             "#", ",", " ", "coreGridPoints", ",", " ", "wf", ",", " ", 
              "wf"}], "]"}], "&"}], ",", "\n", "\t\t\t\t\t\t\t", "exfns"}], 
          "\n", "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"wf", ",", " ", 
           RowBox[{"wfns", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "\n", "\t\t\t\t\t\t", 
        "]"}]}]}]}], "\n", "\t\t", "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.699200604333715*^9, 3.69920065436515*^9}, 
   3.699228071685454*^9, {3.69922862652458*^9, 3.6992286278518543`*^9}, {
   3.699233954784215*^9, 3.699233956109192*^9}, 3.699236026259272*^9, {
   3.700004723815454*^9, 3.70000472381841*^9}, {3.716044877331047*^9, 
   3.716044936875804*^9}, {3.716045053593833*^9, 3.716045172219779*^9}, {
   3.718047639055377*^9, 3.718047655840177*^9}, {3.718047709916031*^9, 
   3.7180479700932703`*^9}, {3.718048198088847*^9, 3.718048466505234*^9}, {
   3.7180516944346323`*^9, 3.718051727382465*^9}, 3.718051775275611*^9, {
   3.7180525956771917`*^9, 3.718052620816251*^9}, {3.718052666389908*^9, 
   3.718052668757285*^9}, {3.718052772612356*^9, 3.718052775410055*^9}, {
   3.718052810171159*^9, 3.71805283240731*^9}, {3.718052877749238*^9, 
   3.718052921497954*^9}, {3.7247953337026653`*^9, 3.7247953356293297`*^9}, {
   3.724796428692997*^9, 3.724796430859977*^9}, {3.724797345433033*^9, 
   3.724797358381427*^9}, {3.7314327814324503`*^9, 3.731432839903988*^9}, {
   3.731433019694282*^9, 3.731433059495531*^9}, {3.7314331900058403`*^9, 
   3.7314333578052387`*^9}, {3.7317042043542833`*^9, 3.731704275789824*^9}, {
   3.7317043137888947`*^9, 3.731704332096822*^9}, {3.731704510952454*^9, 
   3.731704521292954*^9}, {3.731704644961685*^9, 3.731704795090238*^9}, {
   3.731704983510269*^9, 3.731705106848145*^9}, {3.731705219343458*^9, 
   3.7317053255123243`*^9}, {3.731705369575761*^9, 3.731705417019446*^9}, {
   3.7317056216809387`*^9, 3.731705624135168*^9}, {3.7317830860161343`*^9, 
   3.7317830896621113`*^9}, {3.731783209200379*^9, 3.731783254790324*^9}, {
   3.731783698870543*^9, 3.7317837239231787`*^9}, {3.731784193086774*^9, 
   3.731784245629405*^9}, {3.731784735423513*^9, 3.731784736438078*^9}, {
   3.731791957209268*^9, 3.7317921329591303`*^9}, {3.731872852098283*^9, 
   3.731872856628716*^9}, 
   3.73490726144838*^9},ExpressionUUID->"6c0b1d1a-eef8-4382-aea1-d35fe2e03deb"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultOperatorMatrix\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{3.731784687520719*^9, 
  3.731791503246063*^9},ExpressionUUID->"335cc5ba-099b-4e88-bb3e-\
9f6243c89af3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultOperatorMatrix", "]"}], "=", "\n", 
   "\t", 
   RowBox[{"Options", "@", "ChemDVRDefaultExpectationValues"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRDefaultOperatorMatrix", "[", "\n", "\t", 
    RowBox[{
    "grid_", ",", "\n", "\t", "wfs_", ",", "\n", "\t", "evs_", ",", "\n", 
     "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"coreGridPoints", "=", "\n", "\t\t\t\t", 
        RowBox[{"ChemDVRDefaultGridPointList", "[", 
         RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t", 
          RowBox[{"FilterRules", "[", 
           RowBox[{
            RowBox[{"{", "ops", "}"}], ",", " ", 
            RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], 
           "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"exfns", "=", "\n", "\t\t\t\t", 
        RowBox[{"Flatten", "@", 
         RowBox[{"List", "@", "evs"}]}]}], ",", "\n", "\t\t\t", "sels", ",", 
       "\n", "\t\t\t", 
       RowBox[{"wfns", "=", 
        RowBox[{"ReleaseHold", "@", "wfs"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"retE", "=", "\n", "\t\t\t\t", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"OptionValue", "[", "\"\<ReturnEnergies\>\"", "]"}]}]}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"sels", ",", " ", "exfns"}], "}"}], "=", "\n", "\t\t\t", 
       RowBox[{"Transpose", "@", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{"exfns", ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"sel_", "\[Rule]", "fn_"}], ")"}], "\[RuleDelayed]", 
             "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"sel", ",", " ", "fn"}], "}"}]}], ",", "\n", 
            "\t\t\t\t\t\t", 
            RowBox[{"fn_", ":>", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "OptionValue", "[", "\"\<WavefunctionSelection\>\"", "]"}], 
               ",", " ", "fn"}], "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}], ",", 
          "\n", "\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t", "]"}]}]}], ";", "\n",
       "\t\t", 
      RowBox[{"wfns", "=", "\n", "\t\t\t", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ChemDVRDefaultWavefunctionSelection", "[", 
           RowBox[{"wfns", ",", " ", "#"}], "]"}], "&"}], ",", " ", "sels"}], 
        "]"}]}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "sels"}], "\[Equal]", "1"}], ",", " ", 
         "First", ",", " ", "Identity"}], "]"}], "@", "\n", "\t\t\t", 
       RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Block", "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mx", ",", " ", 
              RowBox[{"eSet", "=", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
              RowBox[{"wfSet", "=", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
              RowBox[{"exFs", "=", "#2"}]}], "}"}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"retE", ",", " ", "\n", "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"Array", "[", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"eSet", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], ",", " ", 
                    RowBox[{"eSet", "[", 
                    RowBox[{"[", "#2", "]"}], "]"}]}], "}"}], "&"}], ",", 
                   "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "@", "wfSet"}], ",", " ", 
                    RowBox[{"Length", "@", "wfSet"}]}], "}"}]}], "\n", 
                  "\t\t\t\t\t\t\t", "]"}], "\[Rule]", "#"}], "&"}], ",", "\n",
                "\t\t\t\t\t\t", "Identity"}], "\n", "\t\t\t\t\t\t", "]"}], 
             "@", "\n", "\t\t\t\t\t", 
             RowBox[{"Table", "[", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"i", "=", "i"}], ",", " ", 
                   RowBox[{"j", "=", "j"}], ",", " ", 
                   RowBox[{"gr", "=", "coreGridPoints"}], ",", " ", 
                   RowBox[{"wfL", "=", 
                    RowBox[{"wfSet", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", " ", 
                   RowBox[{"wfR", "=", 
                    RowBox[{"wfSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}]}], "}"}], ",", "\n", 
                 "\t\t\t\t\t\t\t", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Not", "@", 
                    RowBox[{"ListQ", "@", "exFs"}]}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                   "chemDVRCalcExpectationValue", "[", "\n", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "exFs", ",", " ", "\n", "\t\t\t\t\t\t\t\t\t", "gr", ",", 
                    " ", "\n", "\t\t\t\t\t\t\t\t\t", "wfL", ",", " ", "wfR"}],
                     "\n", "\t\t\t\t\t\t\t\t\t", "]"}], ",", "\n", 
                   "\t\t\t\t\t\t\t\t", 
                   RowBox[{"Map", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "chemDVRCalcExpectationValue", "[", "\n", 
                    "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "#", ",", " ", "\n", "\t\t\t\t\t\t\t\t\t\t", "gr", ",", 
                    " ", "\n", "\t\t\t\t\t\t\t\t\t\t", "wfL", ",", " ", 
                    "wfR"}], "\n", "\t\t\t\t\t\t\t\t\t\t", "]"}], "&"}], ",", 
                    "\n", "\t\t\t\t\t\t\t\t\t", "exFs"}], "\n", 
                    "\t\t\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t\t\t", 
                  "]"}]}], "\n", "\t\t\t\t\t\t\t", "]"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", 
                 RowBox[{"Length", "@", "wfSet"}]}], "}"}], ",", "\n", 
               "\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"j", ",", " ", 
                 RowBox[{"Length", "@", "wfSet"}]}], "}"}]}], "\n", 
              "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t", "]"}], "&"}], 
         ",", "\n", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t", 
          RowBox[{"wfns", ",", "\n", "\t\t\t\t\t", "exfns"}], "\n", 
          "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.731784255927072*^9, 3.7317843715402184`*^9}, {
   3.731784405350422*^9, 3.731784515569873*^9}, {3.7317847436488934`*^9, 
   3.731784744853985*^9}, {3.731785279243309*^9, 3.7317856013532257`*^9}, {
   3.7317873655100317`*^9, 3.731787371984212*^9}, {3.731787563094707*^9, 
   3.731787572634945*^9}, {3.731787616067062*^9, 3.7317876950301857`*^9}, {
   3.731787801916931*^9, 3.7317878524199047`*^9}, {3.731787917967128*^9, 
   3.731787924138693*^9}, {3.73178795814585*^9, 3.731787997677902*^9}, {
   3.7317880420182123`*^9, 3.731788078372403*^9}, {3.7317881149948606`*^9, 
   3.731788116432918*^9}, {3.731788157728228*^9, 3.731788224741891*^9}, {
   3.731790923270014*^9, 3.7317909370188437`*^9}, {3.731791281853166*^9, 
   3.731791283600025*^9}, {3.731791316252041*^9, 3.731791364569499*^9}, {
   3.7317914496582727`*^9, 3.731791449666258*^9}, 3.73179156363304*^9, {
   3.7317921582771463`*^9, 3.731792170856181*^9}, 3.731792595160637*^9, {
   3.731792706147279*^9, 3.731792724095911*^9}, {3.731792776570943*^9, 
   3.731792836793589*^9}, {3.731792943480287*^9, 3.7317929462707243`*^9}, {
   3.7349072169912*^9, 
   3.734907247755095*^9}},ExpressionUUID->"84d84d4c-129e-4a3d-aaf0-\
674ec173c5c0"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PotentialOptimization\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7349068422315397`*^9, 
  3.734906845962099*^9}},ExpressionUUID->"378303b9-dc88-4ea0-b46d-\
dd43cbd87e7a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PotentialOptimizedGrid\[RightFloor]", "CodeSubsubsection",
 
 Evaluatable->True,
 CellChangeTimes->{{3.734907442543182*^9, 
  3.734907457444919*^9}},ExpressionUUID->"faec274d-ce10-47ee-bac5-\
1a07bc323948"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iChemDVRDefault1DPOGrid\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{
  3.734907467734226*^9},ExpressionUUID->"ebddfae9-3602-4694-aa96-\
f2ca41eac4a2"],

Cell[BoxData[
 RowBox[{"iChemDVRDefault1DPOGrid", "//", "Clear"}]], "CodeInput",
 CellChangeTimes->{{3.735149452592684*^9, 
  3.735149453346776*^9}},ExpressionUUID->"54d87f31-5ca8-4f21-9c8b-\
be0ab3deee3b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"iChemDVRDefault1DPOGrid", "[", "\n", "\t", 
    RowBox[{"grid_", ",", "\n", "\t", 
     RowBox[{"wfs", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", " ", "___"}], "}"}], ",", " ", 
        
        RowBox[{"{", 
         RowBox[{"_List", ",", " ", "___"}], "}"}]}], "}"}]}], ",", "\n", 
     "\t", "bs_Integer"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
      "xmat", ",", "\n", "\t\t\t", "gps", ",", "\n", "\t\t\t", "gporder", ",",
        "\n", "\t\t\t", "chob"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"xmat", "=", "\n", "\t\t\t", 
       RowBox[{"ChemDVRDefaultOperatorMatrix", "[", "\n", "\t\t\t\t", 
        RowBox[{"grid", ",", "\n", "\t\t\t\t", "wfs", ",", "\n", "\t\t\t\t", 
         RowBox[{"{", 
          RowBox[{"#", "&"}], "}"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<WavefunctionSelection\>\"", "\[Rule]", "bs"}]}], "\n", 
        "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"SquareMatrixQ", "[", "xmat", "]"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"xmat", "=", 
         RowBox[{"xmat", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "\n", "\t\t\t", "]"}], ";", 
      "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"gps", ",", " ", "chob"}], "}"}], "=", 
       RowBox[{"Eigensystem", "[", "xmat", "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"gporder", "=", 
       RowBox[{"Ordering", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"gps", "-", 
          RowBox[{"xmat", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ";", "\n", 
      "\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"gps", "[", 
         RowBox[{"[", "gporder", "]"}], "]"}], ",", " ", 
        RowBox[{"chob", "[", 
         RowBox[{"[", "gporder", "]"}], "]"}]}], "}"}]}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"iChemDVRDefault1DPOGrid", "[", "\n", "\t", 
   RowBox[{
   "grid_", ",", "\n", "\t", "ke_", ",", "\n", "\t", "pe_", ",", "\n", "\t", 
    "bs_Integer"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"iChemDVRDefault1DPOGrid", "[", "\n", "\t\t", 
   RowBox[{"grid", ",", "\n", "\t\t", 
    RowBox[{"ChemDVRDefaultWavefunctions", "[", "\n", "\t\t\t", 
     RowBox[{"ke", ",", " ", "\n", "\t\t\t", "pe", ",", " ", "\n", "\t\t\t", 
      RowBox[{"\"\<NumberOfWavefunctions\>\"", "\[Rule]", "All"}]}], "\n", 
     "\t\t\t", "]"}], ",", "\n", "\t\t", "bs"}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.734906848221414*^9, 3.73490685363507*^9}, {
   3.734907062173452*^9, 3.7349071177015657`*^9}, {3.73490716402209*^9, 
   3.734907183217366*^9}, {3.73490727303906*^9, 3.734907440453208*^9}, {
   3.734907471170615*^9, 3.734907472061554*^9}, {3.7351494132127953`*^9, 
   3.73514952749372*^9}, {3.7351497688538647`*^9, 3.73514982508632*^9}, {
   3.7351499094035788`*^9, 3.735149920200226*^9}, 3.7351504876682777`*^9, {
   3.735156489568664*^9, 3.7351565043997307`*^9}, {3.735156553355109*^9, 
   3.735156565368414*^9}, 3.7351566109688883`*^9, {3.735156641793379*^9, 
   3.735156699869809*^9}, {3.7351570874499893`*^9, 3.735157139838204*^9}, {
   3.7351708453523197`*^9, 3.7351708949912443`*^9}, {3.735170973665987*^9, 
   3.735170979478301*^9}, {3.735171110657967*^9, 3.735171111164171*^9}, {
   3.73517122942829*^9, 3.7351712717219553`*^9}, 
   3.7351713227656393`*^9},ExpressionUUID->"30299f9e-332c-47a4-a470-\
01bbc3a5fc2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FindGridReording\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7351789221631393`*^9, 
  3.73517892634697*^9}},ExpressionUUID->"ced943db-504e-4a74-b02e-\
ef62fa64af5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"chemDVRPOFindGridReordering", "[", 
   RowBox[{"new_", ",", " ", "old_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"nearestMap", "=", "\n", "\t\t\t\t", 
       RowBox[{"Thread", "[", 
        RowBox[{"new", "->", 
         RowBox[{"Nearest", "[", 
          RowBox[{
           RowBox[{"old", "\[Rule]", "\"\<Index\>\""}], ",", " ", "new", ",", 
           " ", 
           RowBox[{"Length", "@", "new"}]}], "]"}]}], "]"}]}], ",", "\n", 
      "\t\t\t", "dupeGroups"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"dupeGroups", "=", 
      RowBox[{"GroupBy", "[", 
       RowBox[{"nearestMap", ",", " ", 
        RowBox[{"First", "@*", "Last"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"KeyValueMap", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Function", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"dupeGroups", "[", "#", "]"}], "=", 
          RowBox[{"First", "@", 
           RowBox[{"First", "@", "#2"}]}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "#2"}], ">", "1"}], ",", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Do", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"KeyExistsQ", "[", 
                   RowBox[{"dupeGroups", ",", " ", "pos"}], "]"}]}], ",", 
                 "\n", "\t\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"dupeGroups", "[", "pos", "]"}], "=", 
                   RowBox[{"First", "@", "el"}]}], ";", "\n", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{"Break", "[", "]"}]}]}], "\n", "\t\t\t\t\t\t\t\t", 
                "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"pos", ",", " ", 
                 RowBox[{"Last", "@", "el"}]}], "}"}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"el", ",", " ", 
               RowBox[{"Rest", "@", "#"}]}], "}"}]}], "\n", "\t\t\t\t\t\t", 
            "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}], 
       ",", "\n", "\t\t\t", "dupeGroups"}], "\n", "\t\t\t", "]"}], ";", "\n", 
     "\t\t", 
     RowBox[{"new", "/.", 
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"Values", "[", "dupeGroups", "]"}], ",", " ", 
        RowBox[{"Keys", "[", "dupeGroups", "]"}]}], "]"}]}]}]}], "\n", "\t\t",
    "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.7351789321276417`*^9, 
  3.735178972762232*^9}},ExpressionUUID->"af9b795e-d69d-4e3e-8c96-\
b42d38e7ab01"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ChemDVRDefaultPotentialOptimize\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.734907467734226*^9, 3.734907481066513*^9}, {
  3.734908519261991*^9, 
  3.73490852342985*^9}},ExpressionUUID->"62fedd25-1c62-4526-8d47-\
72abaa4baada"],

Cell["\<\
\[LeftCeiling]
\tIterate over the grids, optimizing each degree of freedom
\tReturn the transformed versions of:
\t\t\[FilledSmallCircle] the grids
\t\t\[FilledSmallCircle] the potentials
\t\t\[FilledSmallCircle] the kinetic energies
\t\t\[FilledSmallCircle] the Hamiltonians
\tLet the returned elements be requested explicitly so as to minimize the \
overhead in this
\tAlso should support optimization of 1D grid from the wavefunctions
\[RightFloor]\
\>", "Text",
 Evaluatable->True,
 CellChangeTimes->{{3.734908509630238*^9, 
  3.734908683307006*^9}},ExpressionUUID->"5830bcc7-e05b-4d4e-bdc1-\
f379cd638778"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "pokey"}], "=", "\n", "\t", 
   "\"\<`` is not a valid spec for potential optimization. Valid ones are \
``\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ChemDVRRun", "::", "pono"}], "=", "\n", "\t", 
   "\"\<No valid specs for potential optimization requested.\>\""}], 
  ";"}]}], "CodeInput",
 CellChangeTimes->{{3.735150783716309*^9, 3.735150826656713*^9}, {
  3.7351509314251966`*^9, 3.7351509421968412`*^9}, {3.735151173365521*^9, 
  3.735151202594632*^9}, {3.7351517520374813`*^9, 
  3.7351517538632603`*^9}},ExpressionUUID->"fb7794a0-107b-4667-94a6-\
fdeabbc9a161"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ChemDVRDefaultPotentialOptimize", "]"}], "=", 
   "\n", "\t", 
   RowBox[{
    RowBox[{"DeleteDuplicatesBy", "[", "First", "]"}], "@", "\n", "\t\t", 
    RowBox[{"Join", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Options", "[", "ChemDVRDefaultKineticEnergy", "]"}], ",", "\n",
       "\t\t\t", 
      RowBox[{"Options", "[", "ChemDVRDefaultPotentialEnergy", "]"}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"{", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"\"\<OptimizedComponents\>\"", "\[Rule]", "All"}], ",", "\n", 
        "\t", "\t", "\t\t", 
        RowBox[{"\"\<OptimizedCoordinates\>\"", "\[Rule]", "All"}], ",", "\n",
         "\t", "\t", "\t\t", 
        RowBox[{"\"\<OptimizedBasisSize\>\"", "\[Rule]", 
         RowBox[{"Scaled", "[", ".25", "]"}]}]}], "\n", "\t\t\t\t", "}"}]}], 
     "\n", "\t\t\t", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ChemDVRDefaultPotentialOptimize", "[", "\n", "\t", 
   RowBox[{"grid_", ",", "\n", "\t", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"subgrids", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"ChemDVRDefaultGridPointList", "[", "\n", "\t\t\t\t\t\t", 
          RowBox[{"grid", ",", " ", "\n", "\t\t\t\t\t\t", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "ops", "}"}], ",", " ", 
             RowBox[{"Options", "[", "ChemDVRDefaultGridPointList", "]"}]}], 
            "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"l", ":", 
             RowBox[{"{", "__List", "}"}]}], ":>", "\n", "\t", "\t\t\t\t\t\t", 
            RowBox[{"Map", "[", "\n", "\t", "\t\t\t\t\t\t\t", 
             RowBox[{
             "DeleteDuplicates", ",", " ", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{"Transpose", "@", "l"}]}], "\n", "\t\t\t\t\t\t\t\t", 
             "]"}]}], ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{"l_List", "\[RuleDelayed]", 
            RowBox[{"{", "l", "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", "coordSpec", ",", "\n", 
      "\t\t\t\t", "grids", ",", "\n", "\t\t\t\t", "keels", ",", "\n", 
      "\t\t\t\t", "kins", ",", "\n", "\t\t\t\t", "potFuns", ",", "\n", 
      "\t\t\t\t", "pots", ",", "\n", "\t\t\t\t", "size", ",", "\n", 
      "\t\t\t\t", "newGrid", ",", "\n", "\t\t\t\t", "orders", ",", "\n", 
      "\t\t\t\t", "trans", ",", "\n", "\t\t\t\t", "optSpec", ",", "\n", 
      "\t\t\t\t", 
      RowBox[{"optParts", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t\t", "optGrids", ",", "\n", 
      "\t\t\t\t", "optKins", ",", "\n", "\t\t\t\t", "optPots", ",", "\n", 
      "\t\t\t\t", "optHams", ",", "\n", "\t\t\t\t", "poKeys"}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"optSpec", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<OptimizedComponents\>\"", "]"}], ",",
         "\n", "\t\t\t\t", 
        RowBox[{"All", "->", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Grid\>\"", ",", " ", "\"\<PotentialEnergy\>\"", ",", " ", 
           "\"\<KineticEnergy\>\""}], "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"poKeys", "=", "\n", "\t\t\t", 
      RowBox[{"{", "\n", "\t\t\t\t", 
       RowBox[{
       "\"\<Grid\>\"", ",", "\n", "\t\t\t\t", "\"\<Transformation\>\"", ",", 
        "\n", "\t\t\t\t", "\"\<KineticEnergy\>\"", ",", "\n", "\t\t\t\t", 
        "\"\<PotentialEnergy\>\"", ",", "\n", "\t\t\t\t", 
        "\"\<Hamiltonian\>\""}], "\n", "\t\t\t\t", "}"}]}], ";", "\n", "\t\t", 
     RowBox[{"Replace", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"List", "@", "optSpec"}]}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Except", "[", 
          RowBox[{"(", 
           RowBox[{"Alternatives", "@@", "poKeys"}], ")"}], "]"}]}], "\n", 
        "\t\t\t\t", "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"l", ":", 
         RowBox[{"{", "__", "}"}]}], ":>", "\n", "\t\t\t\t", 
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"ChemDVRObject", "::", "pokey"}], ",", " ", "l", ",", " ", 
          "poKeys"}], "]"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"optSpec", "=", "\n", "\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"poKeys", ",", " ", "optSpec"}], "]"}], ",", "\n", 
        "\t\t\t\t", "optSpec", ",", "\n", "\t\t\t\t", 
        RowBox[{"Cases", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"List", "@", "optSpec"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"Alternatives", "@@", "poKeys"}]}], "\n", "\t\t\t\t\t", 
         "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"poKeys", ",", " ", "optSpec"}], "]"}]}], "&&", 
        RowBox[{
         RowBox[{"Length", "@", "optSpec"}], "\[Equal]", "0"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{"ChemDVRObject", "::", "pono"}], "]"}], ";", "\n", "\t\t\t", 
        
        RowBox[{"Throw", "@", "$Failed"}]}]}], "\n", "\t\t\t", "]"}], ";", 
     "\n", "\t\t", 
     RowBox[{"coordSpec", "=", 
      RowBox[{"OptionValue", "[", "\"\<OptimizedCoordinates\>\"", "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{"grids", "=", 
      RowBox[{"subgrids", "[", 
       RowBox[{"[", "coordSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"keels", "=", "\n", "\t\t\t", 
      RowBox[{
      "ChemDVRDefaultKineticEnergyElementFunction", "@", "\n", "\t\t\t\t", 
       RowBox[{"FilterRules", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"{", "ops", "}"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{
         "Options", "@", "ChemDVRDefaultKineticEnergyElementFunction"}]}], 
        "\n", "\t\t\t\t\t", "]"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "keels"}], "!=", 
        RowBox[{"Length", "@", "grids"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"keels", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"keels", ",", " ", 
             RowBox[{"Length", "@", "grids"}]}], "]"}], ",", " ", "1"}], 
          "]"}], "[", 
         RowBox[{"[", "coordSpec", "]"}], "]"}]}]}], "\n", "\t\t\t", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"kins", "=", "\n", "\t\t\t", 
      RowBox[{"ChemDVRDefaultKineticEnergyLists", "[", "\n", "\t\t\t\t", 
       RowBox[{
       "grid", ",", "\n", "\t\t\t\t", "keels", ",", "\n", "\t\t\t\t", 
        RowBox[{"FilterRules", "[", 
         RowBox[{
          RowBox[{"{", "ops", "}"}], ",", " ", 
          RowBox[{"Options", "@", "ChemDVRDefaultKineticEnergyLists"}]}], 
         "]"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"potFuns", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Map", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"ChemDVRDefaultPotentialEnergyElementFunction", "[", 
           RowBox[{"\"\<PotentialFunction\>\"", "\[Rule]", "#"}], "]"}], 
          "&"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<PotentialFunction\>\"", "]"}], 
           ",", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"a", ":", 
             RowBox[{"Except", "[", 
              RowBox[{"list", ":", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"_Function", "|", "_Symbol"}], ")"}], "..."}], 
                "}"}]}], "]"}]}], "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"a", ",", " ", 
              RowBox[{"Length", "@", "subgrids"}]}], "]"}]}]}], "\n", 
          "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}], "[", 
       RowBox[{"[", "coordSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "potFuns"}], "!=", 
        RowBox[{"Length", "@", "grids"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"potFuns", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{"potFuns", ",", " ", 
             RowBox[{"Length", "@", "grids"}]}], "]"}], ",", " ", "1"}], 
          "]"}], "[", 
         RowBox[{"[", "coordSpec", "]"}], "]"}]}]}], "\n", "\t\t\t", "]"}], 
     ";", "\n", "\t\t", 
     RowBox[{"pots", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{"iChemDVRPotentialEnergy", ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{"grids", ",", "\n", "\t\t\t\t\t", "potFuns"}], "\n", 
         "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     
     RowBox[{"size", "=", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Flatten", "[", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<OptimizedBasisSize\>\"", "]"}], 
           ",", " ", 
           RowBox[{"Length", "@", "grids"}]}], "]"}], ",", "\n", "\t\t\t\t", 
         "1"}], "\n", "\t\t\t\t", "]"}], "[", 
       RowBox[{"[", "coordSpec", "]"}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"size", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Replace", "[", 
          RowBox[{"#", ",", "\n", "\t", "\t\t\t\t", 
           RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"i_Integer", "?", "Positive"}], "\[RuleDelayed]", "i"}],
              ",", "\n", "\t", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"Scaled", "[", 
               RowBox[{"i_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0", "<", "#", "<", "1"}], "&"}], ")"}]}], "]"}], ":>",
               "\n", "\t", "\t\t\t\t\t\t", 
              RowBox[{"Ceiling", "[", 
               RowBox[{"i", "*", 
                RowBox[{"Length", "@", "#2"}]}], "]"}]}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{"_", "\[Rule]", "All"}]}], "\n", "\t", "\t\t\t\t\t", 
            "}"}]}], "\n", "\t", "\t\t\t\t", "]"}], "&"}], ",", "\n", "\t", 
        "\t\t\t", 
        RowBox[{"{", "\n", "\t", "\t\t\t\t", 
         RowBox[{"size", ",", "\n", "\t", "\t\t\t\t", "grids"}], "\n", "\t", 
         "\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"trans", "=", "\n", "\t\t\t", 
      RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
       RowBox[{"iChemDVRDefault1DPOGrid", ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
         "grids", ",", "\n", "\t\t\t\t\t", "kins", ",", "\n", "\t\t\t\t\t", 
          "pots", ",", "\n", "\t\t\t\t\t", "size"}], "\n", "\t\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newGrid", ",", " ", "trans"}], "}"}], "=", "\n", "\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trans", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"trans", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "}"}]}], ";", 
     RowBox[{"(*", "\n", "\t\t", 
      RowBox[{
       RowBox[{"orders", "=", "\n", "\t\t\t", 
        RowBox[{"MapThread", "[", "\n", "\t\t\t\t", 
         RowBox[{"chemDVRPOFindGridReordering", ",", "\n", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{"newGrid", ",", "\n", "\t\t\t\t\t", "grids"}], "\n", 
           "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";"}], "*)"}], 
     "\n", "\t\t", 
     RowBox[{"Table", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"optParts", "[", "bit", "]"}], "=", "\n", "\t\t\t\t", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "bit", ",", "\n", "\t\t\t\t\t", "\"\<Grid\>\"", ",", "\n", 
          "\t\t\t\t\t\t", "newGrid", ",", "\n", "\t\t\t\t\t", 
          "\"\<Transformation\>\"", ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"trans", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", "\n", 
          "\t\t\t\t\t", "\"\<KineticEnergy\>\"", ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "/", "#3"}], ")"}], "*"}], 
            "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#2", ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{";;", "#3"}], ",", " ", 
                  RowBox[{";;", "#3"}]}], "]"}], "]"}], ".", 
               RowBox[{"Transpose", "[", "#2", "]"}]}], ")"}], "&"}], ",", 
            "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{"kins", ",", "\n", "\t\t\t\t\t\t\t\t", "trans", ",", 
              RowBox[{"(*", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"orders", ","}], "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
              "size"}], "\n", "\t\t\t\t\t\t\t\t", "}"}]}], "\n", 
           "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "\"\<PotentialEnergy\>\"", ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "/", "#3"}], ")"}], "*"}], 
            "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#2", ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"#3", ",", " ", 
                  RowBox[{";;", "#3"}]}], "]"}], "]"}], ".", 
               RowBox[{"Transpose", "[", "#2", "]"}]}], ")"}], "&"}], ",", 
            "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{"pots", ",", "\n", "\t\t\t\t\t\t\t\t", "trans", ",", 
              RowBox[{"(*", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"orders", ","}], "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
              "size"}], "\n", "\t\t\t\t\t\t\t\t", "}"}]}], "\n", 
           "\t\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
          "\"\<Hamiltonian\>\"", ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"MapThread", "[", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "/", "#3"}], ")"}], "*"}], 
            "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#2", ".", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"#3", ",", " ", 
                  RowBox[{";;", "#3"}]}], "]"}], "]"}], ".", 
               RowBox[{"Transpose", "[", "#2", "]"}]}], ")"}], "&"}], ",", 
            "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"kins", "+", "pots"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
              "trans", ",", 
              RowBox[{"(*", "\n", "\t\t\t\t\t\t\t\t", 
               RowBox[{"orders", ","}], "*)"}], "\n", "\t\t\t\t\t\t\t\t", 
              "size"}], "\n", "\t\t\t\t\t\t\t\t", "}"}]}], "\n", 
           "\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"{", 
        RowBox[{"bit", ",", " ", 
         RowBox[{"DeleteDuplicates", "@", 
          RowBox[{"Flatten", "@", 
           RowBox[{"List", "@", "optSpec"}]}]}]}], "}"}]}], "\n", "\t\t\t", 
      "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"ListQ", "@", "optSpec"}]}], "&&", 
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"optParts", ",", " ", "optSpec"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"optParts", "[", 
        RowBox[{"[", "optSpec", "]"}], "]"}], ",", "\n", "\t\t\t", 
       "optParts"}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]}], "CodeInput",
 CellChangeTimes->{{3.734907493354336*^9, 3.734907539930991*^9}, {
   3.734907621136237*^9, 3.734907625172461*^9}, {3.7349076811917973`*^9, 
   3.734907719117687*^9}, {3.734907765742722*^9, 3.734907768730433*^9}, {
   3.734908474675712*^9, 3.7349084862651*^9}, {3.734908648036831*^9, 
   3.7349086500215387`*^9}, {3.735146763739888*^9, 3.735146817369739*^9}, {
   3.735146852763596*^9, 3.735146909079071*^9}, {3.735146944576911*^9, 
   3.735147041422482*^9}, {3.735147072419714*^9, 3.7351470825496473`*^9}, {
   3.735147150927917*^9, 3.735147203164974*^9}, {3.735147251051236*^9, 
   3.735147264978786*^9}, {3.735147721782694*^9, 3.735147778601151*^9}, {
   3.735147817655122*^9, 3.7351478757081537`*^9}, {3.735148290360561*^9, 
   3.7351483738796873`*^9}, {3.735148571433708*^9, 3.735148575116391*^9}, {
   3.7351486540460463`*^9, 3.73514888362528*^9}, {3.735149384465302*^9, 
   3.735149391522188*^9}, {3.73514954324826*^9, 3.735149586167138*^9}, {
   3.735149617171872*^9, 3.7351496444963083`*^9}, {3.735149676103874*^9, 
   3.735149755870347*^9}, {3.735149982618764*^9, 3.735150008096188*^9}, {
   3.735150051336615*^9, 3.735150189647738*^9}, {3.735150226232153*^9, 
   3.735150380525981*^9}, {3.735150422777831*^9, 3.735150447274061*^9}, {
   3.735150593036426*^9, 3.7351507236057997`*^9}, {3.7351507620788517`*^9, 
   3.735150775474052*^9}, {3.735150833553587*^9, 3.735150913019356*^9}, {
   3.735150989201408*^9, 3.735151044415913*^9}, {3.735151090909333*^9, 
   3.735151167313714*^9}, {3.735151658309409*^9, 3.73515166245013*^9}, {
   3.7351516968102007`*^9, 3.735151702657447*^9}, {3.735151848225066*^9, 
   3.735152016330752*^9}, 3.735152479004547*^9, {3.735152715675838*^9, 
   3.7351527328220177`*^9}, {3.735152823551167*^9, 3.735152843644629*^9}, {
   3.735152918038493*^9, 3.735152935987586*^9}, 3.735152984790578*^9, {
   3.7351550487894917`*^9, 3.735155094052417*^9}, {3.735155166808591*^9, 
   3.735155308394971*^9}, {3.7351553465125427`*^9, 3.735155350067466*^9}, {
   3.735155877435854*^9, 3.735155879922902*^9}, {3.735155910059369*^9, 
   3.735155938389632*^9}, 3.735156146368558*^9, {3.735156269381875*^9, 
   3.735156312298017*^9}, {3.73515640181262*^9, 3.73515642089568*^9}, {
   3.735156786079042*^9, 3.735156787560478*^9}, {3.735156837560625*^9, 
   3.735156842582439*^9}, {3.735170947269451*^9, 3.735170960233891*^9}, {
   3.7351713435545073`*^9, 3.735171360972595*^9}, {3.7351718719141283`*^9, 
   3.73517189948225*^9}, {3.735177347885845*^9, 3.735177361545094*^9}, {
   3.7351774092632227`*^9, 3.7351774636592827`*^9}, {3.735177519408931*^9, 
   3.735177527157693*^9}, {3.7351775663524714`*^9, 3.735177602314011*^9}, {
   3.7351776483431883`*^9, 3.735177754917255*^9}, {3.735177794611534*^9, 
   3.735177808616561*^9}, {3.7351778444952583`*^9, 3.735177968260783*^9}, {
   3.7351780515274982`*^9, 3.735178057547607*^9}, {3.73517813921693*^9, 
   3.7351784184777813`*^9}, {3.735178452807762*^9, 3.735178516775339*^9}, {
   3.7351788113950453`*^9, 3.735178883597197*^9}, 3.735178914817358*^9, {
   3.735178984891302*^9, 3.7351790618840933`*^9}, {3.735179097530448*^9, 
   3.73517914283854*^9}},ExpressionUUID->"5cec5bb5-a842-4cac-a970-\
c615a5563f0c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"fdeebcf6-8c06-4eff-91a0-\
04c994bffda0"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"9009c70d-1aad-415c-9701-\
edff1eaf5262"]
},
WindowSize->{789, 764},
WindowMargins->{{Automatic, 0}, {6, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

