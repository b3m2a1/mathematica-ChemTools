(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



CreateGeometricAtomset::usage=
	"Makes a new atomset with specified geometry";


Begin["`Private`"];


$CreateGeometricAtomsetGeometries=
	<|
		"Linear"->
			CreateLinearAtomset,
		"Bent"->
			CreateLinearAtomset,
		"TrigonalPyrimidal"->
			CreateTrigonalPyrimidalAtomset,
		"Tetrahedral"->
			CreateTetrahedralAtomset,
		"TrigonalBipyrimidal"->
			CreateTrigonalBipyrimidalAtomset,
		"SquarePlanar"->
			CreateSquarePlanarAtomset,
		"SquarePyrimidal"->
			CreateSquarePyrimidalAtomset,
		"Octahedral"->
			CreateOctahedralAtomset
		|>


CreateGeometricAtomset[
	geom:Alternatives@@Keys@$CreateGeometricAtomsetGeometries,
	check:True|False:False,
	args___
	]:=
	With[{res=$CreateGeometricAtomsetGeometries[geom][check,args]},
		res/;ChemObjectQ@res
		]


CreateTetrahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateTetrahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateTetrahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateTetrahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateTetrahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateSquarePlanarAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"C",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{4}]}
	]:=
	With[{core=ChemImport["SF6"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


CreateOctahedralAtomset[
	check:True|False:False,
	coreEl:_String|{_String,___}|ChemSinglePattern:"S",
	elements:{Repeated[_String|{_String,___}|ChemSinglePattern,{6}]}
	]:=
	With[{core=ChemImport["methane"]},
		With[{
			cCore=First@AtomsetGetAtoms[core,"C"],
			hs=AtomsetGetAtoms[core,"H"],
			newCore=CreateAtom@coreEl,
			newOuter=CreateAtom/@elements,
			oldBonds=ChemGet[core["Atoms"],"Bonds"]
			},
			AtomsetSubstituteAtom[
				core,
				Prepend[cCore->newCore]@
					Thread[hs->newOuter],
				check
				];
			ChemRemove/@Flatten@{hs,cCore,oldBonds};
			AtomsetNormalizeBonds[core];
			core
			]
		]


End[];



