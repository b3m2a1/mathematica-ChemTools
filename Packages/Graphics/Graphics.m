(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Section:: *)
(*Graphics*)



ChemGraphics::usage=
	"Generates Graphics for a set of atoms and stuff";
ChemGraphics3D::usage=
	"Generates Graphics3D for a set of atoms and stuff";


Begin["`Private`"];


(* ::Subsubsection::Closed:: *)
(*ChemGraphics*)



Options[ChemGraphics]=
	Join[
		Options[Graphics],
		Options[ChemGraphicsAtomsetObjects]
		];
ChemGraphics[
	els:{{_String, _List, ___}, ___},
	ops:OptionsPattern[]
	]:=
	Graphics[
		ChemGraphicsAtomsetObjects[
			els, 
			FilterRules[
				{ops},
				Options@ChemGraphicsAtomsetObjects
				]
			],
		FilterRules[
			{ops},
			Options@Graphics
			]
		]


(* ::Subsubsection::Closed:: *)
(*ChemGraphics3D*)



Options[ChemGraphics3D]=
	Join[
		Options[Graphics3D],
		Options[ChemGraphicsAtomsetObjects3D]
		];
ChemGraphics3D[
	els:{{_String, _List, ___}, ___},
	ops:OptionsPattern[]
	]:=
	Graphics3D[
		ChemGraphicsAtomsetObjects3D[
			els, 
			FilterRules[
				{ops},
				Options@ChemGraphicsAtomsetObjects3D
				]
			],
		FilterRules[
			{ops},
			Options@Graphics3D
			]
		]


End[];



