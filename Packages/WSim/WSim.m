(* ::Package:: *)

(* Autogenerated Package *)

$WalkerSimulatorClass::usage=
	"Walker simulator class";
WalkerSimulator::usage=
	"Makes a new WalkerSimulator object";


Begin["`Private`"];


PackageLoadPacletDependency["SymbolObjects`"];
<<SymbolObjects`Package`


(* ::Subsection:: *)
(*Object*)



(* ::Subsubsection::Closed:: *)
(*$WalkerSimulatorClass*)



$WalkerSimulatorClass=
	SObj[
			"WalkerSimulation",
			{"Class"},
			<|
				"ObjectInitialize"->
					SObjMethod@
						WSimInitialize,
				"DisplayHead"->"WalkerSimulator",
				"DisplaySummaryItems"->{"Class"},
				"Class"->"WalkerSimulatorGenerator",
				"ObjectInstanceProperties" ->
					<|
						"LoadPropagator"->
							SObjMethod@
									WSimGetPropagator,
						"UpdatePropagator"->
							SObjMethod@
								Function[
									#["Propagator"]=#["LoadPropagator"][]
									],
						"Propagator"->
							SObjProperty@
								Function[#["UpdatePropagator"][]],
						"Runtime"->0,
						"Steps"->0,
						"TimeUnits"->"Seconds",
						"TimeStep"->Quantity[1, "Milliseconds"],
						"SimulationTime"->Quantity[1, "Seconds"],
						"TrajectorySampling"->Quantity[10, "Milliseconds"],
						"Propagate"->
							SObjMethod@WSimPropagateWalkers,
						"CurrentTime"->Quantity[0., "Seconds"],
						"PlotTrajectory"->
							SObjMethod@WSimPlotTrajectory,
						"AnimateTrajectory"->
							SObjMethod@WSimAnimateTrajectories,
						"PlotSnapshot"->
							SObjMethod@WSimPlotSnapshot,
						"Reset"->
							SObjMethod@WSimReset,
						"Equilibrate"->
							SObjMethod@WSimEquilibrateSystem,
						"Step"->
							SObjMethod@WSimStepSystem
						|>
				|>
			]


(* ::Subsubsection::Closed:: *)
(*WalkerSimulator*)



WalkerSimulator[
	cname:_String|None:None, 
	walkers:Except[_String|None], 
	ops:OptionsPattern[]
	]:=
	$WalkerSimulatorClass["New"][cname, walkers, ops]


(* ::Subsection:: *)
(*Autocomplete*)



PackageAddAutocompletions[
	"WalkerSimulator",
	{WSimGetClassNames[]}
	]


End[];



