Notebook[{

Cell[CellGroupData[{
Cell["OpenBabel", "CodeSection",
 CellChangeTimes->{{3.6948290186131153`*^9, 
  3.694829027070009*^9}},ExpressionUUID->"86b8b675-9806-4e2d-a19e-\
e41cbfa29194"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Basics\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.694980841373139*^9, 
  3.694980841979951*^9}},ExpressionUUID->"f876f7c7-4baa-4e8b-881b-\
755b8274763a"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OpenBabel\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.694980691961752*^9, 3.6949806928657923`*^9}, {
  3.694980842955681*^9, 
  3.694980850155466*^9}},ExpressionUUID->"a96affc6-044a-4677-b56c-\
ebb8d53d0e98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OpenBabel", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Primary connection object for running OpenBabel\>\""}], 
  ";"}]], "CodeInput",
 CellChangeTimes->{{3.6949806632107162`*^9, 
  3.694980682106369*^9}},ExpressionUUID->"de075dd2-80a5-4a3b-8ca2-\
ebefad6bb298"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$OpenBabel", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Default OpenBabel object\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$OBDir", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Default OpenBabel directory\>\""}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.694980694122616*^9, 
  3.6949807467040873`*^9}},ExpressionUUID->"b0f1d91f-adb6-4780-8695-\
9b8d2376eddd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OBBuild", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Downloads and builds openbabel\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.6949808988359737`*^9, 
  3.694980910852754*^9}},ExpressionUUID->"edca0432-3455-4283-ab60-\
44c35c7aa666"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Run\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.6949807505205717`*^9, 
  3.694980752303699*^9}},ExpressionUUID->"471e1fe2-35e3-4404-80e3-\
064bc3373a67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBInput", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Input wrapper for OpenBabel\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBOutput", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Output wrapper for OpenBabel\>\""}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.6949807709936132`*^9, 
  3.694980802246274*^9}},ExpressionUUID->"c5dc372b-20ba-4b56-a27f-\
f7a828110187"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$OBPythonInterpreter", "::", "usage"}], "=", 
   "\"\<The interpreter for OpenBabel\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$OBPyRunFileString", "::", "usage"}], "=", 
   "\"\<The string fed as an input to OpenBabel\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$OBPyRunErrorMessage", "::", "usage"}], "=", 
   "\"\<The error message returned from OpenBabel\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"899a3863-fa60-43e2-8471-ddcc30eda3cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBRun", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Runs OpenBabel\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBPyCommand", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Converts to OpenBabel ready python code\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBPyRun", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Runs after converting to python\>\""}], ";"}]}], "CodeInput",
 CellChangeTimes->{{3.694980754677994*^9, 3.6949807655995007`*^9}, {
  3.6949822601202374`*^9, 3.694982283510044*^9}, {3.7152900405515347`*^9, 
  3.715290067085066*^9}, {3.715550649633896*^9, 
  3.7155506718800573`*^9}},ExpressionUUID->"7863e3ce-0e98-4137-ac11-\
ad6ddbce0165"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OBParse", "::", "usage"}], "=", "\n", "\t", 
   "\"\<General purpose parsing for open babel output. To be extended.\>\""}],
   ";"}]], "CodeInput",
 CellChangeTimes->{{3.6949808133957253`*^9, 3.694980833021326*^9}, 
   3.6949822620382643`*^9},ExpressionUUID->"05ab478b-9076-4c36-90c7-\
9ffdde1b8d5e"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Usages\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.715292342745297*^9, 3.715292347833041*^9}, {
  3.71537250025371*^9, 
  3.715372501291091*^9}},ExpressionUUID->"d8721362-d959-42b6-ba50-\
140b2996d6d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBForceFieldEnergy", "::", "usage"}], "=", 
   "\"\<A basic energy calculator\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBFormatConvert", "::", "usage"}], "=", 
   "\"\<A molecular format converter\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"OBRingMap", "::", "usage"}], "=", 
  "\"\<Maps a function over a molecule\>\""}]}], \
"CodeInput",ExpressionUUID->"120a97ca-e682-46a2-81f1-551955d49b3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"2c1e5459-aad0-4cab-b85e-\
012090697f20"],

Cell[BoxData[
 RowBox[{"PyToolsLoad", "[", "]"}]], "CodeInput",
 CellChangeTimes->{{3.715551319564178*^9, 3.71555133834473*^9}, {
  3.73239494018906*^9, 
  3.732394943201606*^9}},ExpressionUUID->"0dd29746-3879-4d28-b485-\
fe4958b66a32"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Build\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.6949828717993917`*^9, 
  3.6949828737339363`*^9}},ExpressionUUID->"5cd8128f-8979-4b66-ba47-\
a63c6e57131f"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]openbabelsrc\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"928ba1fa-0a32-4d31-9117-0c52acec90d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$openbabelsrc", "=", "\n", "\t", 
   "\"\<https://sourceforge.net/projects/openbabel/files/latest/download?\
source=files\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.69498233068815*^9, 3.6949823454838953`*^9}, {
   3.694984302338727*^9, 3.6949843037134953`*^9}, {3.695127973932333*^9, 
   3.695127976303213*^9}, {3.695128292532958*^9, 3.6951282951766167`*^9}, 
   3.699312524483398*^9},ExpressionUUID->"0830cad5-d068-4861-9140-\
d40dbe73afcf"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obprefix\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"52e48b8a-43c6-4dfd-9f98-261cd07fefcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$obprefix", "=", "\"\<openbabel\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.6950971800479116`*^9, 3.695097196979931*^9}, {
  3.69512836126399*^9, 
  3.695128361774405*^9}},ExpressionUUID->"5237d12a-314e-49f8-8138-\
1b0f12dd2ef9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]openbabelDownload\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"bfdca2fb-2b2c-48c3-b6e6-a521f605938d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"openbabelDownload", "[", 
    RowBox[{"dir_String", "?", "DirectoryQ"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"tmpDir", "=", "\n", "\t\t\t\t", 
       RowBox[{"CreateDirectory", "@", "\n", "\t\t\t\t\t", 
        RowBox[{"FileNameJoin", "@", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{"$TemporaryDirectory", ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{"StringJoin", "@", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"Alphabet", "[", "]"}], ",", "10"}], "]"}]}]}], "\n", 
          "\t\t\t\t\t\t", "}"}]}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", 
     "\t\t\t", 
     RowBox[{"Monitor", "[", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"With", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"f", "=", 
            RowBox[{"URLDownload", "[", 
             RowBox[{"$openbabelsrc", ",", "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"FileNameJoin", "@", 
               RowBox[{"{", 
                RowBox[{"tmpDir", ",", "\"\<openbabel-src.tar.gz\>\""}], 
                "}"}]}]}], "]"}]}], ",", "\n", "\t", "\t", "\t", "\t", "\t", 
           "\t", 
           RowBox[{"out", "=", 
            RowBox[{"FileNameJoin", "@", 
             RowBox[{"{", 
              RowBox[{"dir", ",", "$obprefix"}], "}"}]}]}]}], "\n", "\t", 
          "\t", "\t\t\t\t", "}"}], ",", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"ExtractArchive", "[", 
           RowBox[{"f", ",", "tmpDir"}], "]"}], ";", "\n", "\t", "\t", "\t", 
          "\t", "\t", 
          RowBox[{"DeleteFile", "[", "f", "]"}], ";", "\n", "\t", "\t\t\t\t", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"DirectoryQ", "@", "out"}], ",", 
            RowBox[{"DeleteDirectory", "[", 
             RowBox[{"out", ",", 
              RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], "]"}],
           ";", "\n", "\t", "\t\t\t\t", 
          RowBox[{"CopyDirectory", "[", 
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"FileNames", "[", 
              RowBox[{"\"\<*\>\"", ",", "tmpDir"}], "]"}]}], ",", "out"}], 
           "]"}], ";", "\n", "\t", "\t", "\t", "\t", "\t", 
          RowBox[{"Quiet", "@", 
           RowBox[{"DeleteDirectory", "[", 
            RowBox[{"tmpDir", ",", 
             RowBox[{"DeleteContents", "\[Rule]", "True"}]}], "]"}]}], ";", 
          "\n", "\t", "\t\t\t\t", 
          RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{"out", ",", "\n", "\t", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Except", "[", 
              RowBox[{"_String", "?", "FileExistsQ"}], "]"}], ":>", "\n", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"PackageRaiseException", "[", 
              RowBox[{
              "\"\<OpenBabelBuild\>\"", ",", "\n", "\t\t\t\t\t\t\t\t", 
               "\"\<OpenBabel failed to download to ``\>\"", ",", "\n", 
               "\t\t\t\t\t\t\t\t", 
               RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
                RowBox[{"{", "out", "}"}]}]}], "\n", "\t\t\t\t\t\t\t\t", 
              "]"}]}]}], "\n", "\t\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t\t\t", 
        "]"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
       "Internal`LoadingPanel", "[", "\"\<Downloading OpenBabel\>\"", "]"}]}],
       "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"f6671e1b-1838-43a3-9cf4-b73a1098a0fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obDownload\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"aaf46423-f61c-4af5-ac71-68dd2a701b2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obDownload", "[", "parentDir_", "]"}], ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"!", 
      RowBox[{"FileExistsQ", "@", 
       RowBox[{"FileNameJoin", "@", 
        RowBox[{"{", 
         RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}]}], "||", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"Length", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"Select", "[", "DirectoryQ", "]"}], "@", "\n", "\t", "\t\t\t", 
        RowBox[{"FileNames", "[", 
         RowBox[{"\"\<*\>\"", ",", " ", 
          RowBox[{"FileNameJoin", "@", 
           RowBox[{"{", 
            RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}], "]"}]}], "\n",
        "\t", "\t\t", "]"}], "===", "0"}]}], ",", "\n", "\t", "\t", 
    RowBox[{"openbabelDownload", "@", "parentDir"}]}], "\n", "\t", "\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"2ef42bec-602c-482c-b8db-455e0baa4059"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obNonEmptyDirQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"c5a28056-3b82-4699-8e1b-e463de8c5a3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obNonEmptyDirQ", "[", "parentDir_", "]"}], ":=", "\n", "\t", 
  RowBox[{
   RowBox[{"DirectoryQ", "@", 
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}], "&&", "\n", "\t\t", 
   
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<*\>\"", ",", 
       RowBox[{"FileNameJoin", "@", 
        RowBox[{"{", 
         RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}], "]"}], "]"}], 
    ">", "0"}]}]}]], \
"CodeInput",ExpressionUUID->"b7f83ea6-d27a-48af-a87b-75edfba5d4ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obNoBinQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7444e255-b6dc-4506-910a-4cae6ed5fced"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obNoBinQ", "[", "parentDir_", "]"}], ":=", "\n", "\t", 
  RowBox[{"!", 
   RowBox[{"DirectoryQ", "@", 
    RowBox[{"FileNameJoin", "@", 
     RowBox[{"{", 
      RowBox[{"parentDir", ",", "$obprefix", ",", "\"\<bin\>\""}], 
      "}"}]}]}]}]}]], \
"CodeInput",ExpressionUUID->"9b65649d-da33-46b1-8ade-b7bc70e41164"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obBuild\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a65c25d8-5735-417a-a4ac-e4a9c614e8de"],

Cell[BoxData[
 RowBox[{"obBuild", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"e485a263-1d57-49aa-92b9-cc5905f9dcda"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBBuild", "::", "nodir"}], "=", 
   "\"\<Directory `` not found\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"obBuild", "[", 
    RowBox[{"dir", ":", 
     RowBox[{
      RowBox[{"_String", "?", "DirectoryQ"}], "|", "Automatic"}]}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"parentDir", "=", 
       RowBox[{"ExpandFileName", "@", "dir"}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"obNonEmptyDirQ", "[", "parentDir", "]"}], ",", "\n", "\t", 
       "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"Null", ",", " ", 
           RowBox[{"AbsoluteTiming", "[", "#", "]"}], ",", " ", "HoldFirst"}],
           "]"}], "@", "\n", "\t\t\t\t", 
         RowBox[{"{", "\t", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"obNoBinQ", "[", "parentDir", "]"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"RunInTerminal", "[", "\n", "\t\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"CMakeBinary", "[", "]"}], ",", "\n", "\t", "\t", 
                 "\t", "\t", "\t\t\t\t", 
                 RowBox[{"FileNameJoin", "@", 
                  RowBox[{"{", 
                   RowBox[{"parentDir", ",", " ", "$obprefix"}], "}"}]}], ",",
                  "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
                 RowBox[{
                 "\"\<-DCMAKE_INSTALL_PREFIX=\>\"", "<>", "\n", "\t", "\t", 
                  "\t", "\t", "\t\t\t\t\t", 
                  RowBox[{"FileNameJoin", "@", 
                   RowBox[{"{", 
                    RowBox[{"parentDir", ",", " ", "$obprefix"}], "}"}]}]}], 
                 ",", "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
                 "\"\<-DRUN_SWIG=ON\>\"", ",", "\n", "\t", "\t", "\t", "\t", 
                 "\t\t\t\t", 
                 RowBox[{"\"\<-DSWIG_EXECUTABLE=\>\"", "<>", 
                  RowBox[{"SwigBinary", "[", "]"}]}], ",", "\n", "\t", "\t", 
                 "\t", "\t\t\t\t\t", 
                 RowBox[{"\"\<-DSWIG_DIR=\>\"", "<>", 
                  RowBox[{"SwigBuild", "[", "]"}]}], ",", "\n", "\t", "\t", 
                 "\t", "\t", "\t\t\t\t", "\"\<-DPYTHON_BINDINGS=ON\>\"", ",", 
                 "\n", "\t", "\t", "\t", "\t", "\t\t\t\t", 
                 RowBox[{"\"\<-DEIGEN3_INCLUDE_DIR=\>\"", "<>", 
                  RowBox[{"EigenBuild", "[", "]"}]}]}], "\n", "\t", "\t", 
                "\t", "\t\t\t\t\t", "}"}], ",", "\n", "\t", "\t", "\t", 
               "\t\t\t\t", 
               RowBox[{"ProcessEnvironment", "\[Rule]", 
                RowBox[{"<|", "\n", "\t", "\t", "\t", "\t", "\t", "\t\t\t", 
                 RowBox[{
                 "\"\<PATH\>\"", "\[Rule]", "\n", "\t", "\t", "\t", "\t", 
                  "\t", "\t\t\t\t", 
                  RowBox[{"StringJoin", "@", 
                   RowBox[{
                   "{", "\n", "\t", "\t", "\t", "\t", "\t", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}], ",", 
                    "\n", "\t", "\t", "\t", "\t", "\t", "\t\t\t\t\t", 
                    "\"\<:\>\"", ",", "\n", "\t", "\t", "\t", "\t", "\t", 
                    "\t\t\t\t\t", 
                    RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{"{", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"FileNameJoin", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    "parentDir", ",", "\"\<cmake\>\"", ",", "\"\<bin\>\""}], 
                    "}"}]}], ",", "\n", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"FileNameJoin", "@", 
                    RowBox[{"{", 
                    RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}], "\n", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t\t\t\t", "}"}], ",", "\n", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t\t\t", "\"\<:\>\""}], "\n",
                     "\t", "\t", "\t", "\t\t\t\t\t\t\t\t", "]"}]}], "\n", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t\t", "}"}]}]}], "\n", "\t",
                  "\t", "\t", "\t\t\t\t\t", "|>"}]}], ",", "\n", "\t", "\t", 
               "\t", "\t\t\t\t", 
               RowBox[{
               "ProcessDirectory", "\[Rule]", "\n", "\t", "\t", "\t", 
                "\t\t\t\t\t", 
                RowBox[{"FileNameJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}]}], "\n", 
              "\t", "\t", "\t", "\t\t\t\t", "]"}]}], "\n", "\t", "\t", "\t", 
            "\t\t\t", "]"}], ",", "\n", "\t", "\t", "\t", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"FileExistsQ", "@", 
               RowBox[{"FileNameJoin", "@", 
                RowBox[{"{", "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
                 RowBox[{
                 "parentDir", ",", "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
                  "$obprefix", ",", "\"\<build\>\"", ",", "\"\<bin\>\"", ",", 
                  "\"\<obabel\>\""}], "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
                 "}"}]}]}]}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"RunInTerminal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<make\>\"", ",", "\"\<install\>\""}], "}"}], ",", 
               "\n", "\t", "\t", "\t", "\t\t\t\t", 
               RowBox[{
               "ProcessDirectory", "\[Rule]", "\n", "\t", "\t", "\t", 
                "\t\t\t\t\t", 
                RowBox[{"ExpandFileName", "@", 
                 RowBox[{"FileNameJoin", "@", 
                  RowBox[{"{", 
                   RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}]}]}], 
              "\n", "\t", "\t", "\t", "\t\t\t\t", "]"}]}], "\n", "\t", "\t", 
            "\t", "\t\t\t", "]"}], ",", "\n", "\t", "\t", "\t", "\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "@", "\n", "\t", "\t", "\t", "\t\t\t\t", 
              RowBox[{"FileNameJoin", "@", 
               RowBox[{"{", 
                RowBox[{
                "parentDir", ",", "$obprefix", ",", "\"\<bin\>\"", ",", 
                 "\"\<obabel\>\""}], "}"}]}]}], ",", "\n", "\t", "\t", "\t", 
             "\t\t\t\t", 
             RowBox[{"FileNameJoin", "@", 
              RowBox[{"{", 
               RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}]}], "\n", 
            "\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}]}], "//", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Last", "@", 
             RowBox[{"Last", "@", "#"}]}], "=!=", "Null"}], ",", "\n", "\t", 
           "\t", "\t", "\t\t\t", 
           RowBox[{"TemplateApply", "[", 
            RowBox[{
            "\"\<Built to `pkg`. Took `time`.\>\"", ",", "\n", "\t", "\t", 
             "\t", "\t", "\t\t\t\t", 
             RowBox[{"<|", "\n", "\t", "\t", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"\"\<time\>\"", "\[Rule]", 
                RowBox[{"(", "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"$OBBuildLogs", "=", 
                   RowBox[{"Last", "@", "#"}]}], ";", "\n", "\t", "\t", "\t", 
                  "\t", "\t", "\t", "\t\t\t\t", 
                  RowBox[{"UnitConvert", "[", 
                   RowBox[{
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    RowBox[{"First", "@", "#"}], ",", "\"\<Seconds\>\""}], 
                    "]"}], ",", "\"\<Minutes\>\""}], "]"}]}], "\n", "\t", 
                 "\t", "\t", "\t", "\t", "\t\t\t\t\t", ")"}]}], ",", "\n", 
               "\t", "\t", "\t", "\t", "\t", "\t\t\t\t", 
               RowBox[{"\"\<pkg\>\"", "\[Rule]", 
                RowBox[{"Last", "@", 
                 RowBox[{"Last", "@", "#"}]}]}]}], "\n", "\t", "\t", "\t", 
              "\t\t\t\t\t\t", "|>"}]}], "\n", "\t", "\t", "\t", "\t\t\t\t\t", 
            "]"}], ",", "\n", "\t", "\t", "\t", "\t\t\t", 
           RowBox[{
           "PackageRaiseException", "[", "\n", "\t", "\t", "\t", "\t\t\t\t", 
            RowBox[{
            "\"\<OpenBabelBuild\>\"", ",", "\n", "\t", "\t", "\t", 
             "\t\t\t\t", "\"\<Failed to build OpenBabel to ``\>\"", ",", "\n",
              "\t", "\t", "\t", "\t\t\t\t", 
             RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"FileNameJoin", "@", 
                RowBox[{"{", 
                 RowBox[{"parentDir", ",", "$obprefix"}], "}"}]}], "}"}]}]}], 
            "\n", "\t", "\t", "\t", "\t\t\t\t", "]"}]}], "\n", "\t", "\t", 
          "\t", "\t\t\t", "]"}], "&"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "\"\<OpenBabelBuild\>\"", ",", "\n", "\t\t\t\t", 
         "\"\<Directory `` is the `` directory\>\"", ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"parentDir", ",", " ", "$obprefix"}], "}"}]}]}], "\n", 
        "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"e225b12c-787f-4642-8bff-712b08b9c235"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBBuild", "[", 
    RowBox[{"parentDir", ":", 
     RowBox[{"_", "?", "DirectoryQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{"PackageExceptionBlock", "[", "\"\<OpenBabelBuild\>\"", "]"}], 
    "@", "\n", "\t\t", 
    RowBox[{"(", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"CMakeBuild", "[", "]"}], ";", "\n", "\t", "\t\t", 
      RowBox[{"EigenBuild", "[", "]"}], ";", "\n", "\t", "\t\t", 
      RowBox[{"SwigBuild", "[", "]"}], ";", "\n", "\t", "\t\t", 
      RowBox[{"obDownload", "[", "parentDir", "]"}], ";", "\n", "\t", "\t\t", 
      
      RowBox[{"obBuild", "@", "parentDir"}]}], "\n", "\t", "\t\t", ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"OBBuild", "[", 
   RowBox[{"Optional", "[", 
    RowBox[{"Automatic", ",", "Automatic"}], "]"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"OBBuild", "[", 
   RowBox[{"DirectoryName", "[", "$OBDir", "]"}], 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"76198eba-a4cf-452b-be08-fe31cae73ad3"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Defaults\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.694982878263295*^9, 
  3.694982909447627*^9}},ExpressionUUID->"fb6c5701-ca14-42c5-b5e6-\
955529df3204"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FindOpenBabel\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"8d20c11b-8e2c-4fdb-a7c0-6e0da06d4a24"],

Cell[BoxData[
 RowBox[{"$OpenBabelPath", "=", "\n", "\t", 
  RowBox[{"{", "\n", "\t\t", 
   RowBox[{"$ChemExtensionsApp", ",", "\n", "\t\t", "$ChemExtensionsDev"}], 
   "\n", "\t\t", 
   "}"}]}]], \
"CodeInput",ExpressionUUID->"d8eab123-290e-4a16-b229-481f85951642"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOpenBabel", "[", "]"}], ":=", "\n", "\t", 
  RowBox[{"Replace", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"StringTrim", "@", "\n", "\t\t\t", 
     RowBox[{"RunProcess", "[", "\t\t\t", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"$OperatingSystem", "\[Equal]", "\"\<Windows\>\""}], ",", 
           "\"\<where\>\"", ",", " ", "\"\<which\>\""}], "]"}], ",", " ", 
         "\"\<obabel\>\""}], "}"}], ",", "\n", "\t", "\t", "\t", "\t", 
       "\"\<StandardOutput\>\""}], "\n", "\t\t\t\t", "]"}]}], ",", "\n", 
    "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"ob_String", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"StringLength", "[", "#", "]"}], ">", "0"}], "&&", 
           RowBox[{"FileExistsQ", "[", "#", "]"}], "&&", 
           RowBox[{"OBDirQ", "[", 
            RowBox[{"DirectoryName", "@", "#"}], "]"}]}], "&"}], ")"}]}], ":>",
        "\n", "\t\t\t\t", 
       RowBox[{"DirectoryName", "@", "ob"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"_", ":>", "\n", "\t\t\t\t", 
       RowBox[{"SelectFirst", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"FileNames", "[", 
          RowBox[{
          "\"\<*babel*\>\"", ",", "\n", "\t\t\t\t\t\t", "$OpenBabelPath"}], 
          "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", "OBDirQ", ",",
          "\n", "\t\t\t\t\t", 
         RowBox[{"ChemExtensionDir", "[", "$obprefix", "]"}]}], "\n", 
        "\t\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"819a58ae-b5a2-4433-b8a3-87d677cd2cba"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$OpenBabel\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"e63c816b-21d7-4e7e-885a-c677b15efbc9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$OBDir", ":=", 
   RowBox[{"$OBDir", "=", 
    RowBox[{"FindOpenBabel", "[", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"$OpenBabel", ":=", 
   RowBox[{"OpenBabel", "[", 
    RowBox[{"$OBDir", ",", " ", "\"\<obabel\>\""}], "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"23dbd338-c6ab-4720-aea4-22a59fa75f67"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]FindOBPythonInterpreter\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7d6c6efc-da37-42e5-9c36-bbd73870a6b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOBPythonInterpreter", "[", "dir_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Replace", "[", "\n", "\t\t\t", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<python*\>\"", ",", " ", 
      RowBox[{"FileNameJoin", "@", 
       RowBox[{"{", 
        RowBox[{"dir", ",", " ", "\"\<lib\>\""}], "}"}]}]}], "]"}], ",", "\n",
     "\t", "\t\t", 
    RowBox[{"{", "\n", "\t", "\t\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f_", ",", " ", "___"}], "}"}], "\[RuleDelayed]", "\n", "\t", 
       "\t\t\t\t", 
       RowBox[{"FileNameTake", "[", "f", "]"}]}], ",", "\n", "\t", "\t\t\t", 
      RowBox[{"_", "->", "\"\<python2.7\>\""}]}], "\n", "\t", "\t\t\t", 
     "}"}]}], "\n", "\t", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3ed8df13-5411-43a3-9577-b0e22b0eab5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$OBPythonInterpreter", ":=", "\n", "\t", 
   RowBox[{"$OBPythonInterpreter", "=", 
    RowBox[{"FindOBPythonInterpreter", "[", "$OBDir", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"d714a1c0-7e7b-41c1-b60b-061ae9eeb5d0"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBDirQ\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"82003baa-382b-4132-a594-c14a2c97db27"],

Cell[BoxData[
 RowBox[{"OBDirQ", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"6cc37ce4-616a-4c34-b67c-53fd7156de51"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBDirQ", "[", "babelDir_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"AllTrue", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<lib\>\"", ",", " ", 
         RowBox[{"FindOBPythonInterpreter", "[", "babelDir", "]"}], ",", " ", 
         "\"\<site-packages\>\""}], "}"}], ",", "\n", "\t", "\t\t", 
       RowBox[{"{", 
        RowBox[{"\"\<lib\>\"", ",", " ", "\"\<_openbabel.so\>\""}], "}"}]}], 
      "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"FileExistsQ", "@", 
       RowBox[{"FileNameJoin", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"babelDir", ",", " ", "#"}], "}"}]}]}]}], "&"}]}], "\n", 
    "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"OBDirQ", "[", "_", "]"}], ":=", 
  "False"}]}], \
"CodeInput",ExpressionUUID->"96e36be0-b86b-403c-b6d5-947aa7029d6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Formats\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"d197f3ef-137c-4bce-a3a7-d528c387a52e"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Icon\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"60cfdd6d-402a-4743-8230-5670af0a4991"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$obPNG", "=", "\n", "\t", 
   RowBox[{"Image", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Import", "@", 
      RowBox[{"PackageFilePath", "[", 
       RowBox[{
       "\"\<Resources\>\"", ",", " ", "\"\<Icons\>\"", ",", " ", 
        "\"\<OpenBabelIcon.png\>\""}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"ImageSize", "\[Rule]", "32"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"68fb76b3-eabc-4660-b28c-2579caae55dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OpenBabel\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f2138242-87b5-46d5-878a-5c1ff4bb8dfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Format", "[", 
    RowBox[{"OpenBabel", "[", 
     RowBox[{
      RowBox[{"dir_", "?", "OBDirQ"}], ",", " ", 
      RowBox[{"prog", ":", "_String", ":", "\"\<obabel\>\""}]}], "]"}], "]"}],
    ":=", "\n", "\t", 
   RowBox[{"RawBoxes", "@", 
    RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t\t", 
     RowBox[{"\"\<OpenBabel\>\"", ",", "\n", "\t\t", 
      RowBox[{"OpenBabel", "[", "dir", "]"}], ",", "\n", "\t\t", "$obPNG", 
      ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{"\"\<Directory: \>\"", ",", "\n", "\t\t\t\t", 
           RowBox[{"Button", "[", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Mouseover", "[", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"FileNameTake", "@", "dir"}], ",", 
                 "\"\<Hyperlink\>\""}], "]"}], ",", "\n", "\t\t\t\t\t\t", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"FileNameTake", "@", "dir"}], ",", 
                 "\"\<HyperlinkActive\>\""}], "]"}]}], "\n", "\t\t\t\t\t\t", 
              "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"SystemOpen", "@", 
              RowBox[{"ExpandFileName", "@", "dir"}]}], ",", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Frameless\>\""}], ",", 
             "\n", "\t\t\t\t\t", 
             RowBox[{"BaseStyle", "\[Rule]", "\"\<Hyperlink\>\""}]}], "\n", 
            "\t\t\t\t\t", "]"}]}], "}"}], ",", "\n", "\t\t\t\t", 
         "StandardForm"}], "]"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"BoxForm`MakeSummaryItem", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{"\"\<Program: \>\"", ",", "\n", "\t\t\t\t", 
           RowBox[{"Button", "[", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Mouseover", "[", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"prog", ",", " ", "\"\<Hyperlink\>\""}], "]"}], ",", 
               "\n", "\t\t\t\t\t\t", 
               RowBox[{"Style", "[", 
                RowBox[{"prog", ",", " ", "\"\<HyperlinkActive\>\""}], 
                "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
             RowBox[{"SystemOpen", "@", 
              RowBox[{"ExpandFileName", "@", 
               RowBox[{"FileNameJoin", "@", 
                RowBox[{"{", 
                 RowBox[{"dir", ",", " ", "\"\<bin\>\""}], "}"}]}]}]}], ",", 
             "\n", "\t\t\t\t\t", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Frameless\>\""}], ",", 
             "\n", "\t\t\t\t\t", 
             RowBox[{"BaseStyle", "\[Rule]", "\"\<Hyperlink\>\""}]}], "\n", 
            "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "}"}], ",", "\n", 
         "\t\t\t\t", "StandardForm"}], "]"}], "\n", "\t\t\t", "}"}], ",", 
      "\n", "\t\t", "StandardForm"}], "\n", "\t\t", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"95903571-04b4-4dcf-8866-1358da440fa0"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Run\[RightFloor]", "CodeSubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.695131817288046*^9, 
  3.6951318224459057`*^9}},ExpressionUUID->"99ca4dd4-16fd-44ab-a8ca-\
1feef0921b35"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obabWriteTmp\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4e88d709-b62e-4702-9016-b852d4e8073f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"obabWriteTmp", "[", 
    RowBox[{"fil_", ",", " ", "string_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", "=", 
       RowBox[{"OpenWrite", "@", "fil"}]}], "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"WriteString", "[", 
       RowBox[{"f", ",", "string"}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"Close", "@", "f"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"33a6d316-b887-4671-b99d-b7b921fbf883"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Config\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"308f9e11-62cb-42a7-b0e2-c5338775d347"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$OBOptions\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"e59c3bac-aadd-419f-ac17-118232e57f38"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$OBOptions", "=", 
   RowBox[{"<|", "\n", "\t", 
    RowBox[{
     RowBox[{"\"\<ImportStart\>\"", "\[Rule]", "\"\<f\>\""}], ",", "\n", "\t", 
     RowBox[{"\"\<ImportEnd\>\"", "\[Rule]", "\"\<l\>\""}], ",", "\n", "\t", 
     RowBox[{"\"\<OutputFile\>\"", "\[Rule]", "\"\<O\>\""}], ",", "\n", "\t", 
     
     RowBox[{"\"\<SingleMolecule\>\"", "\[Rule]", "\"\<t\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<IgnoreErrors\>\"", "\[Rule]", "\"\<e\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<CompressOutput\>\"", "\[Rule]", "\"\<z\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<MultipleOutputs\>\"", "\[Rule]", "\"\<m\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<DeleteHydrogens\>\"", "\[Rule]", "\"\<d\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<AddHydrogens\>\"", "\[Rule]", "\"\<h\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<pHAppropriateHydrogens\>\"", "\[Rule]", "\"\<p\>\""}], ",", 
     "\n", "\t", 
     RowBox[{"\"\<ConvertDativeBonds\>\"", "\[Rule]", "\"\<b\>\""}], ",", 
     "\n", "\t", 
     RowBox[{"\"\<CenterCoordinates\>\"", "\[Rule]", "\"\<c\>\""}], ",", "\n",
      "\t", 
     RowBox[{"\"\<JoinInputMolecules\>\"", "\[Rule]", "\"\<j\>\""}], ",", 
     "\n", "\t", 
     RowBox[{"\"\<ConvertMatching\>\"", "\[Rule]", "\"\<s\>\""}], ",", "\n", 
     "\t", 
     RowBox[{"\"\<ConvertExcept\>\"", "\[Rule]", "\"\<v\>\""}]}], "\n", "\t", 
    "|>"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"8aacf752-034a-474e-bc85-96b04be2b33a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBParamConvert\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"503e7030-e59e-41d7-8d67-6ff8f32ea842"],

Cell[BoxData[
 RowBox[{"OBParamConvert", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"de65b0c7-e0c2-4ee4-97ed-c5d85c802778"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBParamConvert", "[", "v_String", "]"}], ":=", "\n", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringLength", "@", 
        RowBox[{"DirectoryName", "[", "v", "]"}]}], ">", "0"}], "&&", 
      RowBox[{"DirectoryQ", "@", 
       RowBox[{"DirectoryName", "[", "v", "]"}]}]}], ",", "\n", "\t\t", 
     RowBox[{"ExpandFileName", "[", "v", "]"}], ",", "\n", "\t\t", "v"}], 
    "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"OBParamConvert", "[", "e_", "]"}], ":=", "\n", "\t", 
  RowBox[{
  "ToString", "[", "e", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"f6874afc-1fb6-49da-a8ed-c3f5a5b43fd1"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]obabRun\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"86e94d2c-81ea-42a9-97e0-a4fd615b5ea5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"obabRun", "[", "a_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"babelDir", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{
          "a", ",", " ", "\"\<OpenBabel\>\"", ",", " ", "$OpenBabel"}], "]"}],
          ",", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"OpenBabel", "[", 
           RowBox[{"d_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", "d"}]}], 
        "\n", "\t", "\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"binary", "=", "\n", "\t", "\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{"a", ",", " ", "\"\<Mode\>\"", ",", " ", "Automatic"}], 
          "]"}], ",", "\n", "\t", "\t\t\t\t", 
         RowBox[{"{", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"OpenBabel", "[", 
             RowBox[{"d_", ",", " ", "m_"}], "]"}], "\[RuleDelayed]", "m"}], 
           ",", "\n", "\t", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"Except", "[", "_String", "]"}], "\[Rule]", "\n", "\t", 
            "\t\t\t\t\t\t", 
            RowBox[{"Replace", "[", 
             RowBox[{
              RowBox[{"Lookup", "[", 
               RowBox[{
               "a", ",", " ", "\"\<OpenBabel\>\"", ",", " ", "$OpenBabel"}], 
               "]"}], ",", "\n", "\t", "\t\t\t\t\t\t\t", 
              RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"OpenBabel", "[", 
                  RowBox[{"d_", ",", " ", "m_"}], "]"}], "\[RuleDelayed]", 
                 "m"}], ",", "\n", "\t", "\t\t\t\t\t\t\t\t", 
                RowBox[{"_", "\[Rule]", "\"\<obabel\>\""}]}], "\n", "\t", 
               "\t\t\t\t\t\t\t\t", "}"}]}], "\n", "\t", "\t\t\t\t\t\t\t", 
             "]"}]}]}], "\n", "\t", "\t\t\t\t\t", "}"}]}], "\n", "\t", 
        "\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"processDir", "=", 
       RowBox[{"a", "[", "\"\<Directory\>\"", "]"}]}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"inputData", "=", 
       RowBox[{"a", "[", "\"\<Input\>\"", "]"}]}], ",", "\n", "\t\t\t", 
      "inputFiles", ",", "\n", "\t\t\t", 
      RowBox[{"outputSpecs", "=", 
       RowBox[{"a", "[", "\"\<Output\>\"", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"babelOps", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{"a", ",", " ", "\"\<Options\>\"", ",", " ", 
         RowBox[{"{", "}"}]}], "]"}]}], ",", "\n", "\t\t\t", "runData", ",", 
      "\n", "\t\t\t", "obcommand"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"binary", "=", 
      RowBox[{"FileNameJoin", "@", 
       RowBox[{"{", 
        RowBox[{"babelDir", ",", " ", "\"\<bin\>\"", ",", " ", "binary"}], 
        "}"}]}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "@", "binary"}]}], ",", " ", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "\"\<OpenBabelRun\>\"", ",", "\n", "\t\t\t\t", 
         "\"\<No OpenBabel binary found at ``\>\"", ",", "\n", "\t\t\t\t", 
         RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
          RowBox[{"{", "binary", "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
      "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"gather", " ", "input", " ", "files"}], " ", "*)"}], "\n", 
     "\t\t", 
     RowBox[{"inputFiles", "=", "\n", "\t\t\t", 
      RowBox[{"Switch", "[", 
       RowBox[{"inputData", ",", "\n", "\t\t\t\t", 
        RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"FileNameTake", "@", "inputData"}], "\[Rule]", 
          RowBox[{"ExpandFileName", "@", "inputData"}]}], "|>"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{"{", 
         RowBox[{"__String", "?", "FileExistsQ"}], "}"}], ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"Association", "@", "\n", "\t\t\t\t\t\t", 
         RowBox[{"Map", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"FileNameTake", "@", "#"}], "\[Rule]", 
             RowBox[{"ExpandFileName", "@", "#"}]}], "&"}], ",", "\n", 
           "\t\t\t\t\t\t\t", "inputData"}], "\n", "\t\t\t\t\t\t\t", "]"}]}], 
        ",", "\n", "\t\t\t\t", "_String", ",", "\n", "\t\t\t\t\t", 
        RowBox[{"With", "[", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{"filname", "=", "\n", "\t\t\t\t\t\t\t\t", 
            RowBox[{"FileNameJoin", "@", 
             RowBox[{"{", 
              RowBox[{"processDir", ",", " ", "\"\<input\>\""}], "}"}]}]}], 
           "\n", "\t", "\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"<|", "\n", "\t\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"FileNameTake", "@", "filname"}], "->", "\n", 
            "\t\t\t\t\t\t\t\t", 
            RowBox[{"obabWriteTmp", "[", 
             RowBox[{"filname", ",", "inputData"}], "]"}]}], "\n", 
           "\t\t\t\t\t\t\t", "|>"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n",
         "\t\t\t\t", "_Association", ",", "\n", "\t\t\t\t\t", 
        RowBox[{"Association", "@", "\n", "\t\t\t\t\t\t", 
         RowBox[{"KeyValueMap", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "->", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{"obabWriteTmp", "[", 
              RowBox[{
               RowBox[{"FileNameJoin", "@", 
                RowBox[{"{", 
                 RowBox[{"processDir", ",", "#"}], "}"}]}], ",", "#2"}], 
              "]"}]}], "&"}], ",", "\n", "\t\t\t\t\t\t\t", "inputData"}], 
          "\n", "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", "_", ",", 
        "\n", "\t\t\t\t\t", 
        RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t\t\t", 
         RowBox[{
         "\"\<OpenBabelRun\>\"", ",", "\n", "\t\t\t\t\t\t", 
          "\"\<Can't determine input files from ``\>\"", ",", "\n", 
          "\t\t\t\t\t\t", 
          RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
           RowBox[{"{", "inputData", "}"}]}]}], "\n", "\t\t\t\t\t\t", "]"}]}],
        "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"set", " ", "process", " ", "directory"}], " ", "*)"}], "\n", 
     "\t\t", 
     RowBox[{"processDir", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{"processDir", ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
           RowBox[{"Switch", "[", 
            RowBox[{
             RowBox[{"inputFiles", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", 
             "\t\t\t\t\t\t\t\t", 
             RowBox[{"DirectoryName", "@", 
              RowBox[{"inputFiles", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
             "_", ",", " ", "\n", "\t\t\t\t\t\t\t\t", "$TemporaryDirectory"}],
             "\n", "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{"_String", "?", "DirectoryQ"}], "]"}], "->", "\n", 
           "\t\t\t\t\t\t", "$TemporaryDirectory"}]}], "\n", "\t\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
     RowBox[{"babelOps", "=", "\n", "\t\t\t\t", 
      RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"Normal", "@", "babelOps"}], "}"}]}], ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k_", "\[Rule]", "True"}], ")"}], "\[RuleDelayed]", "\n", 
           "\t\t\t\t\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"KeyExistsQ", "[", 
              RowBox[{"$OBOptions", ",", " ", "k"}], "]"}], ",", "\n", 
             "\t\t\t\t\t\t\t\t", 
             RowBox[{"\"\<-\>\"", "<>", 
              RowBox[{"$OBOptions", "[", "k", "]"}]}], ",", "\n", "\t", 
             "\t\t\t\t\t\t\t", "k"}], "\n", "\t", "\t\t\t\t\t\t\t", "]"}]}], 
          ",", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"_", "\[Rule]", "False"}], ")"}], "->", "\n", "\t", 
           "\t\t\t\t\t\t", "Nothing"}], ",", "\n", "\t", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k_", "\[Rule]", "v_"}], ")"}], ":>", "\n", 
           "\t\t\t\t\t\t\t", 
           RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
            RowBox[{"\"\<-\>\"", "<>", 
             RowBox[{"Lookup", "[", 
              RowBox[{"$OBOptions", ",", " ", "k", ",", " ", "k"}], "]"}], 
             "<>", "\"\<\>\"", "<>", "\n", "\t\t\t\t\t\t\t\t\t", 
             RowBox[{"OBParamConvert", "[", "v", "]"}]}], "\n", 
            "\t\t\t\t\t\t\t\t", ")"}]}]}], "\n", "\t\t\t\t\t\t", "}"}], ",", 
        "\n", "\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t", "]"}]}], ";", "\n", 
     "\t\t\t", 
     RowBox[{"obcommand", "=", "\n", "\t\t\t\t", 
      RowBox[{"Flatten", "@", "\n", "\t\t\t\t\t\t", 
       RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
        RowBox[{
         RowBox[{"FileBaseName", "@", "binary"}], ",", "\n", "\t\t\t\t\t\t\t", 
         RowBox[{"ExpandFileName", "/@", 
          RowBox[{"Values", "@", "inputFiles"}]}], ",", "\n", "\t", "\t", 
         "\t", "\t\t\t\t", 
         RowBox[{"Sequence", "@@", "babelOps"}]}], "\n", "\t\t\t\t\t\t\t", 
        "}"}]}]}], ";", "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Lookup", "[", 
        RowBox[{"a", ",", " ", "\"\<EchoCommand\>\"", ",", " ", "False"}], 
        "]"}], ",", "\n", "\t\t\t\t", 
       RowBox[{"Echo", "@", "obcommand"}]}], "\n", "\t\t\t\t", "]"}], ";", 
     "\n", "\t\t\t", 
     RowBox[{"runData", "=", "\n", "\t\t\t\t", 
      RowBox[{"RunProcess", "[", "\n", "\t\t\t\t\t", 
       RowBox[{"obcommand", ",", "\n", "\t\t\t\t\t", 
        RowBox[{
        "ProcessDirectory", "\[Rule]", "\n", "\t\t\t\t\t\t", "processDir"}], 
        ",", "\n", "\t\t\t\t\t", 
        RowBox[{"ProcessEnvironment", "->", "\n", "\t", "\t\t\t\t\t", 
         RowBox[{"<|", "\n", "\t", "\t\t\t\t\t\t", 
          RowBox[{"\"\<PATH\>\"", "->", "\n", "\t", "\t\t\t\t\t\t\t", 
           RowBox[{"StringJoin", "@", "\n", "\t", "\t\t\t\t\t\t\t\t", 
            RowBox[{"Riffle", "[", "\n", "\t\t\t\t\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"DirectoryName", "@", "binary"}], ",", "\n", 
                "\t\t\t\t\t\t\t\t\t\t\t", 
                RowBox[{"FileNameJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"babelDir", ",", " ", "\"\<bin\>\""}], "}"}]}], ",",
                 "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}]}], "\n", 
               "\t", "\t\t\t\t\t\t\t\t\t\t", "}"}], ",", "\n", "\t", 
              "\t\t\t\t\t\t\t\t\t", "\"\<:\>\""}], "\n", "\t", 
             "\t\t\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t\t\t\t\t\t", 
          "|>"}]}]}], "\n", "\t", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Lookup", "[", 
        RowBox[{"a", ",", " ", "\"\<EmitMessages\>\"", ",", " ", "False"}], 
        "]"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"errdats", "=", 
            RowBox[{"StringTrim", "@", 
             RowBox[{"runData", "[", "\"\<StandardError\>\"", "]"}]}]}], 
           "}"}], ",", "\n", "\t", "\t", "\t\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"StringLength", "[", "errdats", "]"}], ">", "0"}], ",", 
            "\n", "\t", "\t", "\t\t\t\t", 
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"OpenBabel", "::", "runerr"}], ",", "errdats"}], 
             "]"}]}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", 
         "]"}], ";", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"runData", "[", "\"\<StandardOutput\>\"", "]"}], ",", " ", 
          "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"_String", "?", 
             RowBox[{"(", 
              RowBox[{"StringMatchQ", "[", "Whitespace", "]"}], ")"}]}], "|", 
            "\"\<\>\""}], "\[Rule]", "Null"}]}], "\n", "\t\t\t\t\t", "]"}]}], 
       ",", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"StringTrim", "[", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"runData", "[", "\"\<StandardError\>\"", "]"}], "<>", 
           "\"\<\\n\\n\>\"", "<>", 
           RowBox[{"runData", "[", "\"\<StandardOutput\>\"", "]"}]}], "\n", 
          "\t\t\t\t\t\t", "]"}], ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"\"\<\>\"", "\[Rule]", "Null"}]}], "\n", "\t\t\t\t\t", 
        "]"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"2e9d7d4c-7eb3-4d65-9ff8-c6e768925e86"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelRun\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.695134238377693*^9, 
  3.695134240489419*^9}},ExpressionUUID->"067267a0-f363-4211-8060-\
daf66b8d46a9"],

Cell[BoxData[
 RowBox[{"$pybelSession", ":=", "\n", "\t", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"PySessionActive", "[", "\"\<pybel\>\"", "]"}]}], ",", " ", 
    RowBox[{"PySessionStart", "[", "\"\<pybel\>\"", "]"}], ",", " ", 
    RowBox[{"PySession", "[", "\"\<pybel\>\"", "]"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"bfc6d578-fffa-4c7a-9be7-57b393287ac8"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelRunProcessRun\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7e798ca3-f7ed-4189-bb08-eaf41eea0e8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pybelRunProcessRun", "[", "a_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"babelDir", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{
          "a", ",", " ", "\"\<OpenBabel\>\"", ",", " ", "$OpenBabel"}], "]"}],
          ",", "\n", "\t", "\t\t\t\t", 
         RowBox[{
          RowBox[{"OpenBabel", "[", 
           RowBox[{"d_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", "d"}]}], 
        "\n", "\t", "\t\t\t\t", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"processDir", "=", 
       RowBox[{"a", "[", "\"\<Directory\>\"", "]"}]}], ",", "\n", "\t", 
      "\t\t", 
      RowBox[{"inputFile", "=", 
       RowBox[{"a", "[", "\"\<Input\>\"", "]"}]}], ",", "\n", "\t", "\t\t", 
      RowBox[{"outputSpecs", "=", 
       RowBox[{"a", "[", "\"\<Output\>\"", "]"}]}]}], "\n", "\t\t\t", "}"}], 
    ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"OBDirQ", "@", "babelDir"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "\"\<OpenBabelRun\>\"", ",", "\n", "\t\t\t\t", 
         "\"\<Directory `` doesn't hold an OpenBabel installation\>\"", ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
          RowBox[{"{", "babelDir", "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n",
       "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"processDir", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{"processDir", ",", 
        RowBox[{"{", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[RuleDelayed]", "\n", "\t\t\t\t\t", 
           RowBox[{"Switch", "[", 
            RowBox[{"inputFile", ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"DirectoryName", "@", "inputFile"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{"_", "\[Rule]", "$TemporaryDirectory"}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{"_String", "?", "DirectoryQ"}], "]"}], "->", "\n", 
           "\t\t\t\t\t", "$TemporaryDirectory"}]}], "\n", "\t\t\t\t", "}"}]}],
        "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"inputFile", "=", "\n", "\t\t\t", 
      RowBox[{"Switch", "[", 
       RowBox[{"inputFile", ",", "\n", "\t\t\t\t", 
        RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", "\t\t\t\t\t", 
        "inputFile", ",", "\n", "\t\t\t\t", "_String", ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"filname", "=", "\n", "\t\t\t\t\t\t", 
            RowBox[{"FileNameJoin", "@", 
             RowBox[{"{", 
              RowBox[{"processDir", ",", "\"\<input.py\>\""}], "}"}]}]}], 
           "\n", "\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t\t", 
          RowBox[{"obabWriteTmp", "[", 
           RowBox[{"filname", ",", "inputFile"}], "]"}]}], "\n", 
         "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
        RowBox[{"_Association", "|", "_List"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"Sequence", "@@", "\n", "\t\t\t\t\t\t", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"Flatten", "@", 
            RowBox[{"{", 
             RowBox[{"Normal", "@", "inputFile"}], "}"}]}], ",", 
           RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"fn_", "\[Rule]", "s_"}], ")"}], ":>", "\n", 
             "\t\t\t\t\t\t\t\t", 
             RowBox[{"obabWriteTmp", "[", 
              RowBox[{
               RowBox[{"FileNameJoin", "@", 
                RowBox[{"{", 
                 RowBox[{"processDir", ",", "fn"}], "}"}]}], ",", "s"}], 
              "]"}]}], "\n", "\t\t\t\t\t\t\t", "}"}], ",", "\n", 
           "\t\t\t\t\t\t", "1"}], "\n", "\t\t\t\t\t\t", "]"}]}]}], "\n", 
       "\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
     RowBox[{"RunProcess", "[", "\n", "\t\t\t\t", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{"\"\<python\>\"", ",", "\n", "\t", "\t\t\t\t", "inputFile"}],
          "\n", "\t", "\t\t\t\t", "}"}]}], ",", "\n", "\t\t\t\t", 
       RowBox[{
       "ProcessDirectory", "\[Rule]", "\n", "\t\t\t\t\t", "processDir"}], ",",
        "\n", "\t\t\t\t", 
       RowBox[{"ProcessEnvironment", "\[Rule]", 
        RowBox[{"<|", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"\"\<PATH\>\"", "->", "\n", "\t\t\t\t\t\t", 
           RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}]}], ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"\"\<PYTHONPATH\>\"", "->", "\n", "\t\t\t\t\t\t", 
           RowBox[{"StringJoin", "@", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"Riffle", "[", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{"FileNameJoin", "@", "\n", "\t\t\t\t\t\t\t\t\t\t", 
                 RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                  RowBox[{
                  "babelDir", ",", " ", "\n", "\t\t\t\t\t\t\t\t\t\t\t", 
                   "\"\<lib\>\"", ",", " ", "\n", "\t", 
                   "\t\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"FindOBPythonInterpreter", "[", "babelDir", "]"}], 
                   ",", "\n", "\t", "\t\t\t\t\t\t\t\t\t\t", 
                   "\"\<site-packages\>\""}], "\n", "\t", 
                  "\t\t\t\t\t\t\t\t\t\t", "}"}]}], ",", "\n", 
                "\t\t\t\t\t\t\t\t\t", 
                RowBox[{"FileNameJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{
                  "babelDir", ",", " ", "\"\<scripts\>\"", ",", " ", 
                   "\"\<python\>\""}], "}"}]}]}], "\n", "\t\t\t\t\t\t\t\t\t", 
               "}"}], ",", "\n", "\t\t\t\t\t\t\t\t", "\"\<:\>\""}], "\n", 
             "\t\t\t\t\t\t\t\t", "]"}]}]}]}], "\n", "\t\t\t\t\t", "|>"}]}]}], 
      "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"462cb460-fc0b-47b8-a2fc-324ef6f071c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelSessionStart\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"03936b1f-c97e-4d7a-8f83-cec854c0a35a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pybelSessionStart", "[", 
   RowBox[{"sessionTag_", ",", " ", "processDir_", ",", " ", "babelDir_"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"PySessionStart", "[", 
   RowBox[{"sessionTag", ",", "\n", "\t\t", 
    RowBox[{"ProcessDirectory", "\[Rule]", "\n", "\t\t\t", "processDir"}], 
    ",", "\n", "\t\t", 
    RowBox[{"ProcessEnvironment", "\[Rule]", 
     RowBox[{"<|", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"\"\<PATH\>\"", "->", "\n", "\t\t\t\t", 
        RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"\"\<PYTHONPATH\>\"", "->", "\n", "\t\t\t\t", 
        RowBox[{"StringRiffle", "[", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"FileNameJoin", "@", 
             RowBox[{"{", 
              RowBox[{
              "babelDir", ",", " ", "\"\<lib\>\"", ",", " ", 
               "$OBPythonInterpreter", ",", "\"\<site-packages\>\""}], 
              "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
            RowBox[{"FileNameJoin", "@", 
             RowBox[{"{", 
              RowBox[{
              "babelDir", ",", " ", "\"\<scripts\>\"", ",", " ", 
               "\"\<python\>\""}], "}"}]}]}], "\n", "\t\t\t\t\t\t", "}"}], 
          ",", "\n", "\t\t\t\t\t", "\"\<:\>\""}], "\n", "\t\t\t\t\t", 
         "]"}]}]}], "\n", "\t\t\t", "|>"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"92b76fc1-d1e2-4954-8e6b-90a615ebf04b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelSessionRunInputFile\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4f41bae9-d862-4359-9664-47b6c3c848e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pybelSessionRunInputFile", "[", 
   RowBox[{"sessionTag_", ",", " ", "inputFile_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"PySessionRun", "[", 
   RowBox[{"sessionTag", ",", "\n", "\t\t", 
    RowBox[{"\"\<_pybel_tmp_file = open('\>\"", "<>", 
     RowBox[{"ExpandFileName", "@", "inputFile"}], "<>", "\"\<')\>\"", "\n", 
     "\t\t\t", "<>", "\"\<\\n\>\"", "<>", "\n", "\t\t", "\"\<try:\>\"", "\n", 
     "\t\t\t", "<>", "\"\<\\n\\t\>\"", "<>", "\n", "\t\t", 
     "\"\<exec(_pybel_tmp_file.read())\>\"", "\n", "\t\t\t", "<>", 
     "\"\<\\n\>\"", "<>", "\n", "\t\t", "\"\<finally:\>\"", "\n", "\t\t\t", 
     "<>", "\"\<\\n\\t\>\"", "<>", "\n", "\t\t\t", 
     "\"\<_pybel_tmp_file.close()\>\""}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"a6c90565-98d4-4124-946b-aa8d1cbe2554"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelSessionRun\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8c7803d4-f40e-478f-ac77-61d3ece5ee23"],

Cell[BoxData[
 RowBox[{"pybelSessionRun", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"a5045e19-c8e4-49d2-a06f-388550678b71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pybelSessionRun", "[", 
   RowBox[{"a_", ",", " ", 
    RowBox[{"sessionTag_:", "\"\<pybel\>\""}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"babelDir", "=", "\n", "\t\t\t", 
       RowBox[{"Echo", "@", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"Lookup", "[", 
           RowBox[{
           "a", ",", " ", "\"\<OpenBabel\>\"", ",", " ", "$OpenBabel"}], 
           "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"OpenBabel", "[", 
            RowBox[{"d_", ",", " ", "___"}], "]"}], "\[RuleDelayed]", "d"}]}],
          "\n", "\t\t\t\t", "]"}]}]}], ",", "\n", "\t\t", 
      RowBox[{"processDir", "=", 
       RowBox[{"a", "[", "\"\<Directory\>\"", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"inputFile", "=", 
       RowBox[{"a", "[", "\"\<Input\>\"", "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"outputSpecs", "=", 
       RowBox[{"a", "[", "\"\<Output\>\"", "]"}]}], ",", "\n", "\t\t", 
      "tmpFile"}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"OBDirQ", "@", "babelDir"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"PackageRaiseException", "[", "\n", "\t\t\t\t", 
        RowBox[{
        "\"\<OpenBabelRun\>\"", ",", "\n", "\t\t\t\t", 
         "\"\<Directory `` doesn't hold an OpenBabel installation\>\"", ",", 
         "\n", "\t\t\t\t", 
         RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
          RowBox[{"{", "babelDir", "}"}]}]}], "\n", "\t\t\t\t", "]"}]}], "\n",
       "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"processDir", "=", "\n", "\t\t\t", 
      RowBox[{"Replace", "[", 
       RowBox[{"processDir", ",", "\n", "\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Automatic", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t", 
           RowBox[{"Switch", "[", 
            RowBox[{"inputFile", ",", "\n", "\t", "\t\t\t\t\t\t", 
             RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", "\t", 
             "\t\t\t\t\t\t\t", 
             RowBox[{"DirectoryName", "@", "inputFile"}], ",", "\n", 
             "\t\t\t\t\t\t\t", "_", ",", "\n", "\t\t\t\t\t\t\t\t", 
             "$TemporaryDirectory"}], "\n", "\t\t\t\t\t\t\t", "]"}]}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{"_String", "?", "DirectoryQ"}], "]"}], "->", "\n", 
           "\t\t\t\t\t\t", "$TemporaryDirectory"}]}], "\n", "\t\t\t\t\t", 
         "}"}]}], "\n", "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"inputFile", "=", "\n", "\t\t\t", 
      RowBox[{"Switch", "[", 
       RowBox[{"inputFile", ",", "\n", "\t\t\t\t", 
        RowBox[{"_String", "?", "FileExistsQ"}], ",", "\n", "\t\t\t\t\t", 
        "inputFile", ",", "\n", "\t\t\t\t", "_String", ",", "\n", 
        "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tmpFile", "=", 
          RowBox[{"CreateFile", "[", "]"}]}], ";", "\n", "\t\t\t\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{
          "tmpFile", ",", " ", "inputFile", ",", " ", "\"\<Text\>\""}], "]"}],
          ";", "\n", "\t\t\t\t\t", 
         RowBox[{"inputFile", "=", "tmpFile"}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"_Association", "|", "_List"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"tmpFile", "=", 
          RowBox[{"CreateFile", "[", "]"}]}], ";", "\n", "\t\t\t\t\t", 
         RowBox[{"Export", "[", 
          RowBox[{"tmpFile", ",", " ", "\n", "\t\t\t\t\t\t", 
           RowBox[{"StringRiffle", "[", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"Flatten", "@", 
                RowBox[{"{", 
                 RowBox[{"Normal", "@", "inputFile"}], "}"}]}], ",", 
               RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"fn_", "\[Rule]", "s_"}], ")"}], ":>", "\n", "\t", 
                 "\t\t\t\t\t\t\t\t", "s"}], "\n", "\t", "\t\t\t\t\t\t\t", 
                "}"}], ",", "\n", "\t", "\t\t\t\t\t\t", "1"}], "\n", "\t", 
              "\t\t\t\t\t\t", "]"}], ",", "\n", "\t", "\t\t\t\t\t\t", 
             "\"\<\\n\\n\>\""}], "\n", "\t\t\t\t\t\t\t", "]"}], ",", "\n", 
           "\t\t\t\t\t\t", "\"\<Text\>\""}], "\n", "\t\t\t\t\t\t", "]"}], ";",
          "\n", "\t\t\t\t\t", 
         RowBox[{"inputFile", "=", "tmpFile"}]}]}], "\n", "\t\t\t\t", "]"}]}],
      ";", "\n", "\t\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t\t", 
        RowBox[{"t1", "=", "\n", "\t\t\t\t\t", 
         RowBox[{"pybelSessionRunInputFile", "[", 
          RowBox[{"sessionTag", ",", " ", "inputFile"}], "]"}]}], "\n", 
        "\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AssociationQ", "@", "t1"}]}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"pybelSessionStart", "[", 
           RowBox[{
           "sessionTag", ",", "\n", "\t\t\t\t\t\t", "processDir", ",", "\n", 
            "\t\t\t\t\t\t", "babelDir"}], "\n", "\t\t\t\t\t\t", "]"}], ";", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"pybelSessionRunInputFile", "[", 
           RowBox[{"sessionTag", ",", " ", "inputFile"}], "]"}]}], ",", "\n", 
         "\t\t\t\t\t", "t1"}], "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", 
      "]"}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"9699cedb-f301-4964-a08a-58427378bb25"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]pybelRun\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"045472c0-2c21-4013-bfba-deca7c83e699"],

Cell[BoxData[{
 RowBox[{"pybelRun", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{"pybelRun", "[", "a_", "]"}], ":=", "\n", "\t", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{"Lookup", "[", 
     RowBox[{"a", ",", " ", "\"\<Session\>\"", ",", " ", 
      RowBox[{
       RowBox[{"Options", "[", 
        RowBox[{"OBPyRun", ",", " ", "\"\<Session\>\""}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", " ", "2"}], "]"}], "]"}]}], "]"}], ",", "\n", 
    "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"True", ":>", 
       RowBox[{"pybelSessionRun", "@", "a"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"\"\<Close\>\"", ":>", "\n", "\t\t\t\t", 
       RowBox[{"(", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"PySessionRemove", "[", "\"\<pybel\>\"", "]"}], ";", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"<|", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           "\n", "\t\t\t\t\t\t", 
           RowBox[{"\"\<StandardOutput\>\"", "\[Rule]", "\"\<\>\""}]}], "\n", 
          "\t\t\t\t\t\t", "|>"}]}], "\n", "\t\t\t\t\t", ")"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"\"\<Restart\>\"", ":>", "\n", "\t\t\t\t", 
       RowBox[{"(", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"PySessionRemove", "[", "\"\<pybel\>\"", "]"}], ";", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"pybelSessionRun", "@", "a"}]}], "\n", "\t\t\t\t\t", ")"}]}],
       ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"s_String", "?", 
        RowBox[{"(", 
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"WordCharacter", "|", "\"\<-\>\""}], ")"}], ".."}], "]"}],
          ")"}]}], ":>", "\n", "\t\t\t\t", 
       RowBox[{"pybelSessionRun", "[", 
        RowBox[{"a", ",", " ", "s"}], "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Close\>\"", ",", " ", 
         RowBox[{"s_String", "?", 
          RowBox[{"(", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"WordCharacter", "|", "\"\<-\>\""}], ")"}], ".."}], 
            "]"}], ")"}]}]}], "}"}], ":>", "\n", "\t\t\t\t", 
       RowBox[{"(", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"PySessionRemove", "[", "s", "]"}], ";", "\n", "\t\t\t\t\t", 
         
         RowBox[{"<|", " ", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"\"\<StandardError\>\"", "\[Rule]", "\"\<\>\""}], ",", 
           "\n", "\t\t\t\t\t\t", 
           RowBox[{"\"\<StandardOutput\>\"", "\[Rule]", "\"\<\>\""}]}], "\n", 
          "\t\t\t\t\t\t", "|>"}]}], "\n", "\t\t\t\t\t", ")"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Restart\>\"", ",", " ", 
         RowBox[{"s_String", "?", 
          RowBox[{"(", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"WordCharacter", "|", "\"\<-\>\""}], ")"}], ".."}], 
            "]"}], ")"}]}]}], "}"}], ":>", "\n", "\t\t\t\t", 
       RowBox[{"(", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"PySessionRemove", "[", "s", "]"}], ";", "\n", "\t\t\t\t\t", 
         
         RowBox[{"pybelSessionRun", "[", 
          RowBox[{"a", ",", " ", "s"}], "]"}]}], "\n", "\t\t\t\t\t", ")"}]}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"Automatic", ":>", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"PySessionActive", "[", "\"\<pybel\>\"", "]"}], ",", "\n", 
         "\t\t\t\t\t", 
         RowBox[{"pybelSessionRun", "@", "a"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{"pybelRunProcessRun", "@", "a"}]}], "\n", "\t\t\t\t\t", 
        "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"_", ":>", "\n", "\t\t\t\t", 
       RowBox[{"pybelRunProcessRun", "@", "a"}]}]}], "\n", "\t\t\t", "}"}]}], 
   "\n", "\t\t", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"ca4c31b0-d6a9-465a-856d-042f6136bd64"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBRun\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.695134271401659*^9, 
  3.695134272128296*^9}},ExpressionUUID->"8d6ee367-08b0-4594-aa62-\
5ebcfdc7f4d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "OBRun", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<EmitMessages\>\"", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     
     RowBox[{"\"\<EchoCommand\>\"", "\[Rule]", "False"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Directory\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Mode\>\"", "\[Rule]", "Automatic"}]}], "\n", "\t\t", 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBRun", "[", "a_Association", "]"}], ":=", "\n", 
   RowBox[{
    RowBox[{"PackageExceptionBlock", "[", "\"\<OpenBabelRun\>\"", "]"}], "@", 
    "\n", "\t", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"babelDir", ",", " ", "binary"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"binary", "=", "\n", "\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"a", "[", "\"\<Mode\>\"", "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"s_String", "?", "FileExistsQ"}], ":>", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{"FileNameTake", "@", "s"}]}], ",", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"Except", "[", "_String", "]"}], ":>", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"a", "[", "\"\<Input\>\"", "]"}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"f_String", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FileExistsQ", "@", "#"}], "&&", 
                    RowBox[{
                    RowBox[{"FileExtension", "@", "#"}], "\[Equal]", 
                    "\"\<py\>\""}]}], "&"}], ")"}]}], ",", "___"}], "}"}], ":>",
                   "\n", "\t", "\t", "\t\t\t\t\t\t\t", "\"\<Pybel\>\""}], ",",
                  "\n", "\t\t\t\t\t\t\t\t", 
                 RowBox[{
                 "_", "->", "\n", "\t\t\t\t\t\t\t\t\t", "Automatic"}]}], "\n",
                 "\t\t\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t\t\t", 
              "]"}]}]}], "\n", "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", 
         "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"babelDir", "=", "\n", "\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"a", "[", "\"\<Directory\>\"", "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Except", "[", 
            RowBox[{"_String", "?", "DirectoryQ"}], "]"}], ":>", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"Replace", "[", 
            RowBox[{
             RowBox[{"a", "[", "\"\<Mode\>\"", "]"}], ",", "\n", "\t", 
             "\t\t\t\t\t", 
             RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"s_String", "?", "FileExistsQ"}], ":>", "\n", "\t", 
                "\t\t\t\t\t\t\t", 
                RowBox[{"Replace", "[", "\n", "\t", "\t\t\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{
                  "FileNameJoin", "@", "\n", "\t", "\t\t\t\t\t\t\t\t\t", 
                   RowBox[{"SequenceCases", "[", 
                    RowBox[{
                    RowBox[{"FileNameSplit", "@", "s"}], ",", "\n", "\t", 
                    "\t", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"base__", ",", " ", "$obprefix", ",", "___"}], 
                    "}"}], ":>", "\n", "\t", "\t", "\t\t\t\t\t\t\t\t\t\t", 
                    RowBox[{"FileNameJoin", "@", 
                    RowBox[{"{", 
                    RowBox[{"base", ",", "$obprefix"}], "}"}]}]}]}], "\n", 
                    "\t", "\t\t\t\t\t\t\t\t\t\t", "]"}]}], ",", 
                  RowBox[{"{", "\n", "\t", "\t\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", "d_", "}"}], "\[RuleDelayed]", "d"}], ",", 
                    "\n", "\t", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"_", "->", "$OBDir"}]}], "\n", "\t", 
                   "\t\t\t\t\t\t\t\t", "}"}]}], "]"}]}], ",", "\n", 
               "\t\t\t\t\t\t\t", 
               RowBox[{"_", "->", "\n", "\t\t\t\t\t\t\t\t", "Automatic"}]}], 
              "\n", "\t\t\t\t\t\t\t", "}"}]}], "]"}]}]}], "\n", "\t\t\t\t", 
         "]"}]}], ";", "\n", "\t\t", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "binary", ",", "\n", "\t\t\t", "\"\<Pybel\>\"", ",", "\n", "\t\t\t\t", 
         RowBox[{"pybelRun", "@", "\n", "\t\t\t\t\t", 
          RowBox[{"Merge", "[", "\n", "\t\t\t\t\t\t", 
           RowBox[{
            RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
             RowBox[{"a", ",", "\n", "\t", "\t\t\t\t\t\t", 
              RowBox[{"\"\<Directory\>\"", "\[Rule]", 
               RowBox[{"Replace", "[", 
                RowBox[{"babelDir", ",", " ", 
                 RowBox[{"Automatic", "\[Rule]", "$OBDir"}]}], "]"}]}], ",", 
              "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"\"\<Input\>\"", "->", "\n", "\t", "\t", "\t\t\t\t\t\t", 
               RowBox[{"Replace", "[", 
                RowBox[{
                 RowBox[{"a", "[", "\"\<Input\>\"", "]"}], ",", "\n", "\t", 
                 "\t", "\t\t\t\t\t\t\t", 
                 RowBox[{
                 "inp_Association", ":>", "\n", "\t", "\t", 
                  "\t\t\t\t\t\t\t\t", 
                  RowBox[{"OBPyConfig", "@", "inp"}]}]}], "\n", "\t", "\t", 
                "\t\t\t\t\t\t\t", "]"}]}]}], "\n", "\t", "\t", "\t\t\t\t\t", 
             "}"}], ",", "\n", "\t", "\t\t\t\t\t", "Last"}], "\n", 
           "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", "_", ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"obabRun", "@", 
          RowBox[{"Merge", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a", ",", " ", 
              RowBox[{"\"\<Directory\>\"", "\[Rule]", "babelDir"}], ",", " ", 
              
              RowBox[{"\"\<Mode\>\"", "\[Rule]", "binary"}]}], "}"}], ",", 
            "Last"}], "]"}]}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBRun", "[", 
    RowBox[{
     RowBox[{"f_String", "?", "FileExistsQ"}], ",", "args___String", ",", " ", 
     RowBox[{"ops___", "?", "OptionQ"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"OBRun", "@", 
    RowBox[{"<|", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"f", ",", " ", "args"}], "}"}]}], ",", "\n", "\t\t", 
      RowBox[{"\"\<Options\>\"", "\[Rule]", "\n", "\t\t\t", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"{", "ops", "}"}]}], ",", " ", 
         RowBox[{"Except", "[", 
          RowBox[{"Options", "@", "OBRun"}], "]"}]}], "]"}]}], ",", "\n", 
      "\t\t", 
      RowBox[{"Sequence", "@@", "\n", "\t\t\t", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"{", "ops", "}"}]}], ",", " ", 
         RowBox[{"Options", "@", "OBRun"}]}], "]"}]}]}], "\n", "\t\t", 
     "|>"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"0bd7b3b2-19d3-4b20-8ad4-ff8dabfef2ed"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBPyRun\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.695138820513152*^9, 3.695138822207327*^9}, {
  3.7152920385215282`*^9, 
  3.715292038863638*^9}},ExpressionUUID->"583cd682-1a9c-4729-8473-\
ff813c9bddb7"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$OBPyHeader\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"2f03ca2b-7e86-4861-8c65-f6110ae41c79"],

Cell[BoxData[
 RowBox[{"$OBPyHeader", "=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dir", "=", 
      RowBox[{"FileNameJoin", "@", 
       RowBox[{"{", 
        RowBox[{
        "$OBDir", ",", "\"\<lib\>\"", ",", "$OBPythonInterpreter", ",", 
         "\"\<site-packages\>\""}], "}"}]}]}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"PyFromImportSow", "[", 
       RowBox[{"\"\<__future__\>\"", ",", " ", "\"\<print_function\>\""}], 
       "]"}], ",", "\n", "\t\t\t", 
      RowBox[{"PyImportSow", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<openbabel\>\"", ",", " ", "\"\<pybel\>\""}], "}"}], 
       "]"}]}], "\n", "\t\t\t", "}"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"576d1c24-5b6f-45fc-9257-21229d35695c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$OBPyMolecule\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7587ee38-1bfa-4551-879c-ee7b90cc59a4"],

Cell[BoxData[
 RowBox[{"$OBPyMolecule", "=", "\n", "\t", 
  RowBox[{
   RowBox[{"Evaluate", "[", "\n", "\t\t", 
    RowBox[{"ToSymbolicPython", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"pybelLoadMolString", " ", "=", " ", 
       RowBox[{"PyString", "[", 
        RowBox[{"#", ",", " ", "\"\<'''\>\""}], "]"}]}], ";", "\n", "\t\t\t", 
      
      RowBox[{"pybelLoadName", " ", "=", " ", 
       RowBox[{"PyString", "[", "#2", "]"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"pybelLoadFormat", " ", "=", " ", 
       RowBox[{"PyString", "@", "#3"}]}], ";", "\n", "\t\t\t", 
      RowBox[{"#2", " ", "=", " ", 
       RowBox[{"pybel", ".", 
        RowBox[{"readstring", "[", 
         RowBox[{
          RowBox[{"PyString", "@", "#3"}], ",", " ", "pybelLoadMolString"}], 
         "]"}]}]}], ";", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"#2", ".", "inputString"}], " ", "=", " ", 
       "pybelLoadMolString"}], ";", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"#2", ".", "inputFormat"}], " ", "=", " ", "pybelLoadFormat"}],
       ";", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"#2", ".", "inputName"}], " ", "=", " ", "pybelLoadName"}], 
      ";"}], "\n", "\t\t\t", "]"}], "\n", "\t\t", "]"}], 
   "&"}]}]], \
"CodeInput",ExpressionUUID->"5ecfb279-f8fd-4382-9e67-2b49ace58b90"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBPyMoleculeString\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"519693c6-65b8-4e4f-aaed-dd981043caa8"],

Cell[BoxData[{
 RowBox[{"OBPyMoleculeString", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBPyMoleculeString", "[", 
    RowBox[{
     RowBox[{"fmt_String", "->", 
      RowBox[{"molspec", ":", 
       RowBox[{"_List", "|", "_String"}]}]}], ",", " ", "name_"}], "]"}], ":=",
    "\n", "\t", 
   RowBox[{"$OBPyMolecule", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"StringQ", "[", "molspec", "]"}], ",", "\n", "\t\t\t", 
       "molspec", ",", "\n", "\t\t\t", 
       RowBox[{"ChemFormatsConvert", "[", 
        RowBox[{"molspec", ",", " ", 
         RowBox[{"fmt", "->", "\"\<String\>\""}]}], "]"}]}], "\n", "\t\t\t", 
      "]"}], ",", "\n", "\t\t", "name", ",", "\n", "\t\t", 
     RowBox[{"ChemFormatsCanonicalFormat", "[", "fmt", "]"}]}], "\n", "\t\t", 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBPyMoleculeString", "[", 
    RowBox[{
     RowBox[{"molspec", ":", 
      RowBox[{"_List", "|", "_String"}]}], ",", " ", "name_"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fmt", "=", 
       RowBox[{"ChemFormatsDetect", "[", 
        RowBox[{"molspec", ",", " ", "True"}], "]"}]}], "}"}], ",", "\n", 
     "\t\t", 
     RowBox[{"OBPyMoleculeString", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"fmt", "\[Rule]", "molspec"}], ",", "\n", "\t\t\t", "name"}], 
      "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"f43b55f4-2aa0-4bae-8b22-c21527138884"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBPyCommand\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"8936afdc-1932-4fb1-8f11-bce964944a4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OBPyCommand", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"molecules_:", 
      RowBox[{"{", "}"}]}], ",", "\n", "\t", "body_"}], "\n", "\t", "]"}], ":=",
    "\n", "\t", 
   RowBox[{
    RowBox[{"PackageExceptionBlock", "[", "\"\<OpenBabelRun\>\"", "]"}], "@", 
    "\n", "\t\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"basecmd", ",", " ", "stringcounter"}], "}"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{
       RowBox[{"basecmd", "=", "\n", "\t\t\t", 
        RowBox[{"PyColumn", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{"$OBPyHeader", ",", "\n", "\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"molecules", "=!=", "None"}], ",", "\n", "\t\t\t\t\t", 
              RowBox[{"MapIndexed", "[", "\n", "\t\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"Replace", "[", 
                  RowBox[{"#", ",", "\n", "\t", "\t", "\t\t\t\t\t", 
                   RowBox[{"{", "\n", "\t", "\t", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fmt_", "\[Rule]", 
                    RowBox[{"thing_", "\[Rule]", "name_String"}]}], ")"}], ":>",
                     "\n", "\t", "\t", "\t", "\t", "\t\t\t\t\t", 
                    RowBox[{
                    "OBPyMoleculeString", "[", "\n", "\t", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"fmt", "\[Rule]", "thing"}], ",", "\n", "\t", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t", "name"}], "\n", "\t", 
                    "\t", "\t", "\t", "\t\t\t\t\t\t", "]"}]}], ",", "\n", 
                    "\t", "\t", "\t", "\t", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"thing_", "\[Rule]", 
                    RowBox[{"name_String", "?", 
                    RowBox[{"(", 
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"WordCharacter", "|", "\"\<_\>\""}], ")"}], 
                    ".."}], "]"}], ")"}]}]}], ")"}], ":>", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "OBPyMoleculeString", "[", "\n", "\t", 
                    "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "thing", ",", "\n", "\t", "\t\t\t\t\t\t\t\t\t", "name"}], 
                    "\n", "\t", "\t\t\t\t\t\t\t\t\t", "]"}]}], ",", "\n", 
                    "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"fmt_String", "\[Rule]", 
                    RowBox[{"thing", ":", 
                    RowBox[{"Except", "[", 
                    RowBox[{"_String", "?", 
                    RowBox[{"(", 
                    RowBox[{"StringMatchQ", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"WordCharacter", "|", "\"\<_\>\""}], ")"}], 
                    ".."}], "]"}], ")"}]}], "]"}]}]}], ")"}], ":>", "\n", 
                    "\t", "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "OBPyMoleculeString", "[", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"fmt", "->", "thing"}], ",", "\n", "\t", "\t", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<pybelMol\>\"", "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", "1"}], ",", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"First", "@", "#2"}]}], ",", "\"\<\>\""}], 
                    "]"}]}]}], "\n", "\t", "\t", "\t\t\t\t\t\t\t\t", "]"}]}], 
                    ",", "\n", "\t", "\t", "\t\t\t\t\t\t", 
                    RowBox[{"_", ":>", "\n", "\t", "\t", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "OBPyMoleculeString", "[", "\n", "\t", "\t", "\t", "\t", 
                    "\t\t\t\t\t\t", 
                    RowBox[{
                    "#", ",", "\n", "\t", "\t", "\t", "\t", "\t", "\t", 
                    "\t\t\t\t", 
                    RowBox[{"\"\<pybelMol\>\"", "<>", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ">", "1"}], ",", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"First", "@", "#2"}]}], ",", "\"\<\>\""}], 
                    "]"}]}]}], "\n", "\t", "\t", "\t", "\t\t\t\t\t\t\t", 
                    "]"}]}]}], "\n", "\t", "\t", "\t", "\t\t\t\t\t", "}"}]}], 
                  "\n", "\t", "\t", "\t", "\t\t\t\t", "]"}], "&"}], ",", "\n",
                 "\t", "\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"!", 
                    RowBox[{"ListQ", "[", "molecules", "]"}]}], "||", 
                   RowBox[{
                    RowBox[{"ChemFormatsDetect", "[", 
                    RowBox[{"molecules", ",", " ", "False"}], "]"}], "===", 
                    "\"\<MolTable\>\""}]}], ",", "\n", "\t", "\t", 
                  "\t\t\t\t\t", 
                  RowBox[{"{", "molecules", "}"}], ",", "\n", "\t", "\t", 
                  "\t", "\t\t\t\t", "molecules"}], "\n", "\t\t\t\t\t\t\t", 
                 "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", "\n", 
              "\t\t\t\t\t", "Nothing"}], "\n", "\t\t\t\t\t", "]"}], ",", "\n",
             "\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"SymbolicPythonQ", "[", "body", "]"}], "||", 
               RowBox[{"StringQ", "[", 
                RowBox[{"Unevaluated", "[", "body", "]"}], "]"}]}], ",", "\n",
               "\t", "\t", "\t\t\t", "body", ",", "\n", "\t", "\t", "\t\t\t", 
              
              RowBox[{"ToSymbolicPython", "[", "body", "]"}]}], "\n", 
             "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "}"}]}]}]}], ";", "\n", 
       "\t\t", 
       RowBox[{"basecmd", "=", 
        RowBox[{"ToPython", "@", "basecmd"}]}], ";", "\n", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"StringQ", "@", "basecmd"}]}], ",", " ", "\n", "\t\t\t", 
         RowBox[{"PackageRaiseException", "[", 
          RowBox[{
          "\"\<OpenBabelRun\>\"", ",", "\n", "\t\t\t\t", 
           "\"\<Input `` could not be converted to python\>\"", ",", "\n", 
           "\t\t\t\t", 
           RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"HoldForm", "[", "body", "]"}], "}"}]}]}], "\n", 
          "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
       "basecmd"}]}], 
     RowBox[{"(*", 
      RowBox[{"//", 
       RowBox[{"StringDelete", "[", "\"\<\\n\\n\>\"", "]"}]}], "*)"}], "\n", 
     "\t\t", "]"}]}]}], ";"}], "\n", 
 RowBox[{"OBPyCommand", "~", "SetAttributes", "~", 
  "HoldRest"}]}], \
"CodeInput",ExpressionUUID->"e727cb1e-fa6e-463f-820a-7fb2661c3d1d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBPyRun\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"c4e08546-855c-4a8f-9921-1f3cf22586cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OpenBabel", "::", "runfile"}], "=", 
   "\"\<File string for OpenBabel run:\n\n``\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.715363435256858*^9, 
  3.715363442074774*^9}},ExpressionUUID->"34b49b7a-c32e-4ab2-80f8-\
a226f0d396d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OpenBabel", "::", "runerr"}], "=", 
   "\"\<Error in OpenBabel run:\n\n``\>\""}], ";"}]], "CodeInput",
 CellChangeTimes->{{3.715362846634007*^9, 3.7153628720995073`*^9}, 
   3.715363114207574*^9, 
   3.715363281891232*^9},ExpressionUUID->"f822968f-9160-4449-81cd-\
1d834a020009"],

Cell[BoxData[
 RowBox[{"OBPyRun", "//", 
  "Clear"}]], \
"CodeInput",ExpressionUUID->"4a2642f6-d1d6-4efe-9c3b-98d55a3c8fb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "OBPyRun", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<OpenBabel\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Directory\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Session\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<EmitMessages\>\"", "\[Rule]", "True"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<EchoFile\>\"", "\[Rule]", "False"}]}], "\n", "\t\t", 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBPyRun", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"molecules", ":", 
      RowBox[{"_List", "|", "_String", "|", "_Rule", "|", "None"}], ":", 
      "None"}], ",", "\n", "\t", 
     RowBox[{"body", ":", 
      RowBox[{"Except", "[", 
       RowBox[{"_Rule", "|", "_RuleDelayed", "|", "_FilterRules", "|", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"_Rule", "|", "_RuleDelayed", "|", "_FilterRules"}], ")"}],
           ".."}], "}"}]}], "]"}]}], ",", "\n", "\t", 
     RowBox[{"imps", ":", 
      RowBox[{"\"\<StandardError\>\"", "|", "\"\<StandardOutput\>\"", "|", 
       RowBox[{"{", 
        RowBox[{"Repeated", "[", 
         RowBox[{
          RowBox[{"\"\<StandardError\>\"", "|", "\"\<StandardOutput\>\""}], 
          ",", "2"}], "]"}], "}"}]}], ":", "\n", "\t\t", 
      "\"\<StandardOutput\>\""}], ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{
    RowBox[{"PackageExceptionBlock", "[", "\"\<FormatConvert\>\"", "]"}], "@",
     "\n", "\t", 
    RowBox[{
     RowBox[{"PackageExceptionBlock", "[", "\"\<OpenBabelRun\>\"", "]"}], "@",
      "\n", "\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"f", "=", 
         RowBox[{"$OBPyRunFileString", "=", 
          RowBox[{"OBPyCommand", "[", 
           RowBox[{"molecules", ",", " ", "body"}], "]"}]}]}], "}"}], ",", 
       "\n", "\t", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<EchoFile\>\"", "]"}], ",", "\n", 
          "\t", "\t\t\t", 
          RowBox[{"Echo", "[", "f", "]"}]}], "\n", "\t", "\t\t\t", "]"}], ";",
         "\n", "\t", "\t\t", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t", "\t\t\t", 
           RowBox[{"runData", "=", "\n", "\t", "\t", "\t\t\t", 
            RowBox[{"OBRun", "[", "\n", "\t", "\t", "\t\t\t\t", 
             RowBox[{"<|", "\n", "\t", "\t", "\t\t\t\t\t", 
              RowBox[{"ops", ",", "\n", "\t", "\t", "\t", "\t", "\t\t\t", 
               RowBox[{
               "\"\<OpenBabel\>\"", "\[Rule]", "\n", "\t\t\t\t\t\t\t\t", 
                RowBox[{"Replace", "[", 
                 RowBox[{
                  RowBox[{"OptionValue", "[", "\"\<OpenBabel\>\"", "]"}], ",",
                   " ", 
                  RowBox[{"Automatic", "\[RuleDelayed]", "$OpenBabel"}]}], 
                 "]"}]}], ",", "\n", "\t\t\t\t\t\t\t", 
               RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Pybel\>\""}], ",", 
               "\n", "\t", "\t", "\t", "\t", "\t\t\t", 
               RowBox[{"\"\<Input\>\"", "\[Rule]", "f"}]}], "\n", "\t", "\t", 
              "\t\t\t\t\t", "|>"}], "\n", "\t", "\t", "\t\t\t\t", "]"}]}], 
           "\n", "\t\t\t\t", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"$OBPyRunErrorMessage", "=", 
            RowBox[{"StringTrim", "@", 
             RowBox[{"runData", "[", "\"\<StandardError\>\"", "]"}]}]}], ";", 
           "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<EmitMessages\>\"", "]"}], ",", 
             "\n", "\t", "\t", "\t\t", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"errdats", "=", 
                 RowBox[{"StringTrim", "@", 
                  RowBox[{"runData", "[", "\"\<StandardError\>\"", "]"}]}]}], 
                "}"}], ",", "\n", "\t", "\t", "\t\t\t", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"StringLength", "[", "errdats", "]"}], ">", "0"}], 
                 ",", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"PackageThrowMessage", "[", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{
                  "\"\<OpenBabelError\>\"", ",", "\n", "\t\t\t\t\t\t\t", 
                   "\"\<Error in OpenBabel run:\\n\\n``\>\"", ",", "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{"\"\<MessageParameters\>\"", "\[Rule]", 
                    RowBox[{"{", "errdats", "}"}]}]}], "\n", "\t\t\t\t\t\t\t",
                   "]"}]}], "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t",
               "]"}]}], "\n", "\t\t\t\t", "]"}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Replace", "[", "\n", "\t\t\t", 
               RowBox[{"s_String", "\[RuleDelayed]", "\n", "\t\t\t\t", 
                RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Quiet", "@", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"ImportString", "[", 
                    RowBox[{"s", ",", " ", "\"\<RawJSON\>\""}], "]"}], ",", 
                    " ", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"$Failed", ":>", 
                    RowBox[{"ImportString", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"s", ",", " ", 
                    RowBox[{"\"\<'\>\"", "\[Rule]", "\"\<\\\"\>\""}]}], "]"}],
                     ",", " ", "\"\<RawJSON\>\""}], "]"}]}]}], "\n", 
                    "\t\t\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"$Failed", "\[Rule]", "s"}]}], "\n", "\t\t\t\t\t", 
                 "]"}]}], "\n", "\t\t\t", "]"}], "@", "\n", "\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "===", "1"}], ",", "\n", 
                "\t", "\t", "\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringLength", "@", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ">", "0"}], ",", " ", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "\n", "\t", 
                "\t", "\t\t", "#"}], "\n", "\t", "\t", "\t\t", "]"}]}], "&"}],
             "@", "\n", "\t", "\t", "\t", 
            RowBox[{"Lookup", "[", "\n", "\t", "\t", "\t\t", 
             RowBox[{
              RowBox[{"Map", "[", "\n", "\t", "\t", "\t\t\t", 
               RowBox[{"StringTrim", ",", "\n", "\t", "\t", "\t\t\t", 
                RowBox[{"KeyDrop", "[", 
                 RowBox[{"runData", ",", "\"\<ExitCode\>\""}], "]"}]}], "\n", 
               "\t", "\t", "\t\t\t", "]"}], ",", "\n", "\t", "\t", "\t\t", 
              RowBox[{"Flatten", "@", 
               RowBox[{"{", "imps", "}"}]}]}], "\n", "\t", "\t\t\t", 
             "]"}]}]}]}], "\n", "\t", "\t\t", "]"}]}]}], "\n", "\t", "\t", 
      "]"}]}]}]}], ";"}], "\n", 
 RowBox[{"OBPyRun", "~", "SetAttributes", "~", 
  "HoldAll"}]}], \
"CodeInput",ExpressionUUID->"341373b7-efad-482d-9b5d-7836e69b7704"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBForceFieldEnergy\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"05fc8566-19aa-4b7f-8ad8-64badc0e3f78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OBForceFieldEnergy", "[", 
   RowBox[{"molecule_", ",", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"log", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", "\n", "\t\t\t\t\t", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{
           RowBox[{"{", "ops", "}"}], ",", " ", "\"\<LogLevel\>\"", ",", " ", 
           "\"\<Medium\>\""}], "]"}], ",", "\n", "\t\t\t\t\t", 
         RowBox[{
          RowBox[{"Except", "[", "_String", "]"}], "\[Rule]", 
          "\"\<None\>\""}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"ll", "=", "\n", "\t\t\t\t", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"Lookup", "[", 
          RowBox[{
           RowBox[{"{", "ops", "}"}], ",", " ", "\"\<LogLevel\>\"", ",", " ", 
           "\"\<Medium\>\""}], "]"}], ",", " ", "\n", "\t\t\t\t\t", 
         RowBox[{"{", "\n", "\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"s_String", "\[RuleDelayed]", "\n", "\t\t\t\t\t\t\t", 
            RowBox[{"\"\<OBFF_LOGLVL_\>\"", "<>", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{"StringTrim", "[", 
              RowBox[{
               RowBox[{"ToUpperCase", "[", "s", "]"}], ",", " ", 
               "\"\<OBFF_LOGLVL_\>\""}], "]"}]}]}], ",", "\n", "\t\t\t\t\t\t", 
           RowBox[{
           "_", "->", "\n", "\t\t\t\t\t\t\t", "\"\<OBFF_LOGLVL_NONE\>\""}]}], 
          "\n", "\t\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"field", "=", 
       RowBox[{"Lookup", "[", 
        RowBox[{
         RowBox[{"{", "ops", "}"}], ",", " ", "\"\<ForceField\>\"", ",", " ", 
         "\"\<UFF\>\""}], "]"}]}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"OBPyRun", "[", 
     RowBox[{"molecule", ",", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"ff", " ", "=", " ", 
        RowBox[{"openbabel", ".", "OBForceField", ".", 
         RowBox[{"FindForceField", "[", 
          RowBox[{"PyString", "@", "field"}], "]"}]}]}], ";", "\n", "\t\t\t", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "ff"}], ",", "\n", "\t\t\t  ", 
         RowBox[{"Throw", "[", "\"\<Could not find forcefield\>\"", "]"}]}], 
        "\n", "\t\t\t  ", "]"}], ";", "\n", "\t\t\t", 
       RowBox[{"ff", ".", 
        RowBox[{"SetLogLevel", "[", 
         RowBox[{"openbabel", ".", "\"\<OBFF_LOGLVL_NONE\>\""}], "]"}]}], ";",
        "\n", "\t\t\t", 
       RowBox[{"ff", ".", 
        RowBox[{"SetLogToStdOut", "[", "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"pybelMol", ".", "setup"}], " ", "=", " ", 
        RowBox[{"ff", ".", 
         RowBox[{"Setup", "[", 
          RowBox[{"pybelMol", ".", "OBMol"}], "]"}]}]}], ";", "\n", "\t\t\t", 
       
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"pybelMol", ".", "setup"}]}], ",", "\n", "\t\t\t  ", 
         RowBox[{"Throw", "[", "\"\<Could not set up forcefield\>\"", "]"}]}],
         "\n", "\t\t\t  ", "]"}], ";", "\n", "\t\t\t", 
       RowBox[{"ff", ".", 
        RowBox[{"SetLogLevel", "[", 
         RowBox[{"openbabel", ".", "ll"}], "]"}]}], ";", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PyString", "[", "\"\<None\>\"", "]"}], ",", " ", 
             RowBox[{"PyString", "[", "\"\<Low\>\"", "]"}]}], "}"}], ",", " ", 
           RowBox[{"PyString", "@", "log"}]}], "]"}], ",", " ", "\n", 
         "\t\t\t\t", 
         RowBox[{
          RowBox[{"ff", ".", 
           RowBox[{"Energy", "[", "]"}]}], "//", "Print"}], ",", "\n", 
         "\t\t\t\t", 
         RowBox[{"ff", ".", 
          RowBox[{"Energy", "[", "]"}]}]}], "\n", "\t\t\t\t", "]"}], ";"}], 
      ",", "\n", "\t\t\t", 
      RowBox[{"Evaluate", "@", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"{", "ops", "}"}], ",", " ", 
         RowBox[{"Except", "[", 
          RowBox[{"\"\<LogLevel\>\"", "|", "\"\<ForceField\>\""}], "]"}]}], 
        "]"}]}]}], "\n", "\t\t\t", "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"d90d0416-8154-444f-ac27-854d0cf9f0f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBFormatConvert\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.715292617614367*^9, 3.715292621693492*^9}, {
   3.715292712784327*^9, 3.7152927180312843`*^9}, 
   3.7152928800599737`*^9},ExpressionUUID->"d359d1bc-cef7-4108-91a9-\
4fcbc0a0490d"],

Cell[BoxData[{
 RowBox[{"OBFormatConvert", "//", "Clear"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OBFormatConvert", "[", 
    RowBox[{"molecule_", ",", " ", "format_String", ",", " ", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"OBPyRun", "[", 
    RowBox[{"molecule", ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PyString", "@", "\"\<SMILES\>\""}], ",", " ", 
            RowBox[{"PyString", "@", "\"\<InChI\>\""}]}], "}"}], ",", " ", 
          RowBox[{"pybelMol", ".", "inputFormat"}]}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"pybelMol", ".", 
         RowBox[{"make3D", "[", "]"}]}]}], "\n", "\t\t\t", "]"}], ";", "\n", 
      "\t\t", 
      RowBox[{
       RowBox[{"pybelMol", ".", 
        RowBox[{"write", "[", 
         RowBox[{"PyString", "[", "format", "]"}], "]"}]}], "//", "Print"}]}],
      ",", "\n", "\t\t", "ops"}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"OBFormatConvert", "[", 
   RowBox[{"molecule_", ",", " ", 
    RowBox[{"curFmt_String", "\[Rule]", "targetFmt_String"}], ",", " ", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"OBFormatConvert", "[", 
   RowBox[{
    RowBox[{"curFmt", "->", "molecule"}], ",", " ", "targetFmt", ",", " ", 
    "ops"}], "]"}]}]}], \
"CodeInput",ExpressionUUID->"d53df0d7-9132-4721-96fb-446a8b8d42cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]OBRingMap\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,
 CellChangeTimes->{{3.7153719901096354`*^9, 3.715371996125209*^9}, 
   3.71537253769599*^9},ExpressionUUID->"e2ed8f07-ea25-4dd9-846e-\
7c0b1ddfcf46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OBRingMap", "[", 
   RowBox[{"f_", ",", "mol_", ",", 
    RowBox[{"ops", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fReal", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"f", ",", 
        RowBox[{"Identity", "\[Rule]", 
         RowBox[{"Function", "@", "#"}]}]}], "]"}]}], "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{"OBPyRun", "[", 
     RowBox[{"mol", ",", "\n", "\t", "\t\t", 
      RowBox[{
       RowBox[{"MapIndexed", "[", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"Function", "[", "\n", "\t", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<===Ring \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"#2", "+", "1"}], "]"}], "<>", "\"\<====\>\""}], "]"}], 
           ";", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"f", "[", "#", "]"}], "//", "Print"}], ";"}], "\n", 
          "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"openbabel", ".", 
          RowBox[{"OBMolRingIter", "[", 
           RowBox[{"pybelMol", ".", "OBMol"}], "]"}]}]}], "\n", "\t\t\t\t", 
        "]"}], ";"}], ",", "\n", "\t\t\t", "ops"}], "\n", "\t\t\t", "]"}]}], 
   "\n", "\t\t", "]"}]}]], "CodeInput",
 CellChangeTimes->{{3.715371969112854*^9, 3.715372134528818*^9}, {
   3.715372455407957*^9, 3.715372486364245*^9}, {3.715372537714551*^9, 
   3.71537254497139*^9}, {3.71537293361576*^9, 3.715372968844487*^9}, {
   3.715373049946335*^9, 3.715373060100812*^9}, {3.7153732401323767`*^9, 
   3.715373240313488*^9}, {3.715373292677899*^9, 3.71537335309974*^9}, {
   3.715380256477455*^9, 3.7153802574669724`*^9}, {3.7153803944789124`*^9, 
   3.715380395908153*^9}, {3.71538042627789*^9, 3.715380459488701*^9}, 
   3.715380749189137*^9, {3.715381102948702*^9, 3.715381126321837*^9}, 
   3.71538122272783*^9},ExpressionUUID->"6d59b96a-955f-4440-8075-43544458d383"]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"baee82a9-8da0-4e7b-8616-\
2c5901b10320"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"9967dd55-49d8-4076-9530-\
2a33c66f8add"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 28}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

