(* ::Package:: *)

(* Autogenerated Package *)

(* ::Subsubsection::Closed:: *)
(*Character Table *)



CharacterTable::usage="Storage class for character table data";
CharacterTableData::usage="Looks up char table data";


(* ::Subsubsection::Closed:: *)
(*CorrelationTables*)



CorrelationTableData::usage="";
CorrelationTableFormatted::usage="";


Begin["`Private`"];


(* ::Subsection:: *)
(*CharacterTable*)



(* ::Text:: *)
(*
	Provide accessors to functions cooked in at package level to decrease the amount of top-level cruft
*)



(* ::Subsubsection::Closed:: *)
(*$charTables Keys*)



$charTables=
	{
		"Cs","Ci","C1","C2","C3","C4","C5","C6","C7","C8",
		"D2","D3","D4","D5","D6",
		"C2h","C3h","C4h","C5h","C6h",
		"C2v","C3v","C4v","C5v","C6v","Civ",
		"D2d","D3d","D4d","D5d","D6d",
		"D2h","D3h","D4h","D5h","D6h","D8h","Dih",
		"S4","S6","S8",
		"T","Th","Td",
		"O","Oh",
		"I","Ih",
		"K","Kh"
		};


(* ::Subsubsection::Closed:: *)
(*CharacterTableGrid*)



CharacterTableGrid[data_]:=
	Grid[
		Prepend[
			Prepend[
				data["SymmetryClasses"][[All, "Formatted"]],
				data["PointGroup", "Formatted"]
				]
			]@
		MapThread[
			Prepend,
			{
				data["CharacterTable"],
				data["IrreducibleRepresentations"][[All, "Formatted"]]
				}
			],
		Alignment->Right,
		Dividers->{{2->Black},{2->Black}}
		];


(* ::Subsubsection::Closed:: *)
(*CharacterTable*)



CharacterTable[data_Association][k__]:=
	data[k]
CharacterTable[pg_String]:=
	CharacterTable@$ChemCharacterTables[pg];
CharacterTable/:Normal[CharacterTable[data_Association]]:=
	data;
CharacterTable/:Part[CharacterTable[data_Association], i__]:=
	Replace[{i},{
		{s_String}:>
			CharacterTableData[CharacterTable@data,
				{"IrreducibleRepresentation", s},
				"Vector"
				],
		{s_String, e__}:>
			CharacterTableData[CharacterTable@data,
				{"IrreducibleRepresentation", s},
				"Vector"
				][[e]],
		_:>
			data["CharacterTable"][[i]]
		}];
CharacterTable/:Dataset[CharacterTable[data_Association]]:=
	Dataset@data;


(* ::Subsubsection::Closed:: *)
(*Format*)



Format[CharacterTable[data_Association]]:=
	RawBoxes@TemplateBox[
		ToBoxes/@{data, CharacterTableGrid[data]},
		"CharacterTable",
		InterpretationFunction:>
			Function[
				RowBox@{"CharacterTable","[",#,"]"}
				],
		DisplayFunction:>
			Function[
				StyleBox[
					RowBox@{
						"CharacterTable",
						"[",
						PanelBox[
							#2,
							Appearance->{
								"Default"->
									FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]
								}
							],
						"]"
						},
					ShowStringCharacters->False
					]
				],
		Editable->False,
		Selectable->False
		];


(* ::Subsection:: *)
(*Character Table Data*)



(* ::Subsubsection::Closed:: *)
(*CharacterTableData*)



CharacterTableData[ct_String]:=
	CharacterTable[ct];
CharacterTableData[ct_CharacterTable]:=
	ct;
CharacterTableData[ct:_String|_CharacterTable,
	prop:Alternatives@@$CharacterTableKeys
	]:=
	CharacterTableData[ct][prop];
CharacterTableData[ct:_String|_CharacterTable,
	{"IrreducibleRepresentation"|"IR", irrep:_String|_Integer}
	]:=
	With[{coredata=CharacterTableData[ct]},
		With[{irpos=
			Switch[irrep,
				_Integer,
					irrep,
				_String,
					FirstPosition[
						coredata["IrreducibleRepresentations"][[All, "ID"]], 
						irrep,
						$Failed
						][[1]],
				_,
					$Failed
				]
			},
			<|
				"PointGroup"->coredata["PointGroup"],
				"Data"->
					coredata["IrreducibleRepresentations"][[irpos]],
				"Vector"->
					coredata["CharacterTable"][[irpos]],
				"LinearFunctions"->
					coredata["LinearFunctions"][[irpos]],
				"NonLinearFunctions"->
					coredata["NonLinearFunctions"][[irpos]]
				|>/;Length[coredata["IrreducibleRepresentations"]]>=irpos
			]
		];
CharacterTableData[ct:_String|_CharacterTable,
	{"SymmetryClass"|"SC", sc:_String|_Integer}
	]:=
	With[{coredata=CharacterTableData[ct]},
		With[{scpos=
			Switch[sc,
				_Integer,
					sc,
				_String,
					FirstPosition[
						coredata["SymmetryClasses"][[All, "ID"]], 
						sc,
						$Failed
						][[1]],
				_,
					$Failed
				]
			},
			<|
				"PointGroup"->
					coredata["PointGroup"],
				"Data"->
					coredata["SymmetryClasses"][[scpos]],
				"Vector"->
					coredata["CharacterTable"][[scpos]]
				|>/;Length[coredata["SymmetryClasses"]]>=scpos
			]
		];


$CharacterTableThingProps=
	{
		"PointGroup",
		"Vector",
		"SymmetryClass",
		"IrreducibleRepresentation",
		"Data",
		"LinearFunctions",
		"NonLinearFunctions"
		};
CharacterTableData[ct:_String|_CharacterTable,
	{p:"IrreducibleRepresentation"|"IR"|"SymmetryClass"|"SC", thing:_String|_Integer},
	prop:Alternatives@@$CharacterTableThingProps|
		{Alternatives@@$CharacterTableThingProps,__String}
	]:=
	With[{base=CharacterTableData[ct, {p, thing}]},
		base@@Flatten[{prop}]/;AssociationQ@base
		]


PackageAddAutocompletions["CharacterTableData",
	{
		$charTables, 
		Join[$CharacterTableKeys, 
			{"SymmetryClass", "IrreducibleRepresentation"}
			],
		$CharacterTableThingProps
		}
	]


(* ::Subsection:: *)
(*CorrelationTables*)



(* ::Subsubsection::Closed:: *)
(*correlationTableDataLoad*)



correlationTableDataLoad[]:=
	If[!AssociationQ[$CorrelationTableKeys], 
		PackageAddAutocompletions[#, 
			$CorrelationTableKeys=
				{
					Sort@
						Map[#ID&,
							Keys[$ChemCorrelationTables]
							], 
					Sort@DeleteDuplicates@
						Map[#ID&, Flatten[Values[Keys/@$ChemCorrelationTables]]]
					}
			]&/@{CorrelationTableData, CorrelationTableFormatted}
		]


(* ::Subsubsection::Closed:: *)
(*CorrelationTableData*)



CorrelationTableData//Clear


CorrelationTableData[k_]:=
	With[{d=KeySelect[$ChemCorrelationTables, StringMatchQ[#ID, k]&]},
		correlationTableDataLoad[];
		d/;AssociationQ[d]&&Length[d]>0
		];
CorrelationTableData[k_, k2_]:=
	With[{d=CorrelationTableData[k]},
		With[
			{
				d2=
					Select[
						Map[KeySelect[StringMatchQ[#ID, k2]&], d],
						Length[#]>0&
						]
				},
			d2/;Length[d2]>0
			]/;AssociationQ[d]&&Length[d]>0
		];
CorrelationTableData[k_, k2_, i_]:=
	With[{d=CorrelationTableData[k, k2]},
		With[
			{
				d2=
					Select[
						Map[
							Select[Map[KeySelect[StringMatchQ[#ID, i]&]], Length[#]>0&],
							d
							],
						Length[#]>0&
						]
				},
			d2/;Length[d2]>0
			]/;AssociationQ[d]&&Length[d]>0
		];


correlationTableFormatIrrep[e_]:=
	Replace[l_List:>Plus@@l]@
		Replace[#, {n_Integer,s_}:>Row@{n,"\[ThinSpace]", s}, 2]&@
		ReplaceAll[a_Association:>a["Formatted"]]@e;
correlationTableFormatMap[l_Association]:=
	Map[
		correlationTableFormatIrrep,
		KeyMap[Key["Formatted"], l]
		];
correlationTableFormatAll[l_]:=
	Map[
		correlationTableFormatMap,
		KeyMap[Key["Formatted"], l]
		]


CorrelationTableFormatted//Clear


correlationTableApplyFormatting[d_, d2_, i_]:=
	Grid[
		Prepend[
			Transpose@
				Prepend[
					Values[Values/@d2],
					Keys@d2[[1]]
					],
			Prepend[Keys[d2], Keys[d][[i, "Formatted"]] ]
			],
		Alignment->Left,
		Dividers->{{2->Gray},{2->Gray}},
		Background->{{1->GrayLevel[.95]}, {1->GrayLevel[.95]}},
		Frame->True,
		FrameStyle->Gray
		]


(* ::Subsubsection::Closed:: *)
(*CorrelationTableFormatted*)



CorrelationTableFormatted[k__]:=
	With[{d=CorrelationTableData[k]},
		Column@
			MapIndexed[
				With[{d2=correlationTableFormatAll[#]},
					correlationTableApplyFormatting[d, d2, #2[[1]]]
					]&,
				Values@d
				]/;AssociationQ[d]
		];
(*CorrelationTableFormatted[k_, v_]:=
	With[{d=CorrelationTableData[k]},
		With[
			{
				d2=KeySelect[d, #ID\[Equal]v&]
				},
			correlationTableApplyFormatting[
				d2,
				correlationTableFormatAll[d2[[1]]]
				]/;Length[d2]>0
			]/;AssociationQ[d]
		];
CorrelationTableFormatted[k_, v_, i_]:=
	With[{d=CorrelationTableData[k, v]},
		correlationTableFormatIrrep[d]/;Head[d]=!=CorrelationTableData
		]*)


End[];



