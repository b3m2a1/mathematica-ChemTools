Notebook[{

Cell[CellGroupData[{
Cell["\[LeftCeiling]Interfaces\[RightFloor]", "CodeSection",
 Evaluatable->True,ExpressionUUID->"dd73df66-e48f-4a7a-ae7b-885d50756209"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RegisterInterface", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Registers an object interface\>\""}], 
  ";"}]], "CodeInput",ExpressionUUID->"8dd7dbe1-88c2-4093-ad10-f85d7f8de47e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$InterfacePropertyStore", "::", "usage"}], "=", "\n", "\t", 
   "\"\<ExpressionStore for cached object properties\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceSetProperty", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Sets a property value\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InterfacePropertyValue", "::", "usage"}], "=", "\n", "\t", 
    "\"\<Gets a property value\>\""}], ";"}], "\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceRemoveProperty", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Removes a property value\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfacePropertyList", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Lists the properties on an object\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceCopyProperties", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Copies properties from one object to another\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"d2cbf7c3-9ab1-4fd1-99c0-1fd38d546047"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceMethod", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Alias for defining object methods\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceAttribute", "::", "usage"}], "=", "\n", "\t", 
   "\"\<Alias for defining object attributes\>\""}], 
  ";"}]}], "CodeInput",ExpressionUUID->"ab594a17-f1e5-4bfd-b1f0-dbb95df8a816"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], 
  ";"}]], \
"InputSection",ExpressionUUID->"8d02ba8b-7c51-4bd0-81ee-afc1718820b2"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Properties\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"0bcee21a-985b-47d7-bd8e-8421255b5405"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "@", "$InterfacePropertyStore"}]}], ",", "\n", "\t", 
    RowBox[{"$InterfacePropertyStore", "=", 
     RowBox[{
     "Language`NewExpressionStore", "[", "\"\<<ObjectPropertyStore>\>\"", 
      "]"}]}]}], "\n", "\t", "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"21cee3a2-6c48-481d-ad96-9429fce9f8f2"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]get\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"a18a5f98-6352-4cf8-9e54-9905c6b22c60"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"propGet", "[", 
    RowBox[{"spec_", ",", " ", "prop_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"$InterfacePropertyStore", "@", 
      RowBox[{"\"\<get\>\"", "[", 
       RowBox[{"spec", ",", " ", "prop"}], "]"}]}], ",", "\n", "\t\t", 
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"Null", "\[Rule]", 
        RowBox[{"Missing", "[", 
         RowBox[{"\"\<KeyAbsent\>\"", ",", " ", "prop"}], "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"$$hold", "[", "x_", "]"}], "\[RuleDelayed]", "x"}]}], "\n", 
      "\t\t\t", "}"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"e09dfc7a-21f4-4256-b5fc-ccad5f32bab9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]set\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"12f34831-3598-41c2-8bea-23abfe6719d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"propSet", "[", 
   RowBox[{"spec_", ",", " ", "prop_", ",", " ", "val_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{"$InterfacePropertyStore", "@", 
     RowBox[{"\"\<put\>\"", "[", 
      RowBox[{"spec", ",", " ", "prop", ",", " ", "val"}], "]"}]}], ";", "\n",
     "\t\t", "val"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"e788f443-5b01-42ee-ab76-c3aeb6b5947b"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]set\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"72c95c0d-1fa2-475e-9b77-26b2facb8588"],

Cell[BoxData[
 RowBox[{"$$hold", "~", "SetAttributes", "~", 
  "HoldAllComplete"}]], \
"CodeInput",ExpressionUUID->"5ace43a6-79a7-4790-904a-9549e6546a7f"],

Cell[BoxData[
 RowBox[{"propSetDelayed", "~", "SetAttributes", "~", 
  "HoldRest"}]], \
"CodeInput",ExpressionUUID->"90cbefdd-987d-422b-bea8-5f22ed405f32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"propSetDelayed", "[", 
   RowBox[{"spec_", ",", " ", "prop_", ",", " ", "val_"}], "]"}], ":=", "\n", 
  "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{"$InterfacePropertyStore", "@", 
     RowBox[{"\"\<put\>\"", "[", 
      RowBox[{"spec", ",", " ", "prop", ",", " ", 
       RowBox[{"$$hold", "@", "val"}]}], "]"}]}], ";"}], "\n", "\t\t", 
   ")"}]}]], \
"CodeInput",ExpressionUUID->"d9585187-04a8-4dd0-9e27-fc62eebed5af"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]remove\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"d9003452-6078-4879-a2fa-43a1db3904b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"propRemove", "[", 
    RowBox[{"spec_", ",", " ", "prop_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfacePropertyStore", "@", 
    RowBox[{"\"\<remove\>\"", "[", 
     RowBox[{"spec", ",", " ", "prop"}], "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"fbb27320-f242-4475-a933-a1ff0741f8ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]keys\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"3fcb7255-19fe-4777-9217-c2c3a4e315d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"propKeys", "[", "spec__", "]"}], ":=", "\n", "\t", 
  RowBox[{"$InterfacePropertyStore", "@", 
   RowBox[{
   "\"\<getKeys\>\"", "[", "spec", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"eb3080c0-94aa-4459-9f37-5336459dd569"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]computeProp\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"0efcf1e3-4c70-4c3a-9e35-d1826f512712"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"computeProp", "[", 
   RowBox[{
   "spec_", ",", " ", "prop_", ",", " ", "func_", ",", " ", "args___"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{"propGet", "[", 
     RowBox[{"spec", ",", " ", "prop"}], "]"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Missing", "[", 
      RowBox[{"\"\<KeyAbsent\>\"", ",", " ", "prop"}], "]"}], ":>", "\n", 
     "\t\t\t", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"v", "=", 
         RowBox[{"func", "[", "args", "]"}]}], "}"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{"propSet", "[", 
         RowBox[{"spec", ",", " ", "prop", ",", " ", "v"}], "]"}], ";", "\n", 
        "\t\t\t\t", "v"}]}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t", 
   "]"}]}], "\n", 
 RowBox[{"computeProp", "~", "SetAttributes", "~", 
  "HoldAllComplete"}]}], \
"CodeInput",ExpressionUUID->"fa02680d-1e74-4500-bf85-6a28a3e03292"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]copyProps\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"12831feb-3b88-4a18-86f6-4be0bea1072d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"copyProps", "[", 
   RowBox[{"obj1_", ",", " ", "obj2_", ",", " ", 
    RowBox[{"keyTest_:", 
     RowBox[{"(", 
      RowBox[{"True", "&"}], ")"}]}]}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Scan", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"keyTest", "[", "#", "]"}], ",", " ", 
       RowBox[{"propSet", "[", 
        RowBox[{"obj2", ",", " ", "#", ",", " ", 
         RowBox[{"propGet", "[", 
          RowBox[{"obj1", ",", " ", "#"}], "]"}]}], "]"}]}], "]"}], "&"}], 
    ",", " ", 
    RowBox[{"propKeys", "[", "obj1", "]"}]}], 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3b862b55-7e2d-49dc-b117-d478d6a3ec2d"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Properties\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"7498c1f4-1fb0-4be2-a6bd-87f7f1a2a88f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceSetProperty", "[", 
    RowBox[{"spec_", ",", " ", 
     RowBox[{"prop_", "\[Rule]", "val_"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"propSet", "[", 
    RowBox[{"spec", ",", " ", "prop", ",", " ", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceSetProperty", "[", 
    RowBox[{"spec_", ",", " ", 
     RowBox[{"prop_", ":>", "val_"}]}], "]"}], ":=", "\n", "\t", 
   RowBox[{"propSetDelayed", "[", 
    RowBox[{"spec", ",", " ", "prop", ",", " ", "val"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfacePropertyValue", "[", 
    RowBox[{"spec_", ",", " ", "prop_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"propGet", "[", 
    RowBox[{"spec", ",", " ", "prop"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceRemoveProperty", "[", 
    RowBox[{"spec_", ",", " ", "prop_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"propRemove", "[", 
    RowBox[{"spec", ",", " ", "prop"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"InterfacePropertyList", "[", "spec_", "]"}], ":=", "\n", "\t", 
  RowBox[{
  "propKeys", "[", "spec", 
   "]"}]}]}], \
"CodeInput",ExpressionUUID->"8bd15b9d-89a4-4a89-98e0-ca834f7c663b"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RegisterInterface\[RightFloor]", "CodeSubsection",
 Evaluatable->True,ExpressionUUID->"a97c745b-5e46-4e4f-a588-6535a492f1be"],

Cell["\<\
\[LeftCeiling]
\tThis function makes it really easy to create a new object and avoid the \
boilerplate
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"cdab5e63-837a-431b-9a17-17db6e1a0088"],

Cell["", "CodeSubsubsection",ExpressionUUID->"cd5eb98a-fb39-44f8-8702-\
5fed6e0cbf0d"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Defaults\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"f3b175d5-bc84-47b3-bdce-82ed2d8aac16"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]defaultConstructorFailureFunction\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"f4e87058-0ee3-41c9-9505-ed68ec54349a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"defaultConstructorFailureFunction", "[", 
    RowBox[{"head_", ",", " ", "args__"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"PackageRaiseException", "[", "\n", "\t\t", 
    RowBox[{
    "Automatic", ",", "\n", "\t\t", 
     "\"\<Failed to build `` object from data ``\>\"", ",", "\n", "\t\t", 
     "head", ",", " ", "\n", "\t\t", 
     RowBox[{"HoldForm", "[", 
      RowBox[{"{", "args", "}"}], "]"}]}], "\n", "\t\t", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "defaultConstructorFailureFunction", "~", "SetAttributes", "~", 
   "HoldAllComplete"}], 
  ";"}]}], "CodeInput",ExpressionUUID->"93698cc9-ed64-419c-beb2-b80db9e1f1d4"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createConstructor\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"a66ee1b7-0cad-4ae2-9962-a39809264f1b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createConstructor", "[", 
   RowBox[{"constructor_", ",", " ", "keys_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"(", "\n", "\t\t", 
   RowBox[{
    RowBox[{
     RowBox[{"constructor", "[", "a_Association", "]"}], ":=", "\n", "\t\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "keys"}], ">", "1"}], "||", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "keys"}], "===", "1"}], "&&", 
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{"a", ",", " ", 
           RowBox[{"keys", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ",", "\n", 
       "\t\t\t\t", "a", ",", "\n", "\t\t\t\t", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"AssociationThread", "[", 
          RowBox[{"keys", ",", " ", 
           RowBox[{"{", "a", "}"}]}], "]"}], ",", " ", 
         RowBox[{"AssociationThread", "::", "idim"}]}], "]"}]}], "\n", 
      "\t\t\t\t", "]"}]}], ";", "\n", "\t\t", 
    RowBox[{
     RowBox[{"constructor", "[", "args__", "]"}], ":=", "\n", "\t\t\t", 
     RowBox[{"Quiet", "[", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{"keys", ",", " ", 
         RowBox[{"{", "args", "}"}]}], "]"}], ",", " ", 
       RowBox[{"AssociationThread", "::", "idim"}]}], "]"}]}]}], "\n", "\t\t",
    ")"}]}]], \
"CodeInput",ExpressionUUID->"5fb9bba5-5e60-4b42-a80b-7382413656c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createAccessorFunctions\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"4a4f4d8c-83ca-480f-9bf7-5dfd712c016c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createAccessorFunctions", "[", 
   RowBox[{"head_", ",", " ", "headQ_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"key", ",", "\n", "\t\t\t", "part"}], "\n", "\t\t\t", "}"}], ",",
     "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"part", "[", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{
          RowBox[{"head", "[", "a_", "]"}], "?", "headQ"}], "]"}], ",", " ", 
        "k_String", ",", " ", "p___"}], "]"}], ":=", "\n", "\t\t\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"res", "=", 
          RowBox[{"Quiet", "[", 
           RowBox[{
            RowBox[{"a", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", " ", "p"}], "]"}], "]"}], ",", " ", 
            RowBox[{"Part", "::", "partd"}]}], "]"}]}], "}"}], ",", " ", 
        RowBox[{"res", "/;", 
         RowBox[{
          RowBox[{"Head", "[", "res", "]"}], "=!=", "Part"}]}]}], "]"}]}], 
     ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"key", "[", 
       RowBox[{
        RowBox[{"HoldPattern", "[", 
         RowBox[{
          RowBox[{"head", "[", "a_", "]"}], "?", "headQ"}], "]"}], ",", " ", 
        "k__"}], "]"}], ":=", "\n", "\t\t\t", 
      RowBox[{"a", "[", "k", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Keys\>\"", "\[Rule]", "key"}], ",", " ", 
       RowBox[{"\"\<Parts\>\"", "\[Rule]", "part"}]}], "|>"}]}]}], "\n", 
   "\t\t", "]"}]}]], \
"CodeInput",ExpressionUUID->"61630904-53bd-4dac-8cc6-28f6d4c229cb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]createMutationHandlers\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"5ad8baef-c8f9-4df9-a8dd-e2972d541c41"],

Cell["\<\
\[LeftCeiling]\t
\tNeed to finish this up so I can have automatic creation of mutation \
handlers for the default case of wanting all basic mutations based on Set and \
stuff
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"f6c88718-e397-4f6d-81db-912ac95f3ef7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createMutationHandlers", "[", "\n", "\t", 
   RowBox[{
   "head_", ",", "\n", "\t", "headQ_", ",", "\n", "\t", "handlers_List"}], 
   "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"<|", "|>"}]}], ",", "\n", "\t\t\t", "selfMutate", ",", "\n", 
      "\t\t\t", "keyMutate", ",", "\n", "\t\t\t", "partMutate", ",", "\n", 
      "\t\t\t", "selfDispatch", ",", "\n", "\t\t\t", "keyDispatch", ",", "\n",
       "\t\t\t", "partDispatch"}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"handlers", ",", " ", "\"\<Self\>\""}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"selfMutate", "[", "\n", "\t\t\t\t", 
          RowBox[{"h_", ",", "\n", "\t\t\t\t", 
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"head", "[", "a_", "]"}], "?", "headQ"}], "]"}], ",", 
           "\n", "\t\t\t\t", "args___"}], "\n", "\t\t\t\t", "]"}], ":=", "\n",
          "\t\t\t\t", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"core", "=", "a"}], "}"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{
              RowBox[{"core", "[", "\"\<Value\>\"", "]"}], ",", " ", "args"}],
              "]"}], ";", "\n", "\t\t\t\t\t", 
            RowBox[{"head", "@", "core"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], 
        ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"selfDispatch", "[", "h_", "]"}], ":=", "\n", "\t\t\t\t", 
         RowBox[{"Function", "[", 
          RowBox[{"Null", ",", " ", 
           RowBox[{"selfMutate", "[", 
            RowBox[{"h", ",", " ", "##"}], "]"}], ",", " ", 
           "HoldAllComplete"}], "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"res", "[", "\"\<Self\>\"", "]"}], "=", "selfDispatch"}], 
        ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"handlers", ",", " ", "\"\<Keys\>\""}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"keyMutate", "[", "\n", "\t\t\t\t", 
          RowBox[{"h_", ",", "\n", "\t\t\t\t", 
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"head", "[", "a_", "]"}], "?", "headQ"}], "]"}], ",", 
           "\n", "\t\t\t\t", 
           RowBox[{"{", "k__", "}"}], ",", "\n", "\t\t\t\t", "args___"}], 
          "\n", "\t\t\t\t", "]"}], ":=", "\n", "\t\t\t\t", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"core", "=", "a"}], "}"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{
              RowBox[{"core", "[", "k", "]"}], ",", " ", "args"}], "]"}], ";",
             "\n", "\t\t\t\t\t", 
            RowBox[{"head", "@", "core"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], 
        ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"keyDispatch", "[", "h_", "]"}], ":=", "\n", "\t\t\t\t", 
         RowBox[{"Function", "[", 
          RowBox[{"Null", ",", " ", 
           RowBox[{"keyMutate", "[", 
            RowBox[{"h", ",", " ", "##"}], "]"}], ",", " ", 
           "HoldAllComplete"}], "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"res", "[", "\"\<Keys\>\"", "]"}], "=", "keyDispatch"}], 
        ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"handlers", ",", " ", "\"\<Parts\>\""}], "]"}], ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"partMutate", "[", "\n", "\t\t\t\t", 
          RowBox[{"h_", ",", "\n", "\t\t\t\t", 
           RowBox[{"HoldPattern", "[", 
            RowBox[{
             RowBox[{"head", "[", "a_", "]"}], "?", "headQ"}], "]"}], ",", 
           "\n", "\t\t\t\t", 
           RowBox[{"{", "p__", "}"}], ",", "\n", "\t\t\t\t", "args___"}], 
          "\n", "\t\t\t\t", "]"}], ":=", "\n", "\t\t\t\t", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"core", "=", "a"}], "}"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{"h", "[", 
             RowBox[{
              RowBox[{"core", "[", 
               RowBox[{"[", "p", "]"}], "]"}], ",", " ", "args"}], "]"}], ";",
             "\n", "\t\t\t\t\t", 
            RowBox[{"head", "@", "core"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], 
        ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"partDispatch", "[", "h_", "]"}], ":=", "\n", "\t\t\t\t", 
         RowBox[{"Function", "[", 
          RowBox[{"Null", ",", " ", 
           RowBox[{"partMutate", "[", 
            RowBox[{"h", ",", " ", "##"}], "]"}], ",", " ", 
           "HoldAllComplete"}], "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"res", "[", "\"\<Parts\>\"", "]"}], "=", "partDispatch"}], 
        ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", "res"}]}], "\n", 
   "\t\t", "]"}]}], "\n", 
 RowBox[{"\t\t\t"}]}], \
"CodeInput",ExpressionUUID->"009d098b-314f-4c5c-b077-93c5d9089663"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]RegisterInterface\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"47264a25-85e3-44e2-a7be-2df5a5c83d7e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RegisterInterface", "]"}], "=", "\n", "\t", 
   RowBox[{"{", "\n", "\t\t", 
    RowBox[{
     RowBox[{"\"\<Version\>\"", "\[Rule]", "1"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Atomic\>\"", "\[Rule]", "True"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Validator\>\"", "\[Rule]", "Automatic"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Constructor\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<MutationHandler\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<MutationFunctions\>\"", "\[Rule]", "None"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<AccessorFunctions\>\"", "\[Rule]", "None"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<NormalFunction\>\"", "\[Rule]", "Automatic"}], ",", "\n", 
     "\t\t", 
     RowBox[{"\"\<Formatted\>\"", "\[Rule]", "True"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<Icon\>\"", "\[Rule]", "None"}], ",", "\n", "\t\t", 
     RowBox[{"\"\<DefaultMethods\>\"", "\[Rule]", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
       "Keys", ",", " ", "SetProperty", ",", " ", "PropertyValue", ",", "\n", 
        "\t\t\t", "RemoveProperty", ",", " ", "PropertyList"}], "\n", 
       "\t\t\t", "}"}]}]}], "\n", "\t\t", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RegisterInterface", "[", "\n", "\t", 
    RowBox[{"head_", ",", "\n", "\t", "keys_", ",", "\n", "\t", 
     RowBox[{"ops", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], ":=", "\n",
    "\t", 
   RowBox[{"Module", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"entryQ", "=", 
        RowBox[{"True", "@", 
         RowBox[{"OptionValue", "[", "\"\<Atomic\>\"", "]"}]}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"ctor", "=", 
        RowBox[{"OptionValue", "[", "\"\<Constructor\>\"", "]"}]}], ",", "\n",
        "\t\t\t", "constructor", ",", "\n", "\t\t\t", 
       RowBox[{"ctorFail", "=", "defaultConstructorFailureFunction"}], ",", 
       "\n", "\t\t\t", 
       RowBox[{"ctorFailOnUndef", "=", "False"}], ",", "\n", "\t\t\t", 
       RowBox[{"vdtor", "=", 
        RowBox[{"OptionValue", "[", "\"\<Validator\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", "objQ", ",", "\n", "\t\t\t", 
       RowBox[{"version", "=", 
        RowBox[{"OptionValue", "[", "\"\<Version\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"muh", "=", 
        RowBox[{"OptionValue", "[", "\"\<MutationHandler\>\"", "]"}]}], ",", 
       "\n", "\t\t\t", "mutationHandler", ",", "\n", "\t\t\t", 
       RowBox[{"mud", "=", 
        RowBox[{"OptionValue", "[", "\"\<MutationFunctions\>\"", "]"}]}], ",",
        "\n", "\t\t\t", 
       RowBox[{"acc", "=", 
        RowBox[{"OptionValue", "[", "\"\<AccessorFunctions\>\"", "]"}]}], ",",
        "\n", "\t\t\t", 
       RowBox[{"norm", "=", "\n", "\t\t\t\t", 
        RowBox[{"Replace", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<NormalFunction\>\"", "]"}], ",", 
          "\n", "\t\t\t\t\t", 
          RowBox[{"Automatic", "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"KeyDrop", "[", 
              RowBox[{"#", ",", " ", "\"\<Version\>\""}], "]"}], "&"}], 
            ")"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"format", "=", 
        RowBox[{"OptionValue", "[", "\"\<Formatted\>\"", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"icon", "=", 
        RowBox[{"OptionValue", "[", "\"\<Icon\>\"", "]"}]}]}], "\n", "\t\t\t",
       "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"iRegisterInterfaceEntryQ", "[", "\n", "\t\t\t", 
       RowBox[{"head", ",", "\n", "\t\t\t", 
        RowBox[{"!", "entryQ"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"vdtor", "===", "Automatic"}], ",", " ", 
        RowBox[{"vdtor", "=", "objQ"}]}], "]"}], ";", "\n", "\t\t", 
      RowBox[{"iRegisterInterfaceValidator", "[", 
       RowBox[{"head", ",", " ", "keys", ",", " ", "vdtor"}], "]"}], ";", 
      "\n", "\t\t", 
      RowBox[{"Which", "[", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"ctor", "===", "Automatic"}], ",", "\n", "\t", "\t\t\t", 
        RowBox[{
         RowBox[{"createConstructor", "[", 
          RowBox[{"constructor", ",", " ", "keys"}], "]"}], ";", "\n", "\t", 
         "\t\t\t", 
         RowBox[{"ctor", "=", "constructor"}]}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "ctor", "]"}], "===", "Symbol"}], "&&", 
         RowBox[{
          RowBox[{"DownValues", "[", "ctor", "]"}], "\[Equal]", 
          RowBox[{"{", "}"}]}]}], ",", "\n", "\t\t\t\t", 
        RowBox[{"createConstructor", "[", 
         RowBox[{"ctor", ",", " ", "keys"}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"AssociationQ", "@", "ctor"}], ",", "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"ctorFail", "=", "\n", "\t\t\t\t\t", 
          RowBox[{"Lookup", "[", 
           RowBox[{
           "ctor", ",", " ", "\"\<FailureFunction\>\"", ",", " ", 
            "ctorFail"}], "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"ctorFailOnUndef", "=", "\n", "\t\t\t\t\t", 
          RowBox[{"Lookup", "[", 
           RowBox[{
           "ctor", ",", " ", "\"\<FailOnUndefined\>\"", ",", " ", 
            "ctorFailOnUndef"}], "]"}]}], ";", "\n", "\t\t\t\t", 
         RowBox[{"ctor", "=", 
          RowBox[{"ctor", "[", "\"\<Function\>\"", "]"}]}]}]}], "\n", 
       "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"iRegisterInterfaceConstructor", "[", "\n", "\t\t\t", 
       RowBox[{
       "head", ",", "\n", "\t\t\t", "version", ",", "\n", "\t\t\t", "ctor", 
        ",", "\n", "\t\t\t", "ctorFail", ",", "\n", "\t\t\t", 
        "ctorFailOnUndef"}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mud", "=!=", "None"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mud", "===", "Automatic"}], ",", " ", 
           RowBox[{"mud", "=", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Self\>\"", ",", " ", "\"\<Keys\>\"", ",", " ", 
              "\"\<Parts\>\""}], "}"}]}]}], "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ListQ", "@", "mud"}], ",", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"mud", "=", 
             RowBox[{"createMutationHandlers", "[", 
              RowBox[{"head", ",", " ", "vdtor", ",", " ", "mud"}], "]"}]}], 
            ";"}]}], "\n", "\t\t\t\t", "]"}], ";", "\n", "\t\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"muh", "===", "Automatic"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"muh", "=", "mutationHandler"}]}], "\n", "\t\t\t\t", "]"}],
          ";", "\n", "\t\t\t", 
         RowBox[{"iRegisterInterfaceMutationHandler", "[", "\n", "\t\t\t\t", 
          RowBox[{
          "head", ",", "\n", "\t\t\t\t", "mutationHandler", ",", "\n", 
           "\t\t\t\t", "mud"}], "\n", "\t\t\t\t", "]"}]}]}], "\n", "\t\t\t", 
       "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"acc", "=!=", "None"}], ",", "\n", "\t\t\t", 
        RowBox[{"Which", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"acc", "===", "Automatic"}], ",", "\n", "\t", "\t\t\t\t", 
          RowBox[{"iRegisterInterfaceAccessor", "[", 
           RowBox[{"head", ",", " ", 
            RowBox[{"createAccessorFunctions", "[", 
             RowBox[{"head", ",", " ", "vdtor"}], "]"}]}], "]"}], ",", "\n", 
          "\t\t\t\t", 
          RowBox[{"acc", "===", "\"\<Keys\>\""}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"iRegisterInterfaceAccessor", "[", 
           RowBox[{"head", ",", " ", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"KeyDrop", "[", "\"\<Parts\>\"", "]"}], "@", 
             RowBox[{"createAccessorFunctions", "[", 
              RowBox[{"head", ",", " ", "vdtor"}], "]"}]}]}], "\n", 
           "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
          RowBox[{"acc", "===", "\"\<Parts\>\""}], ",", "\n", "\t\t\t\t\t", 
          RowBox[{"iRegisterInterfaceAccessor", "[", 
           RowBox[{"head", ",", " ", "\n", "\t\t\t\t\t\t", 
            RowBox[{
             RowBox[{"KeyDrop", "[", "\"\<Keys\>\"", "]"}], "@", 
             RowBox[{"createAccessorFunctions", "[", 
              RowBox[{"head", ",", " ", "vdtor"}], "]"}]}]}], "\n", 
           "\t\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", "True", ",", "\n", 
          "\t\t\t\t\t", 
          RowBox[{"iRegisterInterfaceAccessor", "[", 
           RowBox[{"head", ",", " ", "acc"}], "]"}]}], "\n", "\t\t\t\t", 
         "]"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"norm", "=!=", "None"}], ",", "\n", "\t\t\t", 
        RowBox[{"iRegisterInterfaceNormalForm", "[", 
         RowBox[{"head", ",", " ", "norm"}], "]"}]}], "\n", "\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{"format", ",", "\n", "\t\t\t", 
        RowBox[{"iRegisterInterfaceFormatting", "[", 
         RowBox[{"head", ",", " ", "icon"}], "]"}]}], "\n", "\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"iRegisterDefaultInterfaceMethods", "[", 
       RowBox[{"head", ",", " ", 
        RowBox[{"OptionValue", "[", "\"\<DefaultMethods\>\"", "]"}]}], "]"}], 
      ";", "\n", "\t\t", "head"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"aa5699e1-fbaa-4cd7-b528-2e6d2f5ede97"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$InterfaceData\[RightFloor]", "CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"0a4262d1-1d80-4bb1-bab0-6831aece30ea"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]$InterfaceData\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b63cb7c9-a30c-44b7-9e96-0c2a314dd1fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "@", "$InterfaceData"}]}], ",", "\n", "\t", 
    RowBox[{"$InterfaceData", "=", 
     RowBox[{
     "Language`NewExpressionStore", "[", "\"\<<ObjectDataStore>\>\"", 
      "]"}]}]}], "\n", "\t", "]"}], 
  ";"}]], "CodeInput",ExpressionUUID->"0ed2fb3d-b9a1-4bfc-abf0-f8efaad8c224"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceConstructor\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3e2b08b4-9a48-4f0c-9d74-a21f81b72e86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceConstructor", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceConstructor", "[", "head_", "]"}], "=", "fn_"}], ")"}],
    ":=", "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Constructor\>\"", ",", " ", "fn"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceConstructor", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Constructor\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"4bfa4556-0038-47a8-8dc7-cd1f3ab3367f"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceValidator\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"aeedee18-4eae-448b-9174-a6acf9004a72"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceValidator", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceValidator", "[", "head_", "]"}], "=", "fn_"}], ")"}], ":=",
    "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Validator\>\"", ",", " ", "fn"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceValidator", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Validator\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"b95333ba-fba9-40ff-bb55-a632793a2d7c"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceCheckValid\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"97d789ad-f267-436b-8267-6ce379e94433"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceCheckValid", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceCheckValid", "[", "head_", "]"}], "=", "fn_"}], ")"}], 
   ":=", "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<CheckValid\>\"", ",", " ", "fn"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceCheckValid", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<CheckValid\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"a63a5aa4-b9df-4d7e-baf3-76cfcc3727ac"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceCheckInvalid\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"d0be20e3-1992-4451-b564-fbcbffef404b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceCheckInvalid", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceCheckInvalid", "[", "head_", "]"}], "=", "fn_"}], 
    ")"}], ":=", "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<CheckInvalid\>\"", ",", " ", "fn"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceCheckInvalid", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<CheckInvalid\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"9e306cc6-cbc5-4cfb-bb61-351944b93cda"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceSetValid\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"abf9ef54-1a9c-4b8b-9ae4-e98b7eb4c767"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceSetValid", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceSetValid", "[", "head_", "]"}], "=", "fn_"}], ")"}], ":=",
    "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<SetValid\>\"", ",", " ", "fn"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceSetValid", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<SetValid\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"b4afae36-8f88-4aa0-8479-8c5d1458c477"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceMethods\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"7eabcafd-5889-4c46-a6f1-14299e22de6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceMethods", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceMethods", "[", "head_", "]"}], "=", "meths_"}], ")"}], 
   ":=", "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Methods\>\"", ",", " ", "meths"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceMethods", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"#", "===", "Null"}], ",", " ", 
       RowBox[{"<|", "|>"}], ",", " ", "#"}], "]"}], "&"}], "@", 
    RowBox[{"$InterfaceData", "@", 
     RowBox[{"\"\<get\>\"", "[", 
      RowBox[{"head", ",", " ", "\"\<Methods\>\""}], "]"}]}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"0ddc70e0-fe4c-42d6-9624-ea1fffcf3636"]\

}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]InterfaceAttributes\[RightFloor]", "CodeSubsubsubsection",
 
 Evaluatable->True,ExpressionUUID->"8b63d599-b665-47d0-8916-f464b500c8c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InterfaceAttributes", "/:", "\n", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"InterfaceAttributes", "[", "head_", "]"}], "=", "attrs_"}], 
    ")"}], ":=", "\n", "\t\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<put\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Attributes\>\"", ",", " ", "attrs"}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"InterfaceAttributes", "[", "head_", "]"}], ":=", "\n", "\t", 
   RowBox[{"$InterfaceData", "@", 
    RowBox[{"\"\<get\>\"", "[", 
     RowBox[{"head", ",", " ", "\"\<Attributes\>\""}], "]"}]}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"387410dd-406f-4ed0-b7ff-4f6abba2b41b"]\

}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceEntryQ\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"9313c5a8-6ab3-412c-9539-dab7b612e213"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterInterfaceEntryQ", "[", 
   RowBox[{"head_", ",", " ", "entryQ_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"checkInvalid", "=", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", "entryQ"}], ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldNotValidQ", ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldEntryQ"}], "\n", "\t\t\t\t\t", "]"}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"checkValid", "=", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", "entryQ"}], ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldValidQ", ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldNoEntryQ"}], "\n", "\t\t\t\t\t", "]"}]}], ",", 
      "\n", "\t\t\t", 
      RowBox[{"setValid", "=", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TrueQ", "@", "entryQ"}], ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldSetValid", ",", "\n", "\t\t\t\t\t", 
         "System`Private`HoldSetNoEntry"}], "\n", "\t\t\t\t\t", "]"}]}]}], 
     "\n", "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"InterfaceCheckInvalid", "[", "head", "]"}], "=", 
      "checkInvalid"}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"InterfaceCheckValid", "[", "head", "]"}], "=", "checkValid"}], 
     ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"InterfaceSetValid", "[", "head", "]"}], "=", "setValid"}], 
     ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"dcd693bc-bb43-40a1-bdb1-aa15e4040b45"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceValidator\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"ae27f68f-9e5d-487e-ba58-efc68d395c27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterInterfaceValidator", "[", "\n", "\t", 
   RowBox[{
   "head_", ",", "\n", "\t", "keys_", ",", "\n", "\t", "testFunction_"}], 
   "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{"checkValid", "=", 
      RowBox[{"InterfaceCheckValid", "[", "head", "]"}]}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{"(*", " ", 
     RowBox[{"Test", " ", "if", " ", "object", " ", "is", " ", "object"}], 
     " ", "*)"}], "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"InterfaceValidator", "[", "head", "]"}], "=", "testFunction"}],
      ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"testFunction", "[", 
       RowBox[{"d_Association", "?", "AssociationQ"}], "]"}], ":=", "\n", 
      "\t\t\t", 
      RowBox[{"AllTrue", "[", 
       RowBox[{"keys", ",", " ", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{"d", ",", " ", "#"}], "]"}], "&"}]}], "]"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{"testFunction", "/:", "\n", "\t\t\t", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"testFunction", "[", 
        RowBox[{
         RowBox[{"head", "[", "a_Association", "]"}], "?", "checkValid"}], 
        "]"}], "]"}], ":=", "\n", "\t\t\t", 
      RowBox[{"testFunction", "[", "a", "]"}]}], ";", "\n", "\t\t", 
     RowBox[{
      RowBox[{"testFunction", "[", "___", "]"}], ":=", "False"}], ";"}]}], 
   "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"d7b671b1-5a59-4bde-9e13-a0b4c14b91eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceConstructor\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"2fdf4cb3-c88d-49be-8a5f-a313dd512657"],

Cell["\<\
\[LeftCeiling]
\tNeed to decide whether it\[CloseCurlyQuote]s best to leave unevaluated if \
the constructor returns an Association or not...
\[RightFloor]\
\>", "Text",
 Evaluatable->True,ExpressionUUID->"febfbbfe-da08-4fa3-8290-4d27cb7ec349"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterInterfaceConstructor", "[", "\n", "\t", 
   RowBox[{
   "head_", ",", "\n", "\t", "version_", ",", "\n", "\t", "constructor_", ",",
     "\n", "\t", "failureFunction_", ",", "\n", "\t", 
    "failOnUndefinedArguments_"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"validator", "=", 
       RowBox[{"InterfaceValidator", "[", "head", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"checkInvalid", "=", 
       RowBox[{"InterfaceCheckInvalid", "[", "head", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"setValid", "=", 
       RowBox[{"InterfaceSetValid", "[", "head", "]"}]}]}], "\n", "\t\t\t", 
     "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"InterfaceConstructor", "[", "head", "]"}], "=", 
      "constructor"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Constructor", " ", "DownValue", " ", "on", " ", "the", " ", "object"}],
       " ", "*)"}], "\n", "\t\t", 
     RowBox[{"head", "//", "ClearAll"}], ";", "\n", "\t\t", 
     RowBox[{"head", "~", "SetAttributes", "~", "HoldAllComplete"}], ";", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"head", "[", "args___", "]"}], "?", "checkInvalid"}], ":=", 
      "\n", "\t\t\t", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", "=", 
          RowBox[{"constructor", "[", "args", "]"}]}], "}"}], ",", "\n", 
        "\t\t\t\t", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AssociationQ", "@", "a"}], ",", "\n", "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"a2", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"a", ",", " ", 
                 RowBox[{"\"\<Version\>\"", "\[Rule]", "version"}]}], "]"}]}],
               "}"}], ",", "\n", "\t", "\t\t\t\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"TrueQ", "@", 
                RowBox[{"validator", "@", "a2"}]}], ",", "\n", "\t", 
               "\t\t\t\t\t\t", 
               RowBox[{"setValid", "@", 
                RowBox[{"head", "[", "a2", "]"}]}], ",", "\n", "\t", 
               "\t\t\t\t\t\t", 
               RowBox[{"failureFunction", "[", 
                RowBox[{"head", ",", " ", "args"}], "]"}]}], "\n", 
              "\t\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t\t", "]"}], ",", 
           "\n", "\t\t\t\t\t", 
           RowBox[{"failureFunction", "[", 
            RowBox[{"head", ",", " ", "args"}], "]"}]}], "\n", "\t\t\t\t\t", 
          "]"}], "/;", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"TrueQ", "[", "failOnUndefinedArguments", "]"}], "||", 
           RowBox[{"AssociationQ", "[", "a", "]"}]}], ")"}]}]}], "\n", 
       "\t\t\t\t", "]"}]}], ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"98569ae3-562e-43a0-bb1e-bb0553a933ce"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceMutationHandler\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"561dfaa3-38f4-48fe-9dcd-cf69bc231258"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$noArgMutations", "=", "\n", "\t", 
   RowBox[{"Alternatives", "@@", "\n", "\t\t", 
    RowBox[{"{", 
     RowBox[{"Unset", ",", " ", "Increment", ",", " ", "Decrement"}], 
     "}"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"aa6aae53-597c-4759-803d-ea46ddeda13a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$oneArgMutations", "=", "\n", "\t", 
   RowBox[{"Alternatives", "@@", "\n", "\t\t", 
    RowBox[{"{", "\n", "\t\t\t\t", 
     RowBox[{
     "Set", ",", " ", "SetDelayed", ",", "\n", "\t\t\t\t", "AddTo", ",", " ", 
      "SubtractFrom", ",", " ", "TimesBy", ",", " ", "DivideBy", ",", "\n", 
      "\t", "\t", "\t\t", "AppendTo", ",", " ", "PrependTo", ",", "\n", "\t", 
      "\t", "\t\t", "AssociateTo", ",", " ", "KeyDropFrom"}], "\n", 
     "\t\t\t\t", "}"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c352bd6b-acec-42cd-a87f-f5aa9a026739"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterInterfaceMutationHandler", "[", "\n", "\t", 
   RowBox[{
   "head_", ",", "\n", "\t", "func_", ",", "\n", "\t", "dispatcher_"}], "\n", 
   "\t", "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"oQ", "=", 
       RowBox[{"InterfaceValidator", "[", "head", "]"}]}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"symQ", "=", 
       RowBox[{"Unique", "[", "symbolQ", "]"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"oA", "=", "$oneArgMutations"}], ",", "\n", "\t\t\t", 
      RowBox[{"nA", "=", "$noArgMutations"}], ",", "\n", "\t\t\t", 
      RowBox[{"d", "=", "\n", "\t\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AssociationQ", "@", "dispatcher"}]}], ",", " ", "\n", "\t",
          "\t\t\t\t", 
         RowBox[{"<|", 
          RowBox[{"\"\<Keys\>\"", "->", "dispatcher"}], "|>"}], ",", "\n", 
         "\t\t\t\t\t", "dispatcher"}], "\n", "\t\t\t\t\t", "]"}]}]}], "\n", 
     "\t\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"symQ", "~", "SetAttributes", "~", 
      RowBox[{"{", 
       RowBox[{"Temporary", ",", " ", "HoldFirst"}], "}"}]}], ";", "\n", 
     "\t\t", 
     RowBox[{
      RowBox[{"symQ", "[", "sym_", "]"}], ":=", "\n", "\t\t\t", 
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"OwnValues", "[", "sym", "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"_", "\[RuleDelayed]", 
          RowBox[{"_head", "?", "oQ"}]}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"func", " ", "//", " ", "ClearAll"}], ";", "\n", "\t\t", 
     RowBox[{"func", "~", "SetAttributes", "~", "HoldAllComplete"}], ";", 
     "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"d", ",", " ", "\"\<Self\>\""}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"subdispatch", "=", 
            RowBox[{"dispatcher", "[", "\"\<Self\>\"", "]"}]}], "}"}], ",", 
          "\n", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"func", "[", "\n", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"h", ":", " ", "oA"}], ")"}], "[", 
              RowBox[{
               RowBox[{"obj_Symbol", "?", "symQ"}], ",", " ", "val_"}], "]"}],
              "\n", "\t", "\t\t\t\t", "]"}], " ", ":=", "\n", "\t\t\t\t\t", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"res", "=", 
                RowBox[{
                 RowBox[{"subdispatch", "[", "h", "]"}], "[", 
                 RowBox[{"obj", ",", " ", "val"}], "]"}]}], "}"}], ",", "\n", 
              "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"obj", "=", "res"}], ")"}], "/;", 
               RowBox[{
                RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
             "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t", "\t\t\t", 
           RowBox[{
            RowBox[{"func", "[", "\n", "\t", "\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"h", " ", ":", " ", "nA"}], ")"}], "[", 
              RowBox[{"obj_Symbol", "?", "symQ"}], "]"}], "\n", "\t", 
             "\t\t\t\t", "]"}], " ", ":=", "\n", "\t\t\t\t\t", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"res", "=", 
                RowBox[{
                 RowBox[{"subdispatch", "[", "h", "]"}], "[", "obj", "]"}]}], 
               "}"}], ",", "\n", "\t\t\t\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"obj", "=", "res"}], ")"}], "/;", 
               RowBox[{
                RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
             "\t\t\t\t\t\t", "]"}]}], ";"}]}], "\n", "\t", "\t\t\t", "]"}], 
        ";"}]}], "\n", "\t", "\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"d", ",", " ", "\"\<Keys\>\""}], "]"}], ",", "\n", "\t\t\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"subdispatch", "=", 
           RowBox[{"dispatcher", "[", "\"\<Keys\>\"", "]"}]}], "}"}], ",", 
         "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"func", "[", "\n", "\t\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", ":", " ", "oA"}], ")"}], "[", 
             RowBox[{
              RowBox[{
               RowBox[{"obj_Symbol", "?", "symQ"}], "[", "attr__", "]"}], ",",
               " ", "val_"}], "]"}], "\n", "\t", "\t", "\t\t\t", "]"}], " ", ":=",
            "\n", "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"res", "=", 
               RowBox[{
                RowBox[{"subdispatch", "[", "h", "]"}], "[", 
                RowBox[{"obj", ",", " ", 
                 RowBox[{"{", "attr", "}"}], ",", " ", "val"}], "]"}]}], 
              "}"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"obj", "=", "res"}], ")"}], "/;", 
              RowBox[{
               RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t", "\t\t\t", 
          RowBox[{
           RowBox[{"func", "[", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", " ", ":", " ", "nA"}], ")"}], "[", 
             RowBox[{
              RowBox[{"obj_Symbol", "?", "symQ"}], "[", "attr__", "]"}], 
             "]"}], "\n", "\t", "\t\t\t\t", "]"}], " ", ":=", "\n", 
           "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"res", "=", 
               RowBox[{
                RowBox[{"subdispatch", "[", "h", "]"}], "[", 
                RowBox[{"obj", ",", " ", 
                 RowBox[{"{", "attr", "}"}]}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"obj", "=", "res"}], ")"}], "/;", 
              RowBox[{
               RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ";"}]}], "\n", "\t\t\t\t", "]"}]}], "\n",
       "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"d", ",", " ", "\"\<Parts\>\""}], "]"}], ",", "\n", "\t\t\t", 
       
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"subdispatch", "=", 
           RowBox[{"dispatcher", "[", "\"\<Parts\>\"", "]"}]}], "}"}], ",", 
         "\n", "\t", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"func", "[", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", ":", " ", "oA"}], ")"}], "[", 
             RowBox[{
              RowBox[{
               RowBox[{"obj_Symbol", "?", "symQ"}], "[", 
               RowBox[{"[", "part__", "]"}], "]"}], ",", " ", "val_"}], "]"}],
             "\n", "\t\t\t\t\t", "]"}], " ", ":=", "\n", "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"res", "=", 
               RowBox[{
                RowBox[{"subdispatch", "[", "h", "]"}], "[", 
                RowBox[{"obj", ",", " ", 
                 RowBox[{"{", "part", "}"}], ",", " ", "val"}], "]"}]}], 
              "}"}], ",", "\n", "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"obj", "=", "res"}], ")"}], "/;", 
              RowBox[{
               RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"func", "[", "\n", "\t", "\t\t\t\t", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", " ", ":", " ", "nA"}], ")"}], "[", 
             RowBox[{
              RowBox[{"obj_Symbol", "?", "symQ"}], "[", 
              RowBox[{"[", "part__", "]"}], "]"}], "]"}], "\n", "\t", 
            "\t\t\t\t", "]"}], " ", ":=", "\n", "\t\t\t\t\t", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"res", "=", 
               RowBox[{
                RowBox[{"subdispatch", "[", "h", "]"}], "[", 
                RowBox[{"obj", ",", " ", 
                 RowBox[{"{", "part", "}"}]}], "]"}]}], "}"}], ",", "\n", 
             "\t\t\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"obj", "=", "res"}], ")"}], "/;", 
              RowBox[{
               RowBox[{"Head", "[", "res", "]"}], "===", "head"}]}]}], "\n", 
            "\t\t\t\t\t\t", "]"}]}], ";"}]}], "\n", "\t", "\t\t\t", "]"}]}], 
      "\n", "\t\t\t", "]"}], ";", "\n", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "fallthrough", " ", "to", " ", "get", " ", "normal", " ", "behavior", 
       " ", "back"}], " ", "*)"}], "\n", "\t\t", 
     RowBox[{
      RowBox[{"func", "[", "___", "]"}], " ", ":=", " ", 
      "Language`MutationFallthrough"}], ";", "\n", "\t\t", 
     RowBox[{"Language`SetMutationHandler", "[", 
      RowBox[{"head", ",", " ", "func"}], "]"}], ";"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"11082aff-dea4-437b-a8f2-8bb134b14d00"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceMethod\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"bef880c4-ac9e-4acb-8752-212e5fb247c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"iRegisterInterfaceMethod", "~", "SetAttributes", "~", "HoldRest"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iRegisterInterfaceMethod", "[", "\n", "\t", 
    RowBox[{
    "head_", ",", "\n", "\t", "methodName_", ",", "\n", "\t", "name_", ",", 
     "\n", "\t", "args___", ",", "\n", "\t", "def_"}], "\n", "\t", "]"}], ":=",
    "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"mn", "=", "methodName"}], ",", "\n", "\t\t\t", 
       RowBox[{"valid", "=", 
        RowBox[{"InterfaceValidator", "[", "head", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"meths", "=", 
        RowBox[{"InterfaceMethods", "[", "head", "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"noop", "=", 
        RowBox[{"Unevaluated", "@", "name"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"InterfaceMethods", "[", "head", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"meths", "===", "Null"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"<|", 
          RowBox[{"mn", "\[Rule]", "True"}], "|>"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Append", "[", 
          RowBox[{"meths", ",", " ", 
           RowBox[{"mn", "\[Rule]", "True"}]}], "]"}]}], "\n", "\t\t\t\t", 
        "]"}]}], ";", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"noop_head", "?", "valid"}], "[", 
        RowBox[{"mn", "[", "args", "]"}], "]"}], ":=", "\n", "\t\t\t", 
       "def"}], ";", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"noop_head", "?", "valid"}], "[", "mn", "]"}], "[", "args", 
        "]"}], ":=", "\n", "\t\t\t", "def"}], ";"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"7926a4a6-ee82-4a42-b33b-9b74576e9ed9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InterfaceMethod", "/:", "\n", "\t", 
   RowBox[{"(", "\n", "\t\t", 
    RowBox[{
     RowBox[{"InterfaceMethod", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Verbatim", "[", "Pattern", "]"}], "[", 
         RowBox[{"name_", ",", " ", 
          RowBox[{
           RowBox[{"Verbatim", "[", "Blank", "]"}], "[", "head_", "]"}]}], 
         "]"}], "[", "method_", "]"}], "[", "args___", "]"}], "\n", "\t\t\t", 
      "]"}], ":=", "def_"}], "\n", "\t\t", ")"}], ":=", "\n", "\t\t", 
   RowBox[{"iRegisterInterfaceMethod", "[", 
    RowBox[{
    "head", ",", " ", "method", ",", " ", "name", ",", " ", "args", ",", " ", 
     "def"}], "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"b4921d69-d039-4c9f-970b-eaa9ef722117"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceAttribute\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"33e90bb3-08d6-4396-ae55-ccf059ce24be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "iRegisterInterfaceAttribute", "~", "SetAttributes", "~", "HoldRest"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"iRegisterInterfaceAttribute", "[", "\n", "\t", 
    RowBox[{
    "head_", ",", "\n", "\t", "attr_", ",", "\n", "\t", "name_", ",", "\n", 
     "\t", "def_"}], "\n", "\t", "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"mn", "=", "attr"}], ",", "\n", "\t\t\t", 
       RowBox[{"valid", "=", 
        RowBox[{"InterfaceValidator", "[", "head", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"meths", "=", 
        RowBox[{"InterfaceAttributes", "[", "head", "]"}]}], ",", "\n", 
       "\t\t\t", 
       RowBox[{"noop", "=", 
        RowBox[{"Unevaluated", "@", "name"}]}]}], "\n", "\t\t\t", "}"}], ",", 
     "\n", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"InterfaceAttributes", "[", "head", "]"}], "=", "\n", "\t\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"meths", "===", "Null"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"<|", 
          RowBox[{"mn", "\[Rule]", "True"}], "|>"}], ",", "\n", "\t\t\t\t", 
         RowBox[{"Append", "[", 
          RowBox[{"meths", ",", " ", 
           RowBox[{"mn", "\[Rule]", "True"}]}], "]"}]}], "\n", "\t\t\t\t", 
        "]"}]}], ";", " ", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"noop_head", "?", "valid"}], "[", "mn", "]"}], ":=", "\n", 
       "\t\t\t", "def"}], ";"}]}], "\n", "\t\t", "]"}]}], 
  ";"}]}], "CodeInput",ExpressionUUID->"6e9dadea-8e12-4b8f-81c3-626dc69243ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InterfaceAttribute", "/:", "\n", "\t", 
   RowBox[{"(", "\n", "\t\t", 
    RowBox[{
     RowBox[{"InterfaceAttribute", "[", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Verbatim", "[", "Pattern", "]"}], "[", 
        RowBox[{"name_", ",", " ", 
         RowBox[{
          RowBox[{"Verbatim", "[", "Blank", "]"}], "[", "head_", "]"}]}], 
        "]"}], "[", "attr_", "]"}], "\n", "\t\t\t", "]"}], ":=", "def_"}], 
    "\n", "\t\t", ")"}], ":=", "\n", "\t\t", 
   RowBox[{"iRegisterInterfaceAttribute", "[", 
    RowBox[{"head", ",", " ", "attr", ",", " ", "name", ",", " ", "def"}], 
    "]"}]}], ";"}]], \
"CodeInput",ExpressionUUID->"9bbe8775-2f26-495b-afa8-f76f0ed7e9f8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceAccessor\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"3693ddb0-6a0e-4bbc-92ee-bb0a793527f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"iRegisterInterfaceAccessor", "[", 
    RowBox[{"head_", ",", " ", "dispatcher_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{
       RowBox[{"ea", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"AssociationQ", "@", "dispatcher"}]}], ",", " ", 
          RowBox[{"<|", 
           RowBox[{"\"\<Keys\>\"", "\[Rule]", "dispatcher"}], "|>"}], ",", 
          " ", "dispatcher"}], "]"}]}], ",", "\n", "\t\t\t", 
       RowBox[{"valid", "=", 
        RowBox[{"InterfaceValidator", "[", "head", "]"}]}]}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"ea", ",", " ", "\"\<Keys\>\""}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"lookup", "=", 
             RowBox[{"dispatcher", "[", "\"\<Keys\>\"", "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"obj_head", "?", "valid"}], "[", 
              RowBox[{"attr_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"KeyExistsQ", "[", 
                   RowBox[{
                    RowBox[{"InterfaceMethods", "[", "head", "]"}], ",", " ", 
                    "#"}], "]"}]}], "&"}], ")"}]}], "]"}], ":=", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"lookup", "[", 
              RowBox[{"obj", ",", " ", "attr"}], "]"}]}], ";", "\n", "\t", 
            "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"obj_head", "?", "valid"}], "[", 
              RowBox[{"attr1_", ",", " ", "attrs__"}], "]"}], ":=", "\n", 
             "\t\t\t\t\t", 
             RowBox[{"lookup", "[", 
              RowBox[{"obj", ",", " ", "attr1", ",", " ", "attrs"}], "]"}]}], 
            ";"}]}], "\n", "\t\t\t\t", "]"}], ";"}]}], "\n", "\t\t\t", "]"}], 
      ";", "\n", "\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"ea", ",", " ", "\"\<Parts\>\""}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"part", "=", 
             RowBox[{"dispatcher", "[", "\"\<Parts\>\"", "]"}]}], "}"}], ",", 
           "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"head", "/:", 
             RowBox[{
              RowBox[{"obj_head", "?", "valid"}], "[", 
              RowBox[{"[", "p__", "]"}], "]"}], ":=", "\n", "\t\t\t\t\t", 
             RowBox[{"part", "[", 
              RowBox[{"obj", ",", " ", "p"}], "]"}]}], ";"}]}], "\n", 
          "\t\t\t\t", "]"}], ";"}]}], "\n", "\t\t\t", "]"}], ";"}]}], "\n", 
    "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"c23a24f8-d1b8-406c-b4aa-688f23170458"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceNormalForm\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"11987b3e-66fa-41ad-b39b-4f5c1c08d38c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"iRegisterInterfaceNormalForm", "[", 
    RowBox[{"head_", ",", " ", "norm_"}], "]"}], ":=", "\n", "\t", 
   RowBox[{"With", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t\t", 
      RowBox[{"valid", "=", 
       RowBox[{"InterfaceValidator", "[", "head", "]"}]}], "\n", "\t\t\t", 
      "}"}], ",", "\n", "\t\t", 
     RowBox[{"head", "/:", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"Normal", "[", 
        RowBox[{
         RowBox[{"head", "[", "a_", "]"}], "?", "valid"}], "]"}], "]"}], ":=", 
      RowBox[{"norm", "@", "a"}]}]}], "\n", "\t\t", "]"}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"40e1b52d-886a-449a-b844-0026969cf070"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterInterfaceFormatting\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"c42becca-b68b-401b-a730-1635516ab636"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterInterfaceFormatting", "[", "\n", "\t", 
   RowBox[{"head_", ",", "\n", "\t", "icon_"}], 
   RowBox[{"(*", 
    RowBox[{",", "\n", "\t", 
     RowBox[{
      RowBox[{"keys_", " ", 
       RowBox[{"I", "'"}], "ll", " ", "add", " ", "this", " ", "in", " ", 
       "the", " ", "future"}], "..."}]}], "\n", "\t", "*)"}], "\n", "\t", 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"valid", "=", 
      RowBox[{"InterfaceValidator", "[", "head", "]"}]}], "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"Format", "[", 
      RowBox[{"HoldPattern", "[", 
       RowBox[{"obj", ":", 
        RowBox[{
         RowBox[{"head", "[", "a_", "]"}], "?", "valid"}]}], "]"}], "]"}], ":=",
      "\n", "\t\t\t", 
     RowBox[{"RawBoxes", "@", "\n", "\t", "\t\t\t", 
      RowBox[{"BoxForm`ArrangeSummaryBox", "[", "\n", "\t", "\t\t\t\t", 
       RowBox[{"head", ",", "\n", "\t", "\t\t\t\t", 
        RowBox[{"Unevaluated", "[", 
         RowBox[{"Head", "@@", 
          RowBox[{"{", "a", "}"}]}], "]"}], ",", "\n", "\t", "\t\t\t\t", 
        "icon", ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", 
         RowBox[{"BoxForm`MakeSummaryItem", "[", "\n", "\t\t\t\t\t\t\t", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t\t\t\t\t\t", 
            RowBox[{"\"\<Keys: \>\"", ",", " ", "\n", "\t\t\t\t\t\t\t\t", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"Keys", "@", "a"}], ",", " ", "\"\<Version\>\""}], 
              "]"}]}], "\n", "\t\t\t\t\t\t\t\t", "}"}], ",", "\n", 
           "\t\t\t\t\t\t\t", "StandardForm"}], "\n", "\t\t\t\t\t\t\t", "]"}], 
         "\n", "\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t", 
        RowBox[{"{", "\n", "\t\t\t\t\t\t", "}"}], ",", "\n", "\t\t\t\t\t", 
        "StandardForm"}], "\n", "\t\t\t\t\t", "]"}]}]}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"318f53b1-3b34-4b9b-a2a6-370544eabb99"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterDefaultInterfaceMethods\[RightFloor]", \
"CodeSubsubsection",
 Evaluatable->True,ExpressionUUID->"18abe199-d92e-43d3-94b6-1b641b83502b"],

Cell[CellGroupData[{

Cell["\[LeftCeiling]Keys\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"b9665496-148f-4852-a612-b53e1e5601b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"registerDefault", "[", 
    RowBox[{"head_", ",", " ", "validator_", ",", " ", "Keys"}], "]"}], ":=", 
   "\n", "\t", 
   RowBox[{"head", "/:", 
    RowBox[{"HoldPattern", "@", 
     RowBox[{"Keys", "[", 
      RowBox[{
       RowBox[{"head", "[", "a_", "]"}], "?", "validator"}], "]"}]}], ":=", 
    "\n", "\t\t", 
    RowBox[{"Keys", "[", "a", "]"}]}]}], 
  ";"}]], "CodeInput",ExpressionUUID->"9da728a7-c460-4999-a32a-f10efec94f17"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]ReplacePart\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"50aa0a0f-c9ef-40f5-ac71-31778b6de6fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "ReplacePart"}], "]"}], 
  ":=", "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"ReplacePart", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"head", "[", "a_", "]"}], "?", "validator"}], ",", " ", "k_"}],
      "]"}]}], ":=", "\n", "\t\t", 
   RowBox[{"head", "[", 
    RowBox[{"ReplacePart", "[", 
     RowBox[{"a", ",", " ", "k"}], "]"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"f9c23759-581d-4e51-96e6-10583ecd1e48"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]MapAt\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"de9465c6-1f81-4b94-abc9-07d5b0f9f76a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "MapAt"}], "]"}], ":=", 
  "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"MapAt", "[", 
     RowBox[{"f_", ",", " ", 
      RowBox[{
       RowBox[{"head", "[", "a_", "]"}], "?", "validator"}], ",", " ", "k_"}],
      "]"}]}], ":=", "\n", "\t\t", 
   RowBox[{"head", "[", 
    RowBox[{"MapAt", "[", 
     RowBox[{"f", ",", " ", "a", ",", " ", "k"}], "]"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"9146eeca-dd76-4e69-85aa-de083e6c7087"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]SetProperty\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"28ba2b29-02b0-4fef-86e1-cbeaaeff6f01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "SetProperty"}], "]"}], 
  ":=", "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"SetProperty", "[", 
     RowBox[{
      RowBox[{"obj", ":", 
       RowBox[{"_head", "?", "validator"}]}], ",", " ", 
      RowBox[{"p", ":", 
       RowBox[{"_Rule", "|", "_RuleDelayed"}]}]}], "]"}]}], ":=", "\n", 
   "\t\t", 
   RowBox[{"InterfaceSetProperty", "[", 
    RowBox[{"obj", ",", " ", "p"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"64642ee0-3e99-4565-84fc-d2d1b7bb358a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PropertyValue\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"3e77785a-e52c-4079-b3d7-4489127f8999"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "PropertyValue"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"PropertyValue", "[", 
     RowBox[{
      RowBox[{"obj", ":", 
       RowBox[{"_head", "?", "validator"}]}], ",", " ", "p_"}], "]"}]}], ":=",
    "\n", "\t\t", 
   RowBox[{"InterfacePropertyValue", "[", 
    RowBox[{"obj", ",", " ", "p"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"1e2b431a-60d8-4eb3-8ea6-c73dc84d7233"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PropertyValue\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"cf9e52d5-28d4-4aa2-92f0-6d1fff267f74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "RemoveProperty"}], 
   "]"}], ":=", "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"RemoveProperty", "[", 
     RowBox[{
      RowBox[{"obj", ":", 
       RowBox[{"_head", "?", "validator"}]}], ",", " ", "p_"}], "]"}]}], ":=",
    "\n", "\t\t", 
   RowBox[{"InterfaceRemoveProperty", "[", 
    RowBox[{"obj", ",", " ", "p"}], 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"a1efcdc2-5fd2-4f44-a683-aa1bcef6b564"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]PropertyList\[RightFloor]", "CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"09959529-21f9-45c7-95c2-7df830080052"],

Cell[BoxData[
 RowBox[{
  RowBox[{"registerDefault", "[", 
   RowBox[{"head_", ",", " ", "validator_", ",", " ", "PropertyList"}], "]"}],
   ":=", "\n", "\t", 
  RowBox[{"head", "/:", 
   RowBox[{"HoldPattern", "@", 
    RowBox[{"PropertyList", "[", 
     RowBox[{"obj", ":", 
      RowBox[{"_head", "?", "validator"}]}], "]"}]}], ":=", "\n", "\t\t", 
   RowBox[{
   "InterfacePropertyList", "[", "obj", 
    "]"}]}]}]], \
"CodeInput",ExpressionUUID->"9b394e5c-adfa-465f-ae0a-ccc60cd3d1af"]
}, Closed]],

Cell[CellGroupData[{

Cell["\[LeftCeiling]iRegisterDefaultInterfaceMethods\[RightFloor]", \
"CodeSubsubsubsection",
 Evaluatable->True,ExpressionUUID->"bea7549a-7b34-4787-bd69-e31362c1520a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRegisterDefaultInterfaceMethods", "[", 
   RowBox[{"head_", ",", " ", "fns_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"v", "=", 
      RowBox[{"InterfaceValidator", "[", "head", "]"}]}], "}"}], ",", "\n", 
    "\t\t", 
    RowBox[{"Scaled", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"registerDefault", "[", 
        RowBox[{"head", ",", " ", "v", ",", " ", "#"}], "]"}], "&"}], ",", 
      " ", "fns"}], "]"}]}], "\n", "\t\t", 
   "]"}]}]], \
"CodeInput",ExpressionUUID->"3ba560dd-b597-4ae0-bb3a-0b0b6c0ec847"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], 
  ";"}]], "InputSection",ExpressionUUID->"fea9716d-1be3-49d7-9ded-\
73ff367b9a84"]
}, Open  ]],

Cell["", "SectionSeparator",ExpressionUUID->"7caa748b-78fc-4082-aded-\
e57495d40106"]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, 216}, {44, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"BTools"}, "CodePackage.nb", 
  CharacterEncoding -> "UTF-8"]
]

