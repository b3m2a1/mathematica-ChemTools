(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92992,       2345]
NotebookOptionsPosition[     80111,       2036]
NotebookOutlinePosition[     89261,       2246]
CellTagsIndexPosition[     89218,       2243]
WindowTitle->ChemDataCacheClear
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 26], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 27], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "6d0753e5-c1f5-4849-9b44-65eaad2c6bc2"]
         }],ExpressionUUID->"17b0708e-621a-447f-8524-923394b8f8f8"],
         StripOnInput->False], {"\<\"ChemDataLookup\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemDataLookup"], "\<\"ChemData\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/ref/ChemData"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a90bc679-242a-436b-b379-8867bb508a29"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "35df1ca7-312d-4f87-bb46-e66a02467b8d"]
         }],ExpressionUUID->"450e9dfe-1ddd-4c4b-8e27-c477ec28b207"],
         StripOnInput->False], {"\<\"Chemistry Data\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemData", 
         EvaluationNotebook[]], "\<\"Chemistry Services\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemServices", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "6cedd784-23a1-4da3-a10a-db41f119576d"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "5a798097-35b5-485c-9718-4232703fcfc9"]
         }],ExpressionUUID->"5096905e-e448-4875-9b9e-5d9fe766cc9a"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "ChemDataCacheClear"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/ChemDataCacheClear"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemDataCacheClear"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemDataCacheClear"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "6a71ff9f-dbf2-4e79-934f-1767ce6ce521"]
    }], "AnchorBar",ExpressionUUID->"8ca5b732-16a3-4b8d-a08f-e2beacfaeda0"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"f34af0b5-b7f7-4e2b-934c-d3a65007ca63"],

Cell["ChemDataCacheClear", "ObjectName",
 CellID->2,ExpressionUUID->"1d8a9624-2675-4e66-9903-96952cf7218c"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemDataCacheClear"]],
          "paclet:ChemTools/ref/ChemDataCacheClear"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "7ea55624-1e63-470c-91a6-0f5167c76968"], "[", "]"}]], "InlineFormula",
      ExpressionUUID->"8fefece0-b952-41d6-ace5-737a2b693b12"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Clears all cached data from ",
      Cell[BoxData[
       TemplateBox[{Cell[
          TextData["ChemDataLookup"]],"paclet:ChemTools/ref/ChemDataLookup"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "2aee61ba-c1ff-467b-ab27-8d8d790384ba"]
     }], "InlineFormula",ExpressionUUID->
      "2ed9f37f-920f-497a-91da-7dcc82573ded"]
    }],ExpressionUUID->"0bdad536-66e0-4803-b4f2-e9180ffe7029"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemDataCacheClear"]],
          "paclet:ChemTools/ref/ChemDataCacheClear"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "3a4647f8-ba73-44e9-b224-1938afbb43ba"], "[", 
       StyleBox["query", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "cb8d0d4e-3c7b-4843-93d3-26f54c671ce2"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Clears queries matching ",
      StyleBox["query", "TI", "TI"]
     }], "InlineFormula",ExpressionUUID->
      "329b1f89-2432-4673-b017-9684f6042728"]
    }],ExpressionUUID->"4572bc14-803e-460a-8a90-c051728fe725"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemDataCacheClear"]],
          "paclet:ChemTools/ref/ChemDataCacheClear"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "8befc32d-f647-4d22-829c-84169f3a91a7"], "[", 
       RowBox[{
        StyleBox["query", "TI"], ",", 
        StyleBox["src", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
      "ef0e3156-2158-4317-8679-250a0226dbd8"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Clears queries matching ",
      StyleBox["query", "TI", "TI"],
      " from source ",
      StyleBox["src", "TI", "TI"]
     }], "InlineFormula",ExpressionUUID->
      "9358a67f-a493-40de-9252-0b5d5f857cb7"]
    }],ExpressionUUID->"b78dce62-04d0-4b37-9d9c-3911c1b7d849"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"7a749c20-636b-49d3-9adb-afa78a907dda"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c94644f7-3d0f-4380-98b9-e40361043281"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "22f071f7-28f9-4da8-9b84-fe8a62bf9372"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"eef30a1f-cc2f-44a5-bf4c-eab17a960e5b"],

Cell[TextData[{
 "The cache is populated for most ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemDataLookup"]],"paclet:ChemTools/ref/ChemDataLookup"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "a172e105-7074-49ee-8a6c-4da32821ee49"],
 " calls. This provides a way to clear en masse."
}], "Notes",
 CellID->5,ExpressionUUID->"b1b3eff8-ec3b-4d0d-9fa4-93f6bc02940d"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
S2T33znYlVzV+LelrfWzOpHrgV2DHVl/wzZTu3mD4Z+1BPa+aI+TB2d6PP/5
PG20I6yvPXn0Zmb/08BWkJ7Bxa88irm/SLO6Nbv9eSni/7Aw58lA+G3WYPzt
GUrdn6xtyLvU08yqqIqoPR+cl1M+4lav1t7tcH1We0hTU8Ttu8D8Yuj1rKj+
lcgY1ejRg6yeXr9nCRs/QCK9qBWpL9oze1cr1nBfdm7+Ja7qBhp053lKV3ff
xUtPvla6DxYUzTyjF3f8yh7SydJDdZUeV1gJ+vHhlVpytcHVh74CNftYtYzB
Bu8TV5KSEyprrCvdSqIsrtfN3BxHqTrOjkasMoP88n1rQ7zqvKrsZ5ypDo1m
H4zJ1I2OpEf4NqTpNlxWLT1Vl695PTW8zpdWwQgPSoyszU56mDqDFHEptTbD
pupSRmXGj38nee9TDLMuyuc0rVknKve7JJ9Sp+petul0cGX+7orA5Jv/0K+r
mVivMpJfZMopQkL+VfsRsZerWT51ZU//vSU/7S0VU5pkEH/LV283gVi/Cqdf
bZQhTVwkfsS9ZGSIJuKARJKRzFNyQrRKRiVqCOJS0vgtZCZHkB7KSg6IJtLk
FMTjTNSQJCORZKQNpIlaEunXmUiaSdJhxLWE8QeSlBHTIvay0iFkSbLER3pr
kixRM43YksQ/suI6WZLk+pu+jD+FRHrr1T8ewPQL6X5V8kTL783pPxjsr5cW
yoo5cp2daB//CSje32CO6NellStXW9s0OBTWzNO95pDU4I3ENZy7Ro2s0as5
xC5VKTv2PuaJIEVAdM+Tdzt7xGdai9PTpEHSiIdq2eXOmhhhG6qPDPZV9RVX
IY/L6m7lpWDMAW7h3ebHHf+Sex9fqlX/o0Tv5wWrwBLkwoXU+pNIeC27NuVJ
8Lness6lSNRt75sRWcjNmOTU+taH7OamnL4L3XFn3H79O393ZOfKz5JZKF+c
QpKd+THyCdGyeN7cGQvlpy/8YB7xT8uH8+TnzEHmzpnzwUz5RXM+klk4F1k4
f+6sdz9PCIIgCIIgCIIgCIIgCILe7n8A3xa0rQ==
           "], "Byte", ColorSpace -> 
           "RGB", ImageSize -> All, Interleaving -> False, Magnification -> 
           Automatic]}}, Spacings -> {0, 0}, Alignment -> {Center, Center}], 
       ImageSize -> {720, 70}, Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6,ExpressionUUID->"61d4b94c-d52f-41ed-aeff-9c71cfca1442"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->7,ExpressionUUID->"2fd71f51-0dc3-44ce-ad8f-d2c9ab17d6cb"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "552172b4-674b-4a78-b3b0-9386de1f842d"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->8,ExpressionUUID->"203f083c-cc1f-41ff-884a-c726337d532f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "67f2f77f-cf1a-4f37-aa49-4acbc6535772"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->9,ExpressionUUID->"407a7a97-eebc-472b-9f3d-03d08cb65f88"],

Cell["Populate the cache via some look up calls:", "ExampleText",
 CellID->10,ExpressionUUID->"06f75a5c-8430-4426-b0b5-214902b6c413"],

Cell[BoxData[
 RowBox[{"ChemDataLookup", "[", 
  RowBox[{
   RowBox[{"ToUpperCase", "@", 
    RowBox[{"Alphabet", "[", "]"}]}], ",", "\"\<AtomColors\>\""}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->11,ExpressionUUID->"5a00dc26-af1c-4792-8409-a3acd7ae2f49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.709804, 0.709804], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.47320266666666666`, 0.47320266666666666`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.709804, 0.709804]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.709804, 0.709804]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.709804, 0.709804],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.564706, 0.564706, 0.564706], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.37647066666666673`, 0.37647066666666673`, 0.37647066666666673`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.564706, 0.564706, 0.564706]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.564706, 0.564706, 0.564706]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.564706, 0.564706, 0.564706],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.578462, 0.85539, 0.408855], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.3856413333333334, 0.57026, 0.27257000000000003`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.578462, 0.85539, 0.408855]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.578462, 0.85539, 0.408855]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.578462, 0.85539, 0.408855],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.93, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6200000000000001, 0.6666666666666666, 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.93, 1, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.93, 1, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.93, 1, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.580392, 0, 0.580392], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.38692800000000005`, 0., 0.38692800000000005`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.580392, 0, 0.580392]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.580392, 0, 0.580392]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.580392, 0, 0.580392],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.534026, 0.420729, 0.705621], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.35601733333333335`, 0.280486, 0.47041400000000005`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.534026, 0.420729, 0.705621]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.534026, 0.420729, 0.705621]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.534026, 0.420729, 0.705621],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.291989, 0.437977, 0.888609], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.19465933333333335`, 0.29198466666666667`, 0.592406],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.291989, 0.437977, 0.888609]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.291989, 0.437977, 0.888609]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.291989, 0.437977, 0.888609],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.800498, 0.201504, 0.192061], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5336653333333334, 0.134336, 0.1280406666666667],
       
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.800498, 0.201504, 0.192061]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.800498, 0.201504, 0.192061]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.800498, 0.201504, 0.192061],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.501961, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.3346406666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.501961, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.501961, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.501961, 0],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.90443, 0.97015, 0.13504], RectangleBox[{0, -1}, {2, 1}]}},
       
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6029533333333333, 0.6467666666666667, 0.09002666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.90443, 0.97015, 0.13504]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.90443, 0.97015, 0.13504]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.90443, 0.97015, 0.13504],
    Editable->False,
    Selectable->False], ",", "$Failed", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.43205, 0.58595, 0.856029], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.28803333333333336`, 0.39063333333333333`, 0.570686],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.43205, 0.58595, 0.856029]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.43205, 0.58595, 0.856029]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.43205, 0.58595, 0.856029],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.65098, 0.65098, 0.670588], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.4339866666666667, 0.4339866666666667, 0.44705866666666666`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.65098, 0.65098, 0.670588]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.65098, 0.65098, 0.670588]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.65098, 0.65098, 0.670588],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.681179, 0.360409, 0.63675], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.4541193333333333, 0.24027266666666666`, 0.42450000000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.681179, 0.360409, 0.63675]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.681179, 0.360409, 0.63675]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.681179, 0.360409, 0.63675],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.531014, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.35400933333333334`, 0.6666666666666667, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.531014, 1., 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.531014, 1., 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.531014, 1., 1.],
    Editable->False,
    Selectable->False], ",", "$Failed"}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->12,ExpressionUUID->"a7b336fb-86c7-4316-a132-f6992b085b74"],

Cell[TextData[{
 "Clear all ",
 Cell[BoxData[
  StyleBox["\"\<AtomColors\>\"", "InlineFormula",
   ShowAutoStyles->True]],ExpressionUUID->
  "97917272-228e-49c7-9e17-12788a5f5c65"],
 " searches:"
}], "ExampleText",
 CellID->13,ExpressionUUID->"ebfd95ea-2af6-488f-a4cf-dab8f007c40d"],

Cell[BoxData[
 RowBox[{"ChemDataCacheClear", "[", 
  RowBox[{"_", ",", "\"\<AtomColors\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.701143163912808*^9, 3.701143171553713*^9}},
 CellLabel->"In[2]:=",
 CellID->14,ExpressionUUID->"862b2d70-0d81-430d-b02d-183484810eee"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"A\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"B\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.709804, 0.709804], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6666666666666667, 0.47320266666666666`, 0.47320266666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1., 0.709804, 0.709804]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.709804, 0.709804]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.709804, 0.709804],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"C\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.564706, 0.564706, 0.564706], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.37647066666666673`, 0.37647066666666673`, 0.37647066666666673`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.564706, 0.564706, 0.564706]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.564706, 0.564706, 0.564706]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.564706, 0.564706, 0.564706],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"D\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"E\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"F\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.578462, 0.85539, 0.408855], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.3856413333333334, 0.57026, 0.27257000000000003`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.578462, 0.85539, 0.408855]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.578462, 0.85539, 0.408855]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.578462, 0.85539, 0.408855],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"G\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"H\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.93, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6200000000000001, 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.93, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.93, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.93, 1, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"I\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.580392, 0, 0.580392], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.38692800000000005`, 0., 0.38692800000000005`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.580392, 0, 0.580392]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.580392, 0, 0.580392]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.580392, 0, 0.580392],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"J\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"K\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.534026, 0.420729, 0.705621], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.35601733333333335`, 0.280486, 0.47041400000000005`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.534026, 0.420729, 0.705621]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.534026, 0.420729, 0.705621]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.534026, 0.420729, 0.705621],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"L\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"M\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"N\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.291989, 0.437977, 0.888609], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.19465933333333335`, 0.29198466666666667`, 0.592406],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.291989, 0.437977, 0.888609]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.291989, 0.437977, 0.888609]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.291989, 0.437977, 0.888609],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"O\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.800498, 0.201504, 0.192061], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.5336653333333334, 0.134336, 0.1280406666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.800498, 0.201504, 0.192061]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.800498, 0.201504, 0.192061]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.800498, 0.201504, 0.192061],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"P\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1., 0.501961, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666667, 0.3346406666666667, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1., 0.501961, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[1., 0.501961, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1., 0.501961, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"Q\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"R\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"S\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.90443, 0.97015, 0.13504], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.6029533333333333, 0.6467666666666667, 0.09002666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.90443, 0.97015, 0.13504]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.90443, 0.97015, 0.13504]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.90443, 0.97015, 0.13504],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"T\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"U\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.43205, 0.58595, 0.856029], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.28803333333333336`, 0.39063333333333333`, 0.570686],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.43205, 0.58595, 0.856029]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.43205, 0.58595, 0.856029]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.43205, 0.58595, 0.856029],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"V\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.65098, 0.65098, 0.670588], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4339866666666667, 0.4339866666666667, 0.44705866666666666`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.65098, 0.65098, 0.670588]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.65098, 0.65098, 0.670588]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.65098, 0.65098, 0.670588],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"W\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.681179, 0.360409, 0.63675], 
          RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.4541193333333333, 0.24027266666666666`, 0.42450000000000004`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.681179, 0.360409, 0.63675]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.681179, 0.360409, 0.63675]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.681179, 0.360409, 0.63675],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"X\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.5, 0, 0.5]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.5, 0, 0.5],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"Y\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.531014, 1., 1.], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[
         0.35400933333333334`, 0.6666666666666667, 0.6666666666666667],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0.531014, 1., 1.]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = 
          RGBColor[0.531014, 1., 1.]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0.531014, 1., 1.],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"ChemDataQuery", "[", 
     RowBox[{"\<\"Z\"\>", ",", "\<\"AtomColors\"\>"}], "]"}], "\[Rule]", 
    "$Failed"}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->15,ExpressionUUID->"f346a3cb-3b7d-493e-b3e1-b9ab6bed35f8"],

Cell["Clear any other searches:", "ExampleText",
 CellID->16,ExpressionUUID->"55714d1c-5797-4955-837e-28173d62d712"],

Cell[BoxData[
 RowBox[{"ChemDataCacheClear", "[", "]"}]], "Input",
 CellChangeTimes->{{3.701143239303384*^9, 3.7011432417841873`*^9}},
 CellLabel->"In[3]:=",
 CellID->17,ExpressionUUID->"769f6f7d-ed70-4d44-bc1f-594ca26975e3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->18,ExpressionUUID->"013ade18-9931-4483-b13f-7aa2d2709609"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->19,ExpressionUUID->"6545b5f3-c3aa-429f-941b-91e12a328ad0"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemDataLookup"]],"paclet:ChemTools/ref/ChemDataLookup"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"15db2671-f56e-4165-bc00-f48f296e86f6"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemData"]],"paclet:ChemTools/ref/ChemData"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"8926bb5c-796d-4dcd-829a-80d623ad3040"]
}], "SeeAlso",
 CellID->20,ExpressionUUID->"739a5c2d-2668-499a-9c5c-841ca228225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->21,ExpressionUUID->"6d4758e4-5746-47b9-bafb-113b42027951"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{92., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->22,ExpressionUUID->"808c83e4-1502-42b7-a7a9-5ac56f518048"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{112., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->23,ExpressionUUID->"a3a4cead-2420-43f4-bd98-ff775e3f9d4c"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->24,ExpressionUUID->"3a76633b-6a5a-4dd6-84a9-7a969470f9bb"],

Cell[" ", "FooterCell",
 CellID->25,ExpressionUUID->"c258ef18-5854-4d31-a215-955af4634eb7"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"ChemDataCacheClear",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 52, 55.661171}", 
    "history" -> {"11.1", "", ""}, "context" -> "ChemTools`", 
    "keywords" -> {"chemdatacacheclear", "chem", "data", "cache", "clear"}, 
    "specialkeywords" -> Automatic, "tutorialcollectionlinks" -> {}, "index" -> 
    True, "label" -> "ChemTools", "language" -> "ChemTools", "paclet" -> 
    "Mathematica", "status" -> "None", "summary" -> 
    "Clears cached data matching a pattern", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "ChemDataCacheClear", "titlemodifier" -> 
    "ChemDataCacheClear", "windowtitle" -> "ChemDataCacheClear", "type" -> 
    "Symbol", "uri" -> "ChemTools/ref/ChemDataCacheClear"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[590, 21, 5104, 126, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"f34af0b5-b7f7-4e2b-934c-d3a65007ca63",
 CellID->1],
Cell[5697, 149, 107, 1, 70, "ObjectName", "ExpressionUUID" -> \
"1d8a9624-2675-4e66-9903-96952cf7218c",
 CellID->2],
Cell[5807, 152, 2550, 64, 70, "Usage", "ExpressionUUID" -> \
"7a749c20-636b-49d3-9adb-afa78a907dda",
 CellID->3],
Cell[CellGroupData[{
Cell[8382, 220, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"eef30a1f-cc2f-44a5-bf4c-eab17a960e5b",
 CellID->4],
Cell[9908, 258, 399, 10, 70, "Notes", "ExpressionUUID" -> \
"b1b3eff8-ec3b-4d0d-9fa4-93f6bc02940d",
 CellID->5],
Cell[10310, 270, 11008, 198, 70, "NotesThumbnails", "ExpressionUUID" -> \
"61d4b94c-d52f-41ed-aeff-9c71cfca1442",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[21423, 472, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"2fd71f51-0dc3-44ce-ad8f-d2c9ab17d6cb",
 CellID->7],
Cell[CellGroupData[{
Cell[21540, 477, 1473, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"203f083c-cc1f-41ff-884a-c726337d532f",
 CellID->8],
Cell[CellGroupData[{
Cell[23038, 516, 1465, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"407a7a97-eebc-472b-9f3d-03d08cb65f88",
 CellID->9],
Cell[24506, 553, 133, 1, 70, "ExampleText", "ExpressionUUID" -> \
"06f75a5c-8430-4426-b0b5-214902b6c413",
 CellID->10],
Cell[24642, 556, 267, 7, 70, "Input", "ExpressionUUID" -> \
"5a00dc26-af1c-4792-8409-a3acd7ae2f49",
 CellID->11],
Cell[24912, 565, 23720, 635, 70, "Output", "ExpressionUUID" -> \
"a7b336fb-86c7-4316-a132-f6992b085b74",
 CellID->12],
Cell[48635, 1202, 282, 8, 70, "ExampleText", "ExpressionUUID" -> \
"ebfd95ea-2af6-488f-a4cf-dab8f007c40d",
 CellID->13],
Cell[48920, 1212, 268, 5, 70, "Input", "ExpressionUUID" -> \
"862b2d70-0d81-430d-b02d-183484810eee",
 CellID->14],
Cell[49191, 1219, 27653, 725, 70, "Output", "ExpressionUUID" -> \
"f346a3cb-3b7d-493e-b3e1-b9ab6bed35f8",
 CellID->15],
Cell[76847, 1946, 116, 1, 70, "ExampleText", "ExpressionUUID" -> \
"55714d1c-5797-4955-837e-28173d62d712",
 CellID->16],
Cell[76966, 1949, 225, 4, 70, "Input", "ExpressionUUID" -> \
"769f6f7d-ed70-4d44-bc1f-594ca26975e3",
 CellID->17],
Cell[77194, 1955, 171, 3, 70, "Output", "ExpressionUUID" -> \
"013ade18-9931-4483-b13f-7aa2d2709609",
 CellID->18]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[77617, 1968, 102, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"6545b5f3-c3aa-429f-941b-91e12a328ad0",
 CellID->19],
Cell[77722, 1971, 936, 22, 70, "SeeAlso", "ExpressionUUID" -> \
"739a5c2d-2668-499a-9c5c-841ca228225e",
 CellID->20]
}, Open  ]],
Cell[CellGroupData[{
Cell[78695, 1998, 110, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"6d4758e4-5746-47b9-bafb-113b42027951",
 CellID->21],
Cell[78808, 2001, 527, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"808c83e4-1502-42b7-a7a9-5ac56f518048",
 CellID->22],
Cell[79338, 2015, 544, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"a3a4cead-2420-43f4-bd98-ff775e3f9d4c",
 CellID->23]
}, Open  ]],
Cell[79897, 2030, 116, 1, 70, "History", "ExpressionUUID" -> \
"3a76633b-6a5a-4dd6-84a9-7a969470f9bb",
 CellID->24],
Cell[80016, 2033, 91, 1, 70, "FooterCell", "ExpressionUUID" -> \
"c258ef18-5854-4d31-a215-955af4634eb7",
 CellID->25]
}
]
*)

(* End of internal cache information *)
