(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    178406,       3642]
NotebookOptionsPosition[    166128,       3348]
NotebookOutlinePosition[    175262,       3558]
CellTagsIndexPosition[    175219,       3555]
WindowTitle->$ChemObjects
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 21], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 22], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "ae1365fa-0d5c-484b-85aa-6b527f500515"]
         }],ExpressionUUID->"ea688192-b0ff-4095-b5ab-296d1b706cb6"],
         StripOnInput->False], {"\<\"ChemAdd\"\>":>Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemAdd"], "\<\"ChemRemove\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/ref/ChemRemove"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "74f3635d-e4ef-4a28-9ed3-87394ed889d8"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "f575128f-188f-4815-9ab5-be4113ac6f42"]
         }],ExpressionUUID->"5f21d78d-4516-4c5a-a686-5e0fe0adf13a"],
         StripOnInput->False], {"\<\"Chemistry Objects\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemObjects", 
         EvaluationNotebook[]], "\<\"Object Interface\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemObjectInterface", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "75ac0847-a49b-46b2-b599-fef836e3049c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "ba58e87d-1530-4fdc-a25c-38776a6fd39c"]
         }],ExpressionUUID->"61d9d87e-8ef0-455f-8ea0-2b725af3caf0"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "$ChemObjects"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/$ChemObjects"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/%24ChemObjects"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/%24ChemObjects"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "ded8af73-9add-4bb7-adfd-f4aabf3a91de"]
    }], "AnchorBar",ExpressionUUID->"06943f6b-f31b-4a90-8614-f26970b11f4c"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"90e2c521-9f90-4eff-8820-8a2ba9079d0f"],

Cell["$ChemObjects", "ObjectName",
 CellID->2,ExpressionUUID->"2f67a8c6-f55c-4fad-8438-eb9bff02e022"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[Cell[BoxData[
       TemplateBox[{Cell[
          TextData["$ChemObjects"]],"paclet:ChemTools/ref/$ChemObjects"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "ebcdd3d2-275d-4f08-9409-56b4889f83b4"]], "InlineFormula",
      ExpressionUUID->"2d114bb2-75c8-4f85-a4a0-f936f3ca1710"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Register of ",
      Cell[BoxData[
       StyleBox["\"\<ObjectType\>\"", "InlineFormula",
        ShowAutoStyles->True]],ExpressionUUID->
       "e4b713ae-e920-493e-8154-6568a64593d7"],
      StyleBox[" ",
       FontSlant->"Italic"],
      "\[Rule] ",
      Cell[BoxData[
       TemplateBox[{Cell[
          TextData["Association"]],"paclet:ref/Association"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "3e3b427f-6c06-468b-875b-22558fe23d8b"],
      " pairs creating new objects"
     }], "InlineFormula",ExpressionUUID->
      "dc560969-3e1c-47a1-97f7-8cc6091a1df8"]
    }],ExpressionUUID->"48c8b0e8-0ea1-43c1-b761-af6b251e65a8"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"bdd0bfc4-8023-4a57-8da6-5274c1b1c428"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "a05538c1-4355-4ccd-959d-b250c4d443e3"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "70039577-cdec-4582-a49f-5b57da602bc8"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"adc86c55-aa4c-460a-8547-470f6b918c4b"],

Cell[TextData[{
 "Changing ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemObjects"]],"paclet:ChemTools/ref/$ChemObjects"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "5940844c-3718-42cb-9da2-ed79ddd0a096"],
 " will only change the behavior of newly created objects"
}], "Notes",
 CellID->5,ExpressionUUID->"cf603ff0-c4ca-45e0-a54c-d2cef5302996"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Key"]],"paclet:ref/Key"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "527afd92-5208-4b67-8cc6-e5c5abdaea3e"],
 " expressions will get expanded to their proper values at creation time"
}], "Notes",
 CellID->6,ExpressionUUID->"40848514-a3ad-4027-8a3e-99b74fd9641b"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
rfluDS/Pxnlr56xc9y9mnNxczFAnWSO+kHWZL7yQPYePmLVyhj05werpzjbz
f2jwsUfuD5uWzeNkZxgc4Zo9mxkC8zWLm5lBZs/i4phys+YxCavArGIlrGrm
FJGJJmYd+8ruxsVu5RRZyVgFq2XMIfdkT06/Mfdc7JmyLTnDsV6cYcc5KYUY
67JzeznB88w0pU9N9VON3Dwzm30Wrk+OwMU1J8TCvtcx3FbP56foUDLBwZv7
s+F8NWYhTq/uNibVt95v++dtqUCzxouqOZ+e19eEB9Fsqql4cKP29vuHGY9P
1wVeH1qPcP/7fl+Fw3sWHzv00mWHCLfwgc0nRX7//GL8inDiOjj7K4fxJfBw
c7F2KTcPFw83Nw/Pt/rRjzPzufTBMcDN9ZnNxjUlZefY2U/P+3P7dsoROtUB
89wbP3THT/KJBBk79dmZKfGyj/IJa2S8O7uZm5Xn5maf4eyhOA8CrrFRxlxP
+OaUJ/yxLpynPPuxgXBG5uKaxT3lRkybP7uwfeXUGzVn948LFn5wD8d7cSML
5rDSRch4hD/OYha/28M1rQP35E2fN2/6oNxT3C78BeE8rhDuvZNtAl6umvOX
z0EWzUaWz188Z8WStciSFd+vQn6a/+OyPLElP3CtXoCsnf39D99/L15aH5OK
8Py86LuVK+N5kUVzeOcuXbwKWb4IWbwUWXxjH+9cRLSeywSPrEIQM4MK59nI
ilXVy35e8K81PNw/z12O/GsNN7IC4f15/vx/Lfl5tlUo749c85chTPdLeDfF
LER4V81fM2cpsmLhTg+FeOQnhHcpMj9CppR39bzlyNK5icKICDxdUVt30+PK
vN2NRTl3fW69iG0vzn9y7o3Xq+hCryfXorvKAjs2CVeX5NwtfZ6cj7j01GY+
yoXjG17dCHyQ9fyNTXKXYWOn/dMem1dX3DruzP7npV9LKHdLy21iok9nWPm1
1j8iujIS2kqbozM7snw7g5uvHijyTm1o8M1LvJiUd8fnrSR3TnsCCGx9GVvT
VPFWv+BlyGhCfNwrj9vdsvsgv7Sq82GLav2tDhxyov+RLa0pcCgKcaLUE+DU
tZC+9gNoY0p72cPaxqGsa5SiqvNDaj8AwOWu9pxyJLPPpL/p+vtZ1nBbCTwf
5L65BpfyEtDsy53Dla8i7yFxvs8vkrhqwyvy7428LukYdkVq8l4P+9bkvG5P
psLry5RNyCMwaunPLLpa2dPflEB2XVBDSu3iCXy1Yli/73VoxaD5VYXuthRK
UXrkAqoxsSuvtPY9sYv56Qu7KacmX9k0LIbsqoqPi/XrrLMr+DG10Lw8MzM3
06k8KTjgvG+NLJJJyFNPj4rOmlv0PiepULBUZlkhwT/q0mi9ccZNR0c9n/xq
uUIP3do0BF9mft0G0S7KdfUyLjDMLFJHatv8I/T5KuyrmwO1LusXr0bMi3bU
XzbKTK/0yMy1rDL64WbZqXKJldeir/5pkqtdcZW/KNbZ7pqhl7YFd1ZyVrab
R5RnQcHE+j4TyMNZwryRM34FmjDkiezwZF/Ze31RwaqZjKZzXpNzDVaeuR0Z
84eBgYGBgYGBgYGBgYGBgfF/jP8CCsEsIw==
           "], "Byte", ColorSpace -> 
           "RGB", ImageSize -> All, Interleaving -> False, Magnification -> 
           Automatic]}}, Spacings -> {0, 0}, Alignment -> {Center, Center}], 
       ImageSize -> {720, 70}, Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->7,ExpressionUUID->"0419e096-7827-421f-a50c-2736be751db3"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->8,ExpressionUUID->"abd47b0d-9ee0-4ee2-b8f9-c031ffe21e3d"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b4180893-215f-4221-b40a-2721b2252485"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->9,ExpressionUUID->"889c1e24-4506-4dbb-85cf-876c808b4d93"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "846f0048-7546-4a38-a728-94d791f20286"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->10,ExpressionUUID->"bc0dc463-9589-4a15-94c3-9059f9b00222"],

Cell[TextData[{
 "View the current types defined in ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemObjects"]],"paclet:ChemTools/ref/$ChemObjects"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "a83a456f-7e88-4deb-a7f2-1e3d0991da9a"]
}], "ExampleText",
 CellID->11,ExpressionUUID->"89ecd1c9-4eac-40fc-94a0-3422d74fafe3"],

Cell[BoxData[
 RowBox[{"$ChemObjects", "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.700967247721099*^9, 3.70096724959044*^9}, {
   3.700967780636746*^9, 3.700967783284433*^9}, 3.700967932536057*^9, {
   3.700968903497065*^9, 3.700968905029786*^9}},
 CellLabel->"In[1]:=",
 CellID->12,ExpressionUUID->"9c5aac3d-3d00-408b-a1ca-6df73634b8f2"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 3, "Length" -> 3, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Atoms", "Type", "Strength", "Color", "Rotate", "Move", 
            "Transform", "Graphic", "Graphic3D", "Element", "Bonds", "Mass", 
            "MaxValence", "Valence", "AtomicNumber", "Radius", 
            "Electronegativity", "Position"}, {
            TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
            TypeSystem`Atom[Integer], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3]}], 3], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[2]} -> 1, {All, "Atoms"} -> 
           1, {All, "Type"} -> 1, {All, "Strength"} -> 1, {All, "Color"} -> 
           1, {All, "Rotate"} -> 1, {All, "Move"} -> 1, {All, "Transform"} -> 
           1, {All, "Graphic"} -> 1, {All, "Graphic3D"} -> 
           1, {All, "Element"} -> 1, {All, "Bonds"} -> 1, {All, "Mass"} -> 
           1, {All, "MaxValence"} -> 1, {All, "Valence"} -> 
           1, {All, "AtomicNumber"} -> 1, {All, "Radius"} -> 
           1, {All, "Electronegativity"} -> 1, {All, "Position"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[67.20000000000002], 
             TypeSystem`PackageScope`RowShape[
              Association["Atoms" -> TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`UnknownShape], 0, {All, "Atoms"}], 
               "Type" -> TypeSystem`PackageScope`AtomShape[34], "Strength" -> 
               TypeSystem`PackageScope`UnknownShape, "Color" -> 
               TypeSystem`PackageScope`UnknownShape, "Rotate" -> 
               TypeSystem`PackageScope`UnknownShape, "Move" -> 
               TypeSystem`PackageScope`UnknownShape, "Transform" -> 
               TypeSystem`PackageScope`UnknownShape, "Graphic" -> 
               TypeSystem`PackageScope`UnknownShape, "Graphic3D" -> 
               TypeSystem`PackageScope`UnknownShape, "Element" -> 
               TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
               "Bonds" -> TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`UnknownShape], 0, {All, "Bonds"}], 
               "Mass" -> TypeSystem`PackageScope`UnknownShape, "MaxValence" -> 
               TypeSystem`PackageScope`UnknownShape, "Valence" -> 
               TypeSystem`PackageScope`UnknownShape, "AtomicNumber" -> 
               TypeSystem`PackageScope`UnknownShape, "Radius" -> 
               TypeSystem`PackageScope`UnknownShape, "Electronegativity" -> 
               TypeSystem`PackageScope`UnknownShape, "Position" -> 
               TypeSystem`PackageScope`UnknownShape]]]], 3, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[1599616987], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[String], 
          
          TypeSystem`Struct[{
           "Atoms", "Type", "Strength", "Color", "Rotate", "Move", 
            "Transform", "Graphic", "Graphic3D", "Element", "Bonds", "Mass", 
            "MaxValence", "Valence", "AtomicNumber", "Radius", 
            "Electronegativity", "Position"}, {
            TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
            TypeSystem`Atom[Integer], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 3]}], 3], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[1599616987]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Atoms\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Atoms\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Atoms"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Atoms"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Type\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Type\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Type"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Type"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Strength\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Strength\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Strength"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Strength"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Color\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Color\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Color"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Color"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Rotate\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Rotate\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Rotate"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Rotate"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Move\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Move\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Move"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Move"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Transform\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Transform\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Transform"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Transform"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Graphic\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Graphic\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Graphic"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Graphic"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Graphic3D\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Graphic3D\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Graphic3D"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Graphic3D"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Element\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Element\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Element"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Element"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Bonds\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Bonds\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Bonds"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Bonds"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Mass\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Mass\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Mass"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Mass"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MaxValence\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MaxValence\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "MaxValence"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "MaxValence"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Valence\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Valence\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Valence"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Valence"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AtomicNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"AtomicNumber\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "AtomicNumber"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "AtomicNumber"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Radius\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Radius\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Radius"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Radius"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Electronegativity\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Electronegativity\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Electronegativity"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Electronegativity"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Position\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Position\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    All, "Position"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[All, "Position"]], "Mouse"], 
                Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Atom", 
                    Style[
                    "Atom", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Atom"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                   GeneralUtilities`Slice[
                    Key["Atom"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Color"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomRotate", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomRotate], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Rotate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomMove", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomMove], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Move"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomTransform", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomTransform], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Transform"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"AtomGraphic", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", "]"}],
                     ",", 
                    RowBox[{"Options", "[", "AtomGraphic", "]"}]}], "]"}]}]}],
                     "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`AtomGraphic[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    FilterRules[
                    Rest[ChemTools`Private`Package`o], 
                    Options[ChemTools`AtomGraphic]]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Graphic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"AtomGraphic3D", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", "]"}],
                     ",", 
                    RowBox[{"Options", "[", "AtomGraphic3D", "]"}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`AtomGraphic3D[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    FilterRules[
                    Rest[ChemTools`Private`Package`o], 
                    Options[ChemTools`AtomGraphic3D]]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Graphic3D"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Element"]]], "Mouse"], 
                ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Atom"], 
                    Key["Bonds"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Bonds"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ChemDataLookup", "[", 
                    RowBox[{
                    RowBox[{"Key", "[", "\"Element\"", "]"}], ",", 
                    "\"AtomicMass\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Mass"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ChemDataLookup", "[", 
                    RowBox[{
                    RowBox[{"Key", "[", "\"Element\"", "]"}], ",", 
                    "\"ElementValences\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["MaxValence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ChemProperty", "[", "AtomValence", "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Valence"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ChemDataLookup", "[", 
                    RowBox[{
                    RowBox[{"Key", "[", "\"Element\"", "]"}], ",", 
                    "\"AtomicNumber\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["AtomicNumber"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"UnitConvert", "[", 
                    RowBox[{
                    RowBox[{"ChemDataLookup", "[", 
                    RowBox[{
                    RowBox[{"Key", "[", "\"Element\"", "]"}], ",", 
                    "\"Radius\""}], "]"}], ",", "\"Angstroms\""}], "]"}], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Radius"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"ChemDataLookup", "[", 
                    RowBox[{
                    RowBox[{"Key", "[", "\"Element\"", "]"}], ",", 
                    "\"Electronegativity\""}], "]"}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Electronegativity"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{0., 0., 0.}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0., 0., 0.}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Atom"], 
                    Key["Position"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atom"], 
                   Key["Position"]]], "Mouse"]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Bond", 
                    Style[
                    "Bond", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Bond"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                   GeneralUtilities`Slice[
                    Key["Bond"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Bond"], 
                    Key["Atoms"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Atoms"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], 
               Pane[
                Annotation[
                 RawBoxes["1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Type"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                  "Automatic", FontFamily -> "Source Code Pro", FontSize -> 
                   13, ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Strength"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{Automatic, Automatic}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{Automatic, Automatic}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Bond"], 
                    Key["Color"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Color"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["BondRotate", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`BondRotate], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Rotate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["BondMove", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`BondMove], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Move"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["BondTransform", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`BondTransform], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Transform"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"BondGraphic", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", "]"}],
                     ",", 
                    RowBox[{"Options", "[", "BondGraphic", "]"}]}], "]"}]}]}],
                     "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`BondGraphic[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    FilterRules[
                    Rest[ChemTools`Private`Package`o], 
                    Options[ChemTools`BondGraphic]]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Graphic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"BondGraphic3D", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"FilterRules", "[", 
                    RowBox[{
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", "]"}],
                     ",", 
                    RowBox[{"Options", "[", "BondGraphic3D", "]"}]}], 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`BondGraphic3D[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    FilterRules[
                    Rest[ChemTools`Private`Package`o], 
                    Options[ChemTools`BondGraphic3D]]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Bond"], 
                   Key["Graphic3D"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Atomset", 
                    Style[
                    "Atomset", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Atomset"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                   GeneralUtilities`Slice[
                    Key["Atomset"]]], "Mouse"], 
                 ImageSize -> {{67.20000000000002, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][{
                    
                    Key["Atomset"], 
                    Key["Atoms"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Atoms"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomsetRotate", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomsetRotate], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Rotate"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomsetMove", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomsetMove], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Move"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["AtomsetTransform", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[ChemTools`AtomsetTransform], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], FontFamily -> 
                   "Source Code Pro", FontSize -> 13, ShowStringCharacters -> 
                   True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Transform"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"AtomsetGraphic", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`AtomsetGraphic[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    Rest[ChemTools`Private`Package`o]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Graphic"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["ChemMethod", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False}, 
                    PanelBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Bound Method\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Function\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ChemTools`Private`Package`o", "=", 
                    RowBox[{"{", "##1", "}"}]}], "}"}], ",", 
                    RowBox[{"AtomsetGraphic3D", "[", 
                    RowBox[{
                    
                    RowBox[{"First", "[", "ChemTools`Private`Package`o", 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    
                    RowBox[{"Rest", "[", "ChemTools`Private`Package`o", 
                    "]"}]}]}], "]"}]}], "]"}], "&"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic], 
                    BaselinePosition -> Baseline], DynamicModuleValues :> {}],
                     "]"}], 
                    ChemTools`ChemMethod[
                    With[{ChemTools`Private`Package`o = {
                    SlotSequence[1]}}, 
                    ChemTools`AtomsetGraphic3D[
                    First[ChemTools`Private`Package`o], 
                    Apply[Sequence, 
                    Rest[ChemTools`Private`Package`o]]]]& ], Selectable -> 
                    False, Editable -> False, SelectWithContents -> True], 
                   FontFamily -> "Source Code Pro", FontSize -> 13, 
                   ShowStringCharacters -> True]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
                 
                  GeneralUtilities`Slice[
                   Key["Atomset"], 
                   Key["Graphic3D"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]], 
               Item[
               "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                GrayLevel[0.85]]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 520491623]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[520491623][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {3976., {90.8544921875, 96.1455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[1]=",
 CellID->13,ExpressionUUID->"e435d89e-c32a-4351-a45e-b878f792c34a"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->14,ExpressionUUID->"0a8e1e26-c36f-42e1-8076-a219a2128e37"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemAdd"]],"paclet:ChemTools/ref/ChemAdd"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"7f81f794-e9f5-49ce-a0d2-29ad3ca9f58d"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemRemove"]],"paclet:ChemTools/ref/ChemRemove"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"8de66b1e-6ff9-4ead-8df0-27b6d64792a8"]
}], "SeeAlso",
 CellID->15,ExpressionUUID->"2b84ef79-3a12-46d0-9160-a3092154a8eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->16,ExpressionUUID->"087b458a-f144-482e-938d-0bf042e2cef2"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Objects"]], "paclet:ChemTools/guide/ChemObjects"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Objects"]], "paclet:ChemTools/guide/ChemObjects"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{108., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->17,ExpressionUUID->"7d6244a9-f872-4769-b86a-3930a2dab404"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Object Interface"]], 
     "paclet:ChemTools/guide/ChemObjectInterface"}, "RefLink", 
    BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Object Interface"]], 
     "paclet:ChemTools/guide/ChemObjectInterface"}, "RefLinkPlain", 
    BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{95., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->18,ExpressionUUID->"39214ba7-aca4-4a3f-9e66-9d2e9dbff6cc"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->19,ExpressionUUID->"4bcd8d59-fbe6-42f5-b7b5-7a8f20453522"],

Cell[" ", "FooterCell",
 CellID->20,ExpressionUUID->"6555e451-e24f-4335-92ec-e7bece61aaab"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"$ChemObjects",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 46, 23.421770}", 
    "history" -> {"11.1", "", ""}, "context" -> "ChemTools`", 
    "keywords" -> {"$chemobjects", "$chem", "objects"}, "specialkeywords" -> 
    Automatic, "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "ChemTools", "language" -> "ChemTools", "paclet" -> "Mathematica", 
    "status" -> "None", "summary" -> 
    "Register of name->function|association pairs for defaulting new objects",
     "synonyms" -> {}, "tabletags" -> {}, "title" -> "$ChemObjects", 
    "titlemodifier" -> "$ChemObjects", "windowtitle" -> "$ChemObjects", 
    "type" -> "Symbol", "uri" -> "ChemTools/ref/$ChemObjects"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[584, 21, 5076, 125, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"90e2c521-9f90-4eff-8820-8a2ba9079d0f",
 CellID->1],
Cell[5663, 148, 101, 1, 70, "ObjectName", "ExpressionUUID" -> \
"2f67a8c6-f55c-4fad-8438-eb9bff02e022",
 CellID->2],
Cell[5767, 151, 1190, 30, 70, "Usage", "ExpressionUUID" -> \
"bdd0bfc4-8023-4a57-8da6-5274c1b1c428",
 CellID->3],
Cell[CellGroupData[{
Cell[6982, 185, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"adc86c55-aa4c-460a-8547-470f6b918c4b",
 CellID->4],
Cell[8508, 223, 381, 10, 70, "Notes", "ExpressionUUID" -> \
"cf603ff0-c4ca-45e0-a54c-d2cef5302996",
 CellID->5],
Cell[8892, 235, 354, 9, 70, "Notes", "ExpressionUUID" -> \
"40848514-a3ad-4027-8a3e-99b74fd9641b",
 CellID->6],
Cell[9249, 246, 15213, 267, 70, "NotesThumbnails", "ExpressionUUID" -> \
"0419e096-7827-421f-a50c-2736be751db3",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->7]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[24567, 517, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"abd47b0d-9ee0-4ee2-b8f9-c031ffe21e3d",
 CellID->8],
Cell[CellGroupData[{
Cell[24684, 522, 1473, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"889c1e24-4506-4dbb-85cf-876c808b4d93",
 CellID->9],
Cell[CellGroupData[{
Cell[26182, 561, 1466, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"bc0dc463-9589-4a15-94c3-9059f9b00222",
 CellID->10],
Cell[27651, 598, 353, 9, 70, "ExampleText", "ExpressionUUID" -> \
"89ecd1c9-4eac-40fc-94a0-3422d74fafe3",
 CellID->11],
Cell[28007, 609, 345, 6, 70, "Input", "ExpressionUUID" -> \
"9c5aac3d-3d00-408b-a1ca-6df73634b8f2",
 CellID->12],
Cell[28355, 617, 135003, 2651, 70, "Output", "ExpressionUUID" -> \
"e435d89e-c32a-4351-a45e-b878f792c34a",
 CellID->13]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[163610, 3278, 102, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"0a8e1e26-c36f-42e1-8076-a219a2128e37",
 CellID->14],
Cell[163715, 3281, 926, 22, 70, "SeeAlso", "ExpressionUUID" -> \
"2b84ef79-3a12-46d0-9160-a3092154a8eb",
 CellID->15]
}, Open  ]],
Cell[CellGroupData[{
Cell[164678, 3308, 110, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"087b458a-f144-482e-938d-0bf042e2cef2",
 CellID->16],
Cell[164791, 3311, 540, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"7d6244a9-f872-4769-b86a-3930a2dab404",
 CellID->17],
Cell[165334, 3325, 565, 14, 70, "MoreAbout", "ExpressionUUID" -> \
"39214ba7-aca4-4a3f-9e66-9d2e9dbff6cc",
 CellID->18]
}, Open  ]],
Cell[165914, 3342, 116, 1, 70, "History", "ExpressionUUID" -> \
"4bcd8d59-fbe6-42f5-b7b5-7a8f20453522",
 CellID->19],
Cell[166033, 3345, 91, 1, 70, "FooterCell", "ExpressionUUID" -> \
"6555e451-e24f-4335-92ec-e7bece61aaab",
 CellID->20]
}
]
*)

(* End of internal cache information *)
