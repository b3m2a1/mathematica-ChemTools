(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47160,       1056]
NotebookOptionsPosition[     35123,        768]
NotebookOutlinePosition[     44263,        978]
CellTagsIndexPosition[     44220,        975]
WindowTitle->ChemSpiderImport
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 19], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 20], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "3dc8bae9-e1e0-4f8f-95af-7e7304b8b617"]
         }],ExpressionUUID->"3f0dffad-8394-4c68-a2f6-07db0f801f11"],
         StripOnInput->False], {"\<\"ChemSpiderRequest\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSpiderRequest"], "\<\"ChemSpiderParse\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSpiderParse"], "\<\"$ChemSpider\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/$ChemSpider"], "\<\"\"ChemSpider\"\"\>":>
        Documentation`HelpLookup["paclet:ref/service/ChemSpider"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f00c5b70-ad6b-4447-a827-0c1975d0fad4"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "540f6e61-76b5-41a0-bdb6-59bffc38689c"]
         }],ExpressionUUID->"869b2d02-8895-407e-8897-6285279ce3e5"],
         StripOnInput->False], {"\<\"Chemistry Data\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemData", 
         EvaluationNotebook[]], "\<\"Chemistry Services\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemServices", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "5d601b47-77b0-4a7d-864d-d3107b4a600c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "9597dcd1-3ca0-4bc5-8c39-dfe0c74720e3"]
         }],ExpressionUUID->"a04f24ca-4844-471b-98f1-2bbb2db46d84"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "ChemSpiderImport"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/ChemSpiderImport"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSpiderImport"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSpiderImport"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f24d9724-8a9f-4d80-824f-73cfe48c3dd6"]
    }], "AnchorBar",ExpressionUUID->"20a2b961-ce42-4674-a90e-3a90f24c5ec7"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"e3dc623b-3145-40c5-b0e8-a05540987c5d"],

Cell["ChemSpiderImport", "ObjectName",
 CellID->2,ExpressionUUID->"aa0492c5-939c-47e3-b064-1b0249e7b56d"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemSpiderImport"]],
          "paclet:ChemTools/ref/ChemSpiderImport"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "a15a6b0d-70b5-4154-bfb7-faf9056fb319"], "[", 
       StyleBox["req", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "27e793c5-0d4c-4e9a-b8e5-6fad09135274"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Imports the ",
      Cell[BoxData[
       TemplateBox[{Cell[
          TextData["HTTPRequest"]],"paclet:ref/HTTPRequest"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "5dd7808e-e5d6-41f6-9662-0b2554760e12"],
      " ",
      StyleBox["req", "TI", "TI"],
      " and caches it"
     }], "InlineFormula",ExpressionUUID->
      "d2161eda-9883-4b72-9852-3697b575b9c9"]
    }],ExpressionUUID->"6c4f4f15-fa40-4be3-bbc8-4fe514116540"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"6e6515d2-8959-4ad8-9bdc-6c68e5a52787"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "35c1c822-be0a-4482-884e-36e27e83f65b"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "f884095e-26e5-4af4-8393-e95ceb1740fa"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"977df294-d916-4635-86c4-569b9fb3cd78"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderImport"]],"paclet:ChemTools/ref/ChemSpiderImport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "2bd59320-7bc9-4ca2-8aed-c511880f7b95"],
 " forms the backbone to simple usage of the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["\"ChemSpider\""]],"paclet:ref/service/ChemSpider"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",ExpressionUUID->
  "77ba852b-9456-43ee-a4f8-d665295c84db"],
 " API"
}], "Notes",
 CellID->5,ExpressionUUID->"a8ec07ea-2b4b-46be-bd85-7d5a74a84547"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderImport"]],"paclet:ChemTools/ref/ChemSpiderImport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "a372e4cd-faec-4cb4-8a17-dc1a8c05a1b5"],
 " is part of a custom API connection independent one from the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ServiceConnect"]],"paclet:ref/ServiceConnect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "34c734f6-fc9f-4eb7-918c-972d525a2e17"],
 " framework"
}], "Notes",
 CellID->6,ExpressionUUID->"9167566c-fb43-4e61-8c86-3b13afe6ac99"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
wIEDBw4cfzn8P/4Nk/Q=
           "], "Byte", ColorSpace -> "RGB", ImageSize -> 
           All, Interleaving -> False, Magnification -> Automatic]}}, 
        Spacings -> {0, 0}, Alignment -> {Center, Center}], 
       ImageSize -> {720, 70}, Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->7,ExpressionUUID->"c03ea52b-86fd-47bf-b99c-e621e30afd62"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->8,ExpressionUUID->"0ff2dd4d-8e92-4f48-b942-240d6d177073"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2314511a-ed28-4124-b881-745f1927908d"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->9,ExpressionUUID->"64131d9b-f3f9-4e30-9d46-0c8215fc347b"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f7598158-6d60-47e6-a21e-0d2e75a4d086"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->10,ExpressionUUID->"5fa44909-739a-4346-9f9b-04f5f2d3fe1d"],

Cell["Examples coming soonish", "ExampleText",
 CellID->11,ExpressionUUID->"2e3665f4-8b8f-44fa-89dd-88436555c861"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->12,ExpressionUUID->"cc5a33bf-675d-4814-b763-6ca25ec42677"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderRequest"]],"paclet:ChemTools/ref/ChemSpiderRequest"},
   
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"b2a06a29-e2aa-453b-8902-6736135a833e"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderParse"]],"paclet:ChemTools/ref/ChemSpiderParse"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"e607e806-deb5-42b6-9279-3a5af69a7670"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpider"]],"paclet:ChemTools/ref/$ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"2255a064-c0cd-4ca6-ab9c-b2ce2d3f782d"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["\"ChemSpider\""]],"paclet:ref/service/ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"babd1ca3-6cc8-4d9d-8795-8dffcce68dbb"]
}], "SeeAlso",
 CellID->13,ExpressionUUID->"95ad94c7-6e3b-4639-93f3-71229127af02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->14,ExpressionUUID->"ff67da1a-61fc-499f-bad7-0a4dd4c5472a"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{92., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->15,ExpressionUUID->"07ccbfbb-b252-4f4b-83f7-bec3728f509e"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{112., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->16,ExpressionUUID->"6f8be703-4c34-4a80-a416-e18c7d463f41"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->17,ExpressionUUID->"ab76e77a-772c-4591-b6ec-ae5fc68a2fb0"],

Cell[" ", "FooterCell",
 CellID->18,ExpressionUUID->"47edcfbe-6cef-4357-ae04-0caecce013f2"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"ChemSpiderImport",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 53, 6.634659}", "history" -> {"11.1", "", ""},
     "context" -> "ChemTools`", 
    "keywords" -> {"chemspiderimport", "chem", "spider", "import"}, 
    "specialkeywords" -> Automatic, "tutorialcollectionlinks" -> {}, "index" -> 
    True, "label" -> "ChemTools", "language" -> "ChemTools", "paclet" -> 
    "Mathematica", "status" -> "None", "summary" -> 
    "Imports a ChemSpider HTTPRequest and caches it", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "ChemSpiderImport", "titlemodifier" -> 
    "ChemSpiderImport", "windowtitle" -> "ChemSpiderImport", "type" -> 
    "Symbol", "uri" -> "ChemTools/ref/ChemSpiderImport"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[588, 21, 5322, 130, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"e3dc623b-3145-40c5-b0e8-a05540987c5d",
 CellID->1],
Cell[5913, 153, 105, 1, 70, "ObjectName", "ExpressionUUID" -> \
"aa0492c5-939c-47e3-b064-1b0249e7b56d",
 CellID->2],
Cell[6021, 156, 1067, 28, 70, "Usage", "ExpressionUUID" -> \
"6e6515d2-8959-4ad8-9bdc-6c68e5a52787",
 CellID->3],
Cell[CellGroupData[{
Cell[7113, 188, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"977df294-d916-4635-86c4-569b9fb3cd78",
 CellID->4],
Cell[8639, 226, 600, 16, 70, "Notes", "ExpressionUUID" -> \
"a8ec07ea-2b4b-46be-bd85-7d5a74a84547",
 CellID->5],
Cell[9242, 244, 603, 16, 70, "Notes", "ExpressionUUID" -> \
"9167566c-fb43-4e61-8c86-3b13afe6ac99",
 CellID->6],
Cell[9848, 262, 18244, 317, 70, "NotesThumbnails", "ExpressionUUID" -> \
"c03ea52b-86fd-47bf-b99c-e621e30afd62",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->7]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[28197, 583, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"0ff2dd4d-8e92-4f48-b942-240d6d177073",
 CellID->8],
Cell[CellGroupData[{
Cell[28314, 588, 1473, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"64131d9b-f3f9-4e30-9d46-0c8215fc347b",
 CellID->9],
Cell[CellGroupData[{
Cell[29812, 627, 1466, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"5fa44909-739a-4346-9f9b-04f5f2d3fe1d",
 CellID->10],
Cell[31281, 664, 114, 1, 70, "ExampleText", "ExpressionUUID" -> \
"2e3665f4-8b8f-44fa-89dd-88436555c861",
 CellID->11]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[31647, 675, 102, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"cc5a33bf-675d-4814-b763-6ca25ec42677",
 CellID->12],
Cell[31752, 678, 1918, 47, 70, "SeeAlso", "ExpressionUUID" -> \
"95ad94c7-6e3b-4639-93f3-71229127af02",
 CellID->13]
}, Open  ]],
Cell[CellGroupData[{
Cell[33707, 730, 110, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"ff67da1a-61fc-499f-bad7-0a4dd4c5472a",
 CellID->14],
Cell[33820, 733, 527, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"07ccbfbb-b252-4f4b-83f7-bec3728f509e",
 CellID->15],
Cell[34350, 747, 544, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"6f8be703-4c34-4a80-a416-e18c7d463f41",
 CellID->16]
}, Open  ]],
Cell[34909, 762, 116, 1, 70, "History", "ExpressionUUID" -> \
"ab76e77a-772c-4591-b6ec-ae5fc68a2fb0",
 CellID->17],
Cell[35028, 765, 91, 1, 70, "FooterCell", "ExpressionUUID" -> \
"47edcfbe-6cef-4357-ae04-0caecce013f2",
 CellID->18]
}
]
*)

(* End of internal cache information *)
