(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    468846,       9808]
NotebookOptionsPosition[    431141,       8959]
NotebookOutlinePosition[    448604,       9330]
CellTagsIndexPosition[    448561,       9327]
WindowTitle->ChemSurface
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 151], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 152], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "09961842-b3ee-4e7d-b065-47e2e9122e25"]
         }],ExpressionUUID->"c5bc7db9-6224-4b29-a99a-cebda729492e"],
         StripOnInput->False], {"\<\"ChemSurfacePlot\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSurfacePlot"], "\<\"AtomsetVdWSurface\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/ref/AtomsetVdWSurface"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "30b05179-e89d-46fd-98f3-a687b891b9df"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "29554556-9479-443b-9407-a2a0351f2001"]
         }],ExpressionUUID->"08545cd3-dce0-4f09-baf1-cf65b5789bb0"],
         StripOnInput->False], {"\<\"Chemistry Objects\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemObjects", 
         EvaluationNotebook[]], "\<\"Object Applications\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/guide/ChemObjectApplications", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "2a8c55ed-4fcc-4511-976f-3c4b0cb4b4e4"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "6c70b646-c71e-4a46-ad2b-ce1286da2f2b"]
         }],ExpressionUUID->"d8a175e3-258e-49ab-b2a9-801b9000b88e"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "ChemSurface"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/ChemSurface"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSurface"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSurface"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a06403fe-14e5-4aa4-b394-90e56330d962"]
    }], "AnchorBar",ExpressionUUID->"d1d22923-fb97-446f-b073-f9be30b32d9f"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"cc13697b-6a9a-4993-9b40-026722d3557a"],

Cell["ChemSurface", "ObjectName",
 CellID->2,ExpressionUUID->"c1909315-5ec1-44c5-9a1b-1d24fd8c8400"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemSurface"]],"paclet:ChemTools/ref/ChemSurface"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "69212681-6ea3-4ec3-bd9c-1d895cb12a4d"], "[", 
       StyleBox["graphics", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "421ddaa7-065f-4a9a-8146-d7a22afa13d5"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Generates a surface from ",
      StyleBox["graphics", "TI", "TI"],
      " using ",
      Cell[BoxData[
       TemplateBox[{Cell[
          TextData["BoundaryDiscretizeRegion"]],
         "paclet:ref/BoundaryDiscretizeRegion"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "0925ee98-0adf-44b3-a3b0-9a581f09b614"]
     }], "InlineFormula",ExpressionUUID->
      "9a718886-1756-4d78-bcf1-c6dd5c98e209"]
    }],ExpressionUUID->"9fadcb76-287e-432c-b001-a395bdce8a85"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemSurface"]],"paclet:ChemTools/ref/ChemSurface"},
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "1031f763-d6cd-4ee3-966d-fd3d848d9fe4"], "[", 
       StyleBox["obj", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "adac904c-7994-4cab-968a-eb4b3f56be88"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Generates a surface from ",
      StyleBox["obj", "TI", "TI"],
      " using ",
      Cell[BoxData[
       TemplateBox[{Cell[
          TextData["ChemView"]],"paclet:ChemTools/ref/ChemView"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "50719584-fed2-452f-80d3-089366e0fdba"]
     }], "InlineFormula",ExpressionUUID->
      "99d9a657-001b-4b3b-9c17-cbcc4549602c"]
    }],ExpressionUUID->"6bc46c96-3e12-4297-bd45-4bcc787205de"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"6fcb0242-0b59-4dab-af75-abc23b21b2bc"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "a6fa83ed-c8f4-4018-b904-0f27e72be399"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "54c6bb15-0656-499c-8c2f-ef03d912d0a1"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"1d7b26cd-6c0f-4ac3-86b2-7a777daebeb2"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSurface"]],"paclet:ChemTools/ref/ChemSurface"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "0a585cae-772f-4de6-bcd8-d54c6e03a87a"],
 " can take any ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Options"]],"paclet:ref/Options"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "2e01bef3-37e5-4304-a53a-2f697c87f24a"],
 " of ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BoundaryDiscretizeRegion"]],
    "paclet:ref/BoundaryDiscretizeRegion"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "b52e7a96-8007-4dff-a66e-64c7292348ea"]
}], "Notes",
 CellID->5,ExpressionUUID->"e417721a-56f3-423c-99a2-d1b397299d87"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
           "], "Byte", 
           ColorSpace -> "RGB", ImageSize -> All, Interleaving -> False, 
           Magnification -> Automatic]}}, Spacings -> {0, 0}, 
        Alignment -> {Center, Center}], ImageSize -> {720, 70}, 
       Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6,ExpressionUUID->"7bf2ef8d-abce-4abd-89ab-b5404c76d390"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->7,ExpressionUUID->"1cfd3638-969d-49a3-b218-b59ce5e966d9"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ded65d08-3881-4151-9671-53e65e0fc063"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->8,ExpressionUUID->"438ab227-3c01-4823-ab7e-bff7c465e8e5"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "bb5e0fe0-3939-4bd9-b811-18e6aa533a2d"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->9,ExpressionUUID->"c16850e9-a360-4d9d-a820-14b2a4ccd90a"],

Cell["Get the surface for an adamantane:", "ExampleText",
 CellID->10,ExpressionUUID->"aab16bdd-7e7f-46e7-aa4a-e814757e55db"],

Cell[BoxData[
 RowBox[{"ChemSurface", "@", 
  RowBox[{"ChemImport", "@", "\"\<adamantane\>\""}]}]], "Input",
 CellChangeTimes->{{3.701105051355097*^9, 3.70110507420894*^9}},
 CellLabel->"In[1]:=",
 CellID->11,ExpressionUUID->"e7220a35-7819-49dc-83d6-80558cd3df7c"],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1:eJxkfHk0ld/3/53vRRRSiiIlEYXShM5RGQqVigahUkkkCpmKVGaaqEyNmjNL
KM4TMmRIZMg8z8I1X/dev/td6/3cfqvPX9Z6rdfazz777LP3a5/nPlacunjg
DIlAIJTSCQQy7+8lD6WTd9uFoMaKwbwDmqPgcRrWbsCqQhkB87y+7xWEOnu3
VcTmjYMTYjrSM1dqUXeJ3LmT3YJQeYXMuL0ZEzCtdxSpqSSjMuKDwnjzedCd
/kw6uPsPKMmWWuoV3IlElIQKiMk8O1cYHj9+jYGsgpWTVY0d/2NHMjVA11Si
H0nfvbc6alYIvmy7F7neYQAsZDiujSyPBzg/lJxtovFuBJyQEm5VuZPBx988
lH25KLgPNJB/z+ltqgJVV3aZqCwUhmXH/cWvdfaCbrvVQXDFT6TtM09xj7Mw
dA35ikhZnUDvRtdvslgbii3YcPpI6TxYYXD++c6kTnDgsmvUwIZBvp/UkMO7
4hxGQEV00CHJhmFkuvhKhOotIWj5VrMs6EQPEKyZbPo4NopSTjg21pCF4Mhv
av6rykaQJJWu8t2+CaSxS5jcIUHoWJ1uz5btAEnLFsYsMm4FChtC9I+2CsKv
qn7T5LQ6UHK3+UOxTDswYUkc3Fc4D7K0VQCitYMH1UU0xfZXoJK1+J5PlDDf
PiEsUTt11U80LHut7fcLYSivaz+krVkDhjpbX23sbkdFvxPnTpTPg7KBTuK3
OeXgoehjM8fKIeSk/X2YFSMEQw8Sz5YWNoG84Sy/42wm0ptlZ8nz/My5afMo
Vr8CVF5g0GSDGsCSNRlZQo7zYM+LilNvtv4AdmRbevjSXDCCCs7OlghCIue+
c5d/NGBSvG73EmuAdLgS7fBRYXhCTGnKRyuL7+fjpq2DF5cLw/gZqWubXrgA
g9H0WfmSDkR2tz0vJTsP+obJHPDQSUG5DuXo/s0hfvxxO0qD6ZGn28fQpdl0
jRimEHTfOaqfdC0DEX5+nYt8ngjMsDdLf8wThCdDncv2K5ShXOIfOdmin2D4
UdQ8B15+6kwsYg5eL0HHlm+fDPtRid4Evt+ynJdv9rV3ub9MfyIBo98rnLid
KG5H4xeRfUKwyuq96suiCqTrmHpgzfQgIg/qRI+RePuus1F+oWceutXQZ2u0
fxR5j52M2BgsCGsX/pQ1b65FYQu+3/3c+QTMhCVtWftVEE5Z31ndldaMUkIr
Mxs7alCY1tSrT3aCsCvj7UldZiOyVDMUY8M+1Pz2t4GopSD0OrbX0eRNFVrn
WiBacmcELZYpWKDaxYCvQ40sH/ZNgWddLhfPxUwBO2IEVjyfAY0irKfcbVkg
7aRHVKDtFNi7z+/Ay4UMeHMyPmJvzxRYHHhZSN5lFrzotzzhslsARod+Hr/3
cgoY3t9Y1F7IBFXiooFZEgwIG2BMjswsCP2wYGVM2RiI7hMrlqEIwL7KIbp7
/STwlQ6fTsH6QYb1rhTQT4d1qk/nFyezgL3WpkCn9kFg/ytK8dcnBtwm1t6L
7k6CS/N+Br+nt4CGMUeNh3Z0uF/kqxB8NgPEr4t9v57aBlIW+BzaZvDXT6v/
zvX+Kf21YY/pUD84LlaQxxcrlrLSTMsFKdFeobsEGLAjNdYDG5wCR+317lvY
JyDu/blPnqkM2Cpe+2f773Ewv3vHtmw6G+zJWD7RokeHvy1XBS3JngR/dliF
mLzjgq5mA5lWQIe9a7zsfKWY4E64xutEOwL0C1T2TyoQgG6HQInX1BjwO7bO
lXNqChAV5U0JywVhnJJT8NW9Y+DdJn/tfUuZQEI2oeNClgB8dkf09fqTTLDT
NGpBY1MfADeKsP0NAvAkITPA6hYTcFbM2+IQ2gSuJEXLBK35W/fwOib5TSfw
SxMD3uISb5tcmARwg+6b4dAShO8j9PlzhmE+Bc6pJc9kbOpEdm5G6g7hAtD8
we66s/ajQGY8pdNzCROpRnr+6VgiAO+sWr//eNI4+BVeMl5vMIQIhaMHMU86
lAwh/vJdNwZS+9HCjw5jCPv1MatvmwDcpq3/4RH8A5YuVr5nocsGfQ5HPGsO
0OGFez9in9v0ANWsU12+9gQYR2z6EQYFoTs7+CLt2DBwC4158fLyJLDOKa+z
sRGEdjIVFmLnBoFDs5hCQ+co8J1RzSxb8rc+Q7c0p/xj/eBS4bPtK94JwmRM
Z5tl2gCQLcC+mko2glq5Z7MCvwQgevubUvmqByy00PXttZngx8ExKZ42tH0Y
LCen1H5GEyjyuUWP7g8aVNbuTJOP6AFfl9VMbouc5vNdlT8vUX7SATBzWZ3R
F1wQq/rytE2eAFTZcEpBYUUH0NzZXVLQOgWSV7dmjKozoFzPuVTfmAbQmvwl
0TeKDXRaDxYPCQlCh1vEtZU7O4BWdEHcdclRoLZyRufsdUF4YeXhW71NzWDX
t91Kb572go9Lbg6F/RSAsXlbFDqLq4BJXnamoeskcr8r1pmcQIeeLwiVx+/U
A3019wJO6zS6ZhruJSTFgC/a6s7fTi4Dgfv7Ex6qzgDHj6emI4UFYLpRtDvr
VgXoBzFykkZM/rnG6+HziAA/79Pj4G72xLxxgiB8p+vv0vmxGHwatxyQ3DUI
hOd3j856C8LuHfX5F6l5gLlmWOVDfSewvWfry/QSgKYVvpcFn78C05eNX2lR
J5FlZHW5iCgDPleO1s3R/AyYBwcOyXGm0Nu1nscfZNOh15VDtimcTHRr/rXP
wRljoB45Wu+CAlByvpVd82AyenFTU92sfQhcklddxOygww3RTz7mqv1EW0Vd
M8GeUSCR/u6KwEcBaDn9OX3F8u/o8U25gpipdhDx4NTl9IsMaL0x8cLw20/o
F1143M9+Eh3eV3x5YZoAbOizuxFLLECMeLuL6d1jaL7k7e0LKLzz8qngtDm1
EU3WphFFFAf48Vn25vLo7LV2hPffX1R4cJqX52LaLYW7j7Whr2nJ1cknHyLD
R9+EFuwTgGOUzA3+1zpQoshUY7ZjBTp2LHnBbBIDMvM9Kzq/dyBPrMzUV/0L
Usyelz9jIgDbsEc1wnUd6JIB916TeRtau/DZ1s+lDHjP8Fx0XnQDIpRfcY18
NIqyQ9Z2aFcx4C6ClWPoh3bU8yvznm9LPz8//ZsZLLtd3Qjvj8wy1SWdvnQo
9jrqapF3N4JRm2ZSVvcgd7HIkExzBlw99PakHGMC6e51SPLbzwTG143Cmgbo
cGvOwuDgKSaKQC+/2/WPgRZ3Vi1pJS+v7n0c7jk0iUJ/YpdLT04AeT9t2803
GVB49OzigvwJZNs9OzBX/wcYOOdIOy7g+VkoDK9eYqI19KrRyEsj4Hy3Zyln
NQNKU03LrySMoY0LlXdO+/WBkyKVqzi3GVDkcLu+aPcUWn5m3coe7b/5eS/w
sORTVRbqfBxlQtOeBG++Sn3pe8WA+ltXuXQ+m0YV7O6CbUJ/wIXZK05HbRnQ
yYu+46DmFIrxmIgcfdID0m2vPiHfZcDZF5t1d92dRTt0Wlblfx8BuRSuxiee
/59FtOeeZrLQn+B1f/YU9YEPot4P/ANo0PpUnUbtaw6I5mrl65+YBM0e0YYe
rmTYlLP8yteNBLgyITG1rnoKpFf2afXtoMLGEq3Nqm4c4LrXQNrecBZcsbgk
v/4EDX5zWPpYYIoDTFy/gE7aCPBn2lQ7qVOg/9VT53ZBApz/ILnuiPcouN58
TESqlwrbsj5MBj1kg3MxPldOnekCfsbBoc5rKFAlLU5ldPMcYL/eenlsay8w
tbPuLRCkwXJWaE7UZzb4+rupMkG1CtxeNhqep0KBL+cmDvnIzQERhl8MxaMB
DLVVzoN/qJBlZSB7eRMb5AdTdq9nJiHW3TgPmi4FZpc/27p8iAtaoq1CboUm
AcmBqLleHQq0YLaHYb84YM2SA6vFOktQV0xduJMWDWp4jGY9rJ8BBYXaX7TW
cUGMS6Rk6UMKFHf2+ZBQNAsI52jrnL9y+fHB+/LMvT/yac8J8N6tlvBNvD6C
43jeSkoOLlTsp8Bpr9M9pT9nQYTcpy+qrnXI4cf8mBS7v3y8f+H2be3U2hvG
poHNPzjOt55S72ocHODjeN/cX7rPU6GCCH8/gesG02hwZHzBlpeRk2Ak45Z+
wvAfRAya2rSnhwJjlIsf6n8YA0NSXnsKw8f5dvB+9HRqfrrIDBG23XmWK46o
ML9RaaZPaASseBbvRFWZQlv2MeLCusnw2PMVO82/9ADr0ZUeh0/MoJnAi1k5
kA57qFcbFeNaQFiuxcfCmDl+3HB9Lnc/UDZfhQiB/65Hom0UOFe7vXzPl0bg
OG8nW34tCx12O5/xGqPBXMOLfVfsKsF+JbCu7jAXFHgyaosmaPCM27Ic7vwk
MGQhRoj6Pg1eChyVz+2kQg2RxrLX4ylg067frhsM2eDKm/vHNBOpcCvYfmI7
JReEbZV+vy1yhr9eRcnGjdqP01HIq9T7X39Og7RUszJMlQ7VzfpPRr/5ieYt
evtg6+YxkDh6fP0PDRqcM/wYYy5RhSbiP7OWbJkAd27Zmr4bocNUvw/Oo9t+
ojCxxR7C2ydQR+aqNbmPadB7Ufmc9A8M5YekGSm/m0I2wgR2UiYNFiqcIxu2
16OkWPF3eqZMkJ4fdVZuBR0uFDezmZxtR7gewP3EcakUNS/DJiYov5OQeWP2
Lx+v5wNpQbsVuX9xXEetO1KZ6u7zF+fPa6aHt618SYVnKk1d0wsb0NynhD1b
C//mA86nRm3SXc4aRRz3p/P0mFRo5dRFvGI+iDakL1Nde3MKXLn0hHG5kQIX
6grLvOrqRXPVK2R2np4GzX/CQyLdKTC3+mHRBvIQEtm2uOj+vVngHGsm/3gR
HeZnX36XuewPOjSq1313jgmUn4BjpANUqFPiR3vu1oP6Fh8fOhI+AWweC+6e
k//Lx+PjbvPKaYJXl3Acj4PzyjmhYw1UPo7HAV+Xj1qzwGtaP7+/4Pi3//gx
N+NfK0d95uOXfBfELrbsQ/+eUw/Wa6Nijy5+PK0NsGNRvHV51G0U97vDRB3r
1X9JMKZBviFrqDWJCi/6f9x+ymMCwY+7b9QoccDZbC2RkbN0uC2tyDXnyTjf
/5ySe4UNSjQY4rfhtaTgJDrWe2ZN5dtisKbofdOCzVTY+1nHxd54DAX3Ciq3
tcWjEEZgvGMAHQ6n6O6tz5hBSltnSr/kTQNThYbUpzlUKFvi/NTi8yzSqkv+
8EefA+RTPtzwr6JDs4AFY8WaLHSR1re7jtwKkhcZ5tevpcHK1JNO8otn0dML
3wpSFheBled1ik9nU+CVpZ0RTTVTaLGe/JGIpW5IANvWG1hDg/2W3ZnXv87x
zxEen77/8PupMnErytmgPMaq5v/mIxzH932xmmr6hum/OL6/AYS8uEIqbx75
D8fjI7EnIjl4HwU2HW++rZUzi86+SFFvXOqOwhvrnkldoMJDCn+a5ntzUYux
oqhhQB7fn00Rk/c+GZEw3M83tfHrzXJpMHB2eMtHMgnLPj19/rnKGEgX3159
l0SFr8MGrE/akbEDBM9d+t0TINYoilDuS4NHw9v7Nh0kYePptClXi15wt/Xz
nUw2BaZdbmAXzhIw+ZDcNy6HSoGj3Ndky6dUOLVsrdtGJRI2JL/ZoOp5E3hL
ufebjPH6gviW7daAgr06c/JXFmcEDPRsT1oVRIFR5he3RPWQsX0dtmond3WC
pyjYS8eODIOI3ltEd3JB2PPXsaWVbLCl55L/q4VE6Bns9mBRwBxo3UO6NyTI
BgLHws/sNCbBParEYZ0vs0BcZ1+V21ECHP+x35UoRYST+pMfnycT4MNq219v
uibBjykXF/NkIpzqIU8P1BHg/Z2rPuuvZ4L+nrUpCX+I8FZ69JOagwT4duf3
L9OlfcBLcGXbkxMkuGLzxaxrxgSYNeI+fXR7G7izLWandw8Ralp1Hb/1igCf
9hWm7D1QDohFSo5bjpJhweyX7QK3OWDHOeZNqV31SNrMWEHFiQRZnzS8I6zn
+H0Tx3Ed0lCcpHk2v5WP430wi3kaM0FEiOOL3o9551uy+f10ovrGWFE9CV7S
qtdJOjMDJEM2EdQP9qNPu7TchK0o/L7pEaB3ZYEmCSoGh1+JP0qEy9ZcLLmV
PgY0pF5Pr0UkuFsycn05gQSDi2XeJsUPgy2WWtVKFDJ8Jyl1SGSIDF/Jqdy0
fjgJ7mPCWNTICFr2nz+4fa2MLVdI3hOIZN4xjKWSoayCwDZm7BBYsaciN/0d
Cbo93ssWbSHCsuz+ZWWPe8Gz4bfvf86SIIl9tZ3TR4It6SLckTvDwNP/Zqmy
5xRKOxJVTllLhPaEoEargB5wM0CatNZxGiV4BMnvFiRDMZNnwfBSN0j4VVRs
lULixwfvvws2tPmnbSHBE9o9jR6jRDh0ef7De6mNYMwmjxOZNYPi3Z3LshIp
0L1O90hycT5gslWiyc1zIN52/eEiOxI8PKn+LE45D9S+ur+JiBFgrbuZist8
MhwzfA6u1hQBB8cO7bmuGf5+yY4HRNwWeIDweVP7kpDy6ZMUeOdZ253Scz/4
dQPn4zitrzpHf4wFFlG27qLZkuF5OCjodxZD8EjqQSXLaTRSci3k5Usyv0/h
diZ8Cj+bVBHhoZI7b2rkOlDJM/aluGE2sP6ypX6z1t++htcf+ZWCL7V9ec+V
fGl281Utmnn0jLLizQTff5wvnOHm5JUyilgoeMfFxSR4fjFLq6Z0EE2JPopY
d5OnN5dUZb16RIDat9n7B7R70cL5jjLEE3Pg07dh/QwHAjy//HD1reYR9NRg
p9u5SwQ4VCsV0RVIgV/mKNxcj1G0K6bWvU38b/4LzLP3OurUz+87R6xr2k2e
kqGE8W2FCfNhRPEW3Gwx28jnfz90q71g+d9+pOhd1uIYROL3Qfx+AOfHxz5u
dX0w9D84ztcoJNOTTo7/D+7+vP58vTILbclTdEtRIEO/2rUa9F9MdCDYOPTM
xBwYhZSsL7uJcDzXWWZZziTy8Y7feHUVEe7/snnvY57+D1kdyMqVnUSrw07J
DZiVI+mXzprInAzVUy4vSowZQy3Km/ehgUa0xMFsX5sFL6+qD9l+WD6GqoL0
w2UsmWjvQ+JH99ckWCJBKd5/iInmf/xy5o/WMLI4sYshx8vDZ8vPJtu+nkQH
LIcib+gOImUDXaXeYTKs6bGmNiePI3bV4IrKLRPo6bKVmypbyXA3FimgGjKO
hM6NG9zvmEFPHznQXGpI0AS0HAg9NYJKaJdfL/vCQndkn0Z5eJKhWspRB//t
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
hw3NBkCse/xcrd///T544I/QNyq2YDLlcu2RP+BeWnBt9QcmMJ8m5fupUnnn
8ZvB+/ODINm6qFAB6wW1H0LNqdV/n4vHYdURR5+rjlSMNPjimq9xD6jJ3soa
1+gAlye8ksUeULHEKMsrEw9GALNRz2Szwhf+PuJ2Eh6IDJma1YCMW5e2TkpQ
MPVTv3L7do2C3jjreZSNU6imG3kfzaFiteltMZo3+sFknr3Rm5Ms9KHCo2nc
iIa5Dq0oH8/tAt83LVosTKHA/NoRlcJUCpY2eeP3yZx24PDnnuev7L/xuWNa
kq6R3sP3P/18Uy55IQUzM/RjazM6wIyYm8+lb2zEKAq8676Xir09+nP6Q9Mv
sCMp/r1RIgf5509GGPlQMO9RiXUc2RLwPkbimMQRGvRrzmL0bKNgLzTCnj8/
iYFTq07Vty7gok3pnsGeHBLmKu0/eleoFm1X2gqr4v/6Q34hnr56awnC99Hm
0N1nmxIpmNz8jWellOqR9pJl/RtPUP76/59+Hq6Krf5ZwUb9T0Z7L41TsB1L
RryfvmlFmuuEL63QIUPZzFXpVTx/jLZI/nwN29Ct9OsCXrOzCLfjZZ3B7E+u
59/nK1bvV7ttTsVMQ5lBemc6kdCi2185tix0yIlWocElY6VH9WqMzHhz5otM
S8doEvxyZmpG+iQFq+9N3z1vpAfJGn2MvPiVALOU62+sKvirG/HzuDl+dvMZ
bwrGzveksG36ELIMBDLnZ4H+u02Xw+6QsX+/s8P9fJCnoZjh08XHWWutJrxi
KNjOu/veFLn8QW2LR3pYvqOAG1OutiyDjJVEiTDbcvrQ3IT2hdRp3nqFt8wO
cCnYytmceY0aI6i8aAXrivkMPw64HlNfFljovWEELMirT9gnSsEMVwobBPdO
ICf9IiO501NI6nECLOPFGdBHT4gSp9HpQ9N3Bi+PgAT0XbyEV581x2yVlH9O
ox0FYTN3T0+gcBLz3LZvvD53sOl3pdEUGnr/OtZNboL/XFwvLSZ+jBbbz0Ty
TlmfPPMomPBdYoiREQe1vrtre3vNMPghynqzToSCMS/kJ+e1zCHbPXv1EhVH
EbAEQ18EKRhy+TjQe5GIRTiTdORo/YDj8m4iYAsFG457ZtpVSMJcxt9ts1Xq
BO6PREjHtXk6yM7hqB6XgPkLy8yKWA2jlvYBtzodCpY86vztsBcJW7feKVz2
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
2uyP//M+/A/gDLEu
      "], {
       Polygon[CompressedData["
1:eJxNnXnYjuW3v73D8z4ahCIRQiFDxgoZkkxlVjKLkJBQ5inzGFIqSihDpooo
iQxFqZRKpZLmQbMGfZvb17mv8z68f6xjnZ+1rnutdd3t/T7L7/jt5yl9w+D2
t2TmyZNnYf48ebKCzwiGTjg7WMpYhkwsR04HyxvsFJ/JayxLn6HBpwY7zedP
1bLN57Nmtow/Xcv2OfgM82HcPAWCFbR3AWOn6NMafGaws+x3pnaq+ULWPks7
zVxh+xXSTs81A7mzneV0uYi9CspFg50jn2Muv0z/YvY7RzvL+Ln2K6YVMlfc
vudqhc0VNlfCOQrLJa3LHOep4VLWLakV81xp65bSzjVXxvqlteLmips7337F
5Quse55c1nol1aWMlbNeoksbK2/dRJcxdr58YbAKwSrKlYJVNnahTOyiYFVy
6SrGqgarlktXM1Y9WI1cuoaxmvLFwS4Jdqm9LzFWUX+hBtcKVtu+tbRK5uvY
t7Z2kbnL7FtHq2qurnNcplU3lyXXleup4Ux1TWMw/7ta31x9YzD/O9cg2OXy
5Z5NyfXNN1Rf4R15D43U8JXe8wqtlucae88rtdrmmnjPxlodc029ZxPtMnN5
zZ0i11XX9UxT717XfD7n5k7NnR/dTJ1wA882058hX+W5q71PI7llsBZyi1z3
beH9WnmfFlpj4629TyutibkC5grKTdVNPdPaOzc1f7bzMWcbOYmh2zp7M7md
c7SUrwnWXm6fa872znWtPdtrrY0zX4c88e9ZQeMd9NfKRc3DJZyH2a6Tkxi6
o/O1kTvZ7xq5S7DOcudc83S2X1f7dNY6GC9q7jxjXY3Rs3uwbnIJNf78XLmO
5ntYt4t8vbU6q5MeXc2dp79Ag3sG66W/QS6rLus5uLeafDmZWF91wn3U+PJy
d+cvb7y7fKP1bpD7WaeXurexvvJNwfoHGyAPDHazsZtkYoPkW4xzfrAaHuK5
W7SBueqRG2qNgfKtnhss3+a5W9RDjA2VhwUbHmyEPDLYKGPDZGKjg43JpccY
GxtsXC49ztj4YBNy6QnGbpcnBpsUbLI8Ql1RnigPU8MV1JX1FZwliVVRV3aW
kcaqqas4y2hjNdTVnG2ssanOSWyKOuHxnpmirylPCzbds1NkYjPkS7zTZBl/
qQbP9I4TzdezDvXry/WsOcUYPMse04zN0l8uNww2W75cDTey9xz9TPkOzzT3
uYbG+Bs4V26uhufliX+7G8n4+Voja7b0DHn+Rt3p81fJ1F1gfr7n5xlrp04Y
f7eMvytP/BvXTubvzUL7tJXpcY/5uz1/l7FO6oTx98n4e/PEv1md5EV54t+1
5O8berG82P4dZXrf73P3WedeYz3UCeOXyPgHgj2ohq+XiS1Vwz1lYjeo4WV5
4t+vvs7YXb1cnXAfzy7XPyQv9tzDwVYEWymvCrba2MPyEv0qeZUzPyA/EmyN
8z6iPWh+rfOu0ZaaWx9sXZ74t3W9fqm8NNdzN3rvfvIG7UafX+Y76CfjH9X6
efZR703+Me/FfR9Xw/3lAfIq9SrPwzer+3vHVcYGqRPeqN7oneFN3mmjttbc
WnNPePe18mZ7MuMW9ePOBw82v9nYUOvS/0mZ2FPWf1LbZG6Tua322yQ/bU16
blNvsd8zeeJnzGDPPKN/Wt5uHr5N3i4/6Ty3GXtSv0PeGexZZ9qp36E95Zln
nRG9y77b5D3Bdsu7zT0tM89z9tutbTe+N9jz9tmrf07b4bnnnQm9z+f3yC94
drf6OWN75ReD7Q/2ksxn3XB5uLn98st54ufvK+pXjMF8/h4wf8AczOfvq+Zf
NQfzGfya+dfMwXzuHQz2uvy6ZyfIr5l/Qz3JWV+S8ZM1+E3v9KL5qT6f9Dlk
rYPmDumny3y2vSVPV8NvB3sn2GH5TTU8Uz3TOeB3fXaW9WYY4zPuPXmWGn7f
WtQ/oj5sTXiO+feNfeCzd1hvtjE+247Kd6jhD332iDxHDX+kxs+X+Qz72Ofn
ytT9JE/8TJwv4z/V5lvjbs+Q5zPpM+vdKVPrc/Ofev4TY/eoE8Z/KeO/yBM/
2+6R+dz4yj4LZXocM88zX6u/9Nlv8sTPv/s8843+mLzEPLw82HfBvs0T/2Z/
Z+wrey8395X8fbAfgv0of61eKX8vH1PDK9Sr9SvsncSWqOHjeeLnDH+bf5aP
yz+p8RvkR+VftA3mv/M+v8r4E8YeVf+m/8XYL2rsf57/3Ttx3z/UP3ov+HHz
vxt7wnmZ/085iaH/8i7H5b+D/RPsX+f5x9hv+mQe+L9gGRlxtl9lfPL/iPmr
Z+DMYFkZ8UwemVi2nMqIM3OnHPUf3gfe4p1gYludn7ukMyInMXTejHgfNHxK
RpyZe52qhk/LiDOeYuw/73a6c56m5TGXz7lP1zIzTt6P3BneKVPO7124UwF1
jveBt3mn/MYKZsTPuZ3egzuhz8yIOuFnPQvjz5Lzeq6Q9+GuhdXw2d6nkHaa
54p4n7O1082d472KaPnM5TNX1Hvmk4t5lwLeLb8xPpfRCeOLy/hzM+JnKhou
kRE/d/d6T94HuqT3TRjP2ZI+c558ludKec/CcplgpeXSud5Dae99QbDzvesF
+tJaEc+QL+v9i6jPMVZULuedinuvc43BeHaFfXL5jLgzoC/MiAaX9068gxe8
J75CRrQXPF/Be5Ov6Kxl5AvUlYJVDnaRXCVYVWOVZGLVglXPpasbqyHXDHZx
sEusdbGxi/SVNPjSYLWsc6lWxXxt69bSquXqT66OPavJl1mTvnXVcD3rXqZd
6rn61q2n1TLXwPr1tdrmapu73H61ZXazhsFfkRH3HTTMXtbIPL6hzF52pXl8
I5m9rHFGzOOvlNnLmmTEPL6xzB3ZxS7zvk3UeJ6BXzcP1/P+xN5QJ9zUd9DU
O8PNvG9TrYG5Buaae/8GMjsW97/K98A7gA9Znz5vyYfkq619tTWb6tEtrNtM
ZrdrGXyrjLiHoVvZA37T/DvO8K71kz7o92R8C+vCrTPiHkbdNtanNtzWMx94
DibG7tXOPLmjxtsHuybYtXKHYNcZay8T6yh3yog7H/07OUfnjGhHnIcd7kPz
Hwffxf5HZeboan36dlPD3e3XVeuQay5yPZylg3y9M3WWP7Iv3FONZ0+E2e16
OdfHMjPdYL9ucm/7dVV3N9ZD7pMRd8tPrd/HHuyIcF/zMLEbg78pWL+MyPhe
Mp797yvnYcb+wQ8INjAjcl81zN7XV/+lzA55k/Xg79T4m+1N/W+d5Qd7DJTx
7F0/yoOs39/8LRlx72O3GiwTY6f7yRi9hmTEfvAJNbvWL55htxoa/K0y/oRn
Yc6Tvy3YMM8NlYkNl/9w1hHOzbzwX87FnCMzIhP7R/2vzCzowZ4Z6Zxo8hn2
ZcYsOcMZ4CwZny1nO99weVRG3I2YdbSeGeG89mS2MXJe50OfamyMsXEZcS8Z
mxF5lHqUvZLcePMF7D1BP1q+PSPuVcl+Nca+Z5obo5+YcXIOuLB6ojF6TQ42
ST5DjS+aKzfe/JSMuCMVcI4pcnF5qvkpxqZlxL0n2X9ud+aS5m7XT5dnONt0
baJx5p6ZEfejwsZn6mfIZczDszLi/sOeMVsmVlaeLePnyHO8c1GZu9+REXeh
4t7tDnmuPE8ury7veXi+mvyFMrEF6oTvVOMryNN8ZxVk/F1aBc/Cd/uepqmn
G1voe0n0DGP3+H4Snby3meYqqhPG3yfj7/U9XmBskTrhip5ZpF8s3++7nqWe
bWyO/IDvaZ68xPczVz3f2AL5QevfJy9WLw22LNhy+aFgDxtbKhNbEWxlLr3S
2Kpgq3Pp1cYekddYh/pr1XBl+SL5IfVDnoerqitb+yFj1dVV7bXC2Hr7Elun
TniVZ9bpa8gbPPdosMeCPS6vVV8iPyqvUcMX57rDGnUd61J/o5zE0JvsuU5+
wtr03ax+3PpwXfNPGLvcOtTcIicx9JPW3Sg/lRF3PPbap9UJ47dqMDsu++w2
eZs5mH32GfPPmLvSmZs432ZzTfSN5brm4ebOyczb5SSG3uHcW2TmfTbYTnmn
97lCvsr8U96phXWouUtOYujd1t0u7wn2XLDn5b3B9hnbIxN7QX4xI+6cLbX9
xlo6y379Trm1fZnhJZnYK/bfJeNf1nZ59nlzL8svO9Me+UCwV53vgLbX/EFn
3ivjX9P2+hz8uvk23ou7vKF+UXvT2H6ZWFtn5C7t5LbyIfUh54SvUV8rH1Af
8Ax8nfoa5ztgrKM64bfUb3kH+B3v8pqMf1t7zbPwYfOdvSP3elf9hvaesTdl
Yl2ckfu9L3fxPuhuxt431sOezHtEJvaBcxzR3s41G7mjzvi2fL2zvav1NPau
s/XUfyj3cgZm+0ju5XwfZ8Sdvpvxj/UfyZ+Yh3vLn8hHnL+3sSP6T+XPg33m
HT7Xf6p94JnPvBP6i4z4b4SeMv5Lraf36esZ8vy74ViwrzLiTn/M2EfeL2H8
11o/z8PfeK+P1B8b+9Z7JPoTY985e6I/Nfa5PMC5vpTxAzX4e+f/wvyPGfHf
Bz/Ix9THvE+SOx7sJ8/8IBP7WR5kj1/038tDPE+dW+UhPvuDMfhXax039qt+
mMwOf0IepoZH2Ps3/S/y7xlxF/+ffEJ9wmeT3B/mR1vrT/1v8jjPJefR4+Xx
Pv+H/FdG3KWp9bf+T/mfjLh/J3s4+l/5X58fL1Pnv4y4e0/w+f/kqTL/nwWn
yFOtlxliGZmRJ6vxc3Ll/vVsVmbcbadaCw3PM5dtHibGnpoTOJUZdzc42V3x
6cxoMGfyqk+R7/bM3T4Dn6omzw4LEztNDbO3wsTYEe+RT8+M+yf74hkyMTif
Gs9uusj78x7uN55pLn9m3Eu5I3fO733ZUYkXyIz2gGdzvP8Sc2i4oPfkvvCZ
3i+v+lRjZ3m/RCf3Os0cjGcXflAu5H0XGzvdfOHMaHAh+QzPFgl2TrCzg52r
ThhfTIOLBisRrKSxEvriWjHPlDJH7Dw1XFomdn6wC4KVsWcZ5yibK1bWc2Xk
cuqy5pmxvPOUkKl/obqUsdLG0BXk0nIlNVxRXVkmVsU56XuR+nytqrFyMrFq
1uD56nI1a9aQK6rhi4NdEqymVsWaNfUXa/Cl+lpyVZlYbftRs45c256XydXU
cD37UruuGq6vvlR/sXy5vpbcQN3AZxIm1zDYFcGuDNZIbhKssbqJscYy8zZT
J1zHOZvpm3qPpurmwa4K1iLY1Wq4ZbBW6laeae5dWnpPuLW6tecS5i5tPFPf
WBvv1tZYA2NtZe7bzvtyr/YysWu91zVyO3W7XO+gmfmEO6jx18kdg3Uy1sk4
3DlYF2Md1XDXYN2C9QjWXd3Dd9TVd9ZNJna9c7eTk9l7WbOnfTobuyFYb7mn
Gu5jv776HnK/YDcFu1Hure7ts0muv/kB1hqo7yvf7LnkPHqQPMjn+8v8H8gM
ttYQ/UD5Vs8MlW9T3+Zz8DBznBkRbLj1hqjhkfIo8yOMjbYWz4+RR1tzbLBx
8jjP3CpzZrzMuduDTbDmKDU8OdikYBPlCeoJnkly+CnBpjoH9afJxKbrx+lH
y8wwI9hMeabxcTLPzZI5N9s5Jmr0vEO+w/xseU6w+cHmBZsrz1HP8UySw98Z
bEGwu4Pd5fwLcvFUNX6hfI88XZ/c9V5zM/XTZe5yn/lEw4ucb6622Nhc51qs
v19+wDkXyEvU+AflZeYWyPil2gLnXa6+R79QfijYw+Yf0t+rLffMfeaIrXCu
lfr75VXB1gRbHewReZUzLpFXq+G1zsos69RL7blOflgmtiHYevuvVMOPyo+Z
32Ds8WBPBNsYbJP8uHM9Im9Uw1uCbfbZx9Twk8af0jab22ruae1J89vMPaNt
Nf+Ec2wz/oS8PTPuHew6JdXwjsy4B5TVzjVXVr9Dg5/1WXaTnfJOc9tlzuyS
OXehGq4kE6tqX2rvVsN71M/qd8jPmdupf1Z+3twu/U6ZXtXNJxquZS9q71XD
+9R79LvlF8w9p98jv2juef1zMj3rmE80fLm9qN1QnTB+v7bXPuwbVxprpH9B
2++ZJuZesEcTuY5M7KXM+DnJPvGKOmH8yxrMPsHecEA+YA5+Ndhrxl7Vt9EO
+NxBc8mOcTAXN3TutvqDGvy6d20v71fD7BBvBHszM36uXyOzRxxSH/IMzA7x
lvm3zMHsAG8b66SG38mMn/XdfDfdfF+Hc8UOe66b/K76sHne5Xu+n1dl7va+
+qAx9JFgH8gH1Qe9K/xhZtxjjsqvqz80/7rW3vib+mt9Jol95B17ee8uxthb
PpZ7qT/yPp8E+1T+1PfSQ+5r/h3v/5n3OCIns39uzX726W2M3eYLuZ8aHmjt
L/WfyuwyX2We3Iu+8vmvgx3LjLvM1/ovtSHWO2bum8y4v3xrvVtkao3w/DFt
lLFjPjdK/538fbAfg/0g/2Ct7/VjtG/teTwz7jOjrHFcnmT8J+12c+wdvwT7
WZ6knuS5JHci2K/qE8Z+lX8L9j/nZK7f5f852zT5ezV8h/2oM0+d1JyXi+9U
/2qfO/V/yHfZ73/y3Wr8n/I0c5y53+f+0v8h/x3s32D/yP/4/N/6B7U/rb3S
Wv/p/5JXW+dveY0az//h5r/WWe2ZjKz4mb7S59HwY3KmeZgYn+nZgbOy4mcs
vNHaa8yTy2M8lRU/z3mWWinr8FlOPCcr2hbPPm0unRXtKc/wmU4ub1a0pz2T
7RzPmMv27ClZ8e8Tf8dPzYoaPqCGX5OJ8Xf0tMCnZ8W/I2iYv6P5sqLGnybz
N/QM8/h8Mn9z8mfF2FtquEBW/Ptx2NnwzFcw62SsoOcOGz9TDTPnWd7jVGPM
f5b6PZkYXNjzcKGsqM/Oipz8TT5b/kAmxt/SIoHPyYp/19Dn+F7gN80f9f0U
zYp3/Mh7w8T4G1jMPLmPjZ+bFf/W8TeVu+F5L8WzTsaKe+4T4yXUxX0fvJeS
3qmQfF6wUnIhdSHvDHNH/l6Xlkubw0p7hnwZNfyh+kPfAXy+d/vc+8HE+Bt9
gXlyXxjn7zP3Zf6y6nO9TzljJWRi5b0H81woE6voXBXk8urynk1ypZ2Tv/WV
nOsLmfn4fGAG+l5kf3pXzjoZq+y5sjKfB+jK5qsEqxqserBqzlk1F5dX42vk
4prqijKxi4NdGuwSGV9JxvO58q3zcyc+U75xllpZUcN1nLWKXFtd23MJ1w12
mWfqGqturK5cVY2vJ9eXa+irylgD8zVlYnxOXuo94B/V+Mu9M/cix5nj3o1Z
+dw7LtdWw3z2wbWd6ReZz0D4Mmc7IfM5BdeT8Q21es6MXWGsgUysUbDGwa6U
8ZfLeD7Xfvcu3InPMXpQp0lW1EmvpsaukIk1sz71msvNrMtnXDNzv8t/2YM6
V6mbWPdqY01lYi2CtQrWUm5pHz7/WuTi5vb91z7J5+4/aj4T6UX91uqr7NfG
2NUysbb2pUc7ua3188gt1HCGNalzjfWo1T7rZKy951rLmWq4Q7BrPdfBGLpj
sOuMdTSG7hysk7HOxjrJzJutTridM2frk8/2LHXKeeibo05myJHTcjJDWs4r
JzPklbNlYl2y4ucMn7td1XA+NdxNJnaGGs4vE+ueFT83+NzsoYbPUsOFZWLX
Z8W/+UXsWcQ5euaK9fRcEbmXuqfz3OC5rsZucJ7exroZy28MXVTOL/dVw33U
xWRiN2bFz4/i2pnerbj+Rg3uF+wmfQ99d5m789nZX+5vvIfMc6Xkkt5zQLCB
8kDf1zlyGfPX+15udvY+zn+zfL5cTL5FDQ9SXyATK+d9udNgNTxE3U9/ozzU
3E365B3caq6//iaZO15oPtHwbVnxc6uCNsxYBe86TD9QHu7szD1CHu5dKsmD
1PBF3oXZq6gTxo/UBnuPUeqh+iEyn8HVzVfT36qN8syF5ojV9F7cZbQaHqsf
Jo9Rj/FcwuTGZcXP7RHeBb5UjR8vVzLHmTrejdnrqkc6Y125ukysgbPRe4Ia
nugct8sT1BPMJ7kxzjkp2JRgk+XJzjdJf7k23tmvsBf1pqrh6fqJ8jT1NM8l
PDPYDM/MNIaeHWyWsdnG0HcEm2PsDmNzZOZurE54irM31ief01eqmzozM81V
w/PU0/RT5fnmZuiTee80N0ufzLvA3Bx9Mi/zNDefaPhqZ6DnXWr4bvU8/Vx5
obn5+nnyPebu1M+X+ZxvZb6lfoF2j2eamyPWxhnoea8avk99t/4ueZG5hfq7
5cXm7tEvlJmlnflEw9fYi9od1Pdas4PcUb7Pmh3lzvIia3WW28nE7s+Kf3f5
3HlAnXwGPSAvkYn1VsN9ZWIPZsW/aQO0XtYaoH9Qg5cGW6Z/QH+/vNzcEv0D
Mr34e/+Q/JDxJTLP3SJzbpjz0PNhNbxCvVT/oLzS3DJ9MuMqc8v1y+TV5h7S
L5eZYYT5RMNjnYGe49QJ4x/RHrb/GvVK/Qp5rblV+pXyOnOr9atkZhlvPtHw
+qz4N+l2bZx9btev1+ANwR7Vr9E/Ij9mbq1+jczfyynmJ+vXaY95Zrw5YtOd
h54z1evtNVOeLSfzzJbvkB+19h3yFJnY48E2Bnsi2CY1vDnYFvUWz8BPBnvK
/FPm4K3Bnjb/tDl4W7BnzD9jDt4ebIf5HebgZ4PtNL/THLwr2G7zu83Be4I9
Z2yXGn4+2N5gLwTbp37Buz3vXffKxPb77IvW22Ps5WCv5GL8S9p+zx8wR+zV
YK8FOyi/HuwNY6/KxN6UDznfW/oX5Lft+7L1387F76jxh2X6vWuPg8bf1b8j
v2f+XWd41Rh8xJleN3ZE/778YbAPgh2Vj5p7Xz5i/iP1x97tE/1b8qeeS+qh
P5M/8/mP5M+DfWGtL/WfyMeCfR3sK/lz9ec+m+S+Mf9dsG+t96Ua/l7+wfx3
xo4H+znYT8F+tFZSE/2L/Is9jnv2F/038olgv1rzhP437Xv7/s8z5H+373H5
uHV+1/+pwX8E+zvYP8H+CsYXkP6di/H/afC/9s3Ijr1+M4f+zzz8P2eBM4Nl
B8uS8fTP1Keyo/3pPOnAeYPlOAue+U7JFYPTavhU9Snmmf00+2bKp6vx+eSU
Oc7kty91zlCntQLGTpWJFQx2pvVOl6lbyGc5f5b6DK2wsQIysSLBzgl2tnym
+kx7JLmi5s+1JnWKqc/SihsrLBMr6fPUKSEnMfR51j5bLmXNYlppY8WsWVpf
Rr7AOtQ8X05i6LLWLSGX87ny+jJyBc/z7IVyEkNX9Pnz5crBKlmvsv4irZw1
q3iGfLVgVYNVD1ZTJlZDrmmfCsYuVidcwzMX6y+RK3ruUvtcJFdRw7XV+Fpy
nWD1gl0WrK5cx5mq52J8fa2O5+EGzlFNXdPYJXLDYJfbr7YavkJuZL6hsSuD
NQ3WOFgTmVgzY83VjY1dFaxFsKvlq73DVfqWWj3v1zpYK3s1UsNtjLfVWplr
Z6691sb8Neau1dqZb+rc1xhvKl8XrEOwjnJH79JcbmaeXKdgnb3XVXIXNb6r
3NIcZ7pZhxo99NTpnivW3XMd5OvV3c33DNYrWJ9gNwTrLfeyZxf5BjXc1zrd
NWr0k/uZ7yvfGOwmfX/tRnMDzA3UbjLfxzkGGO8j3xxsULBb5MHBhhi7WSY2
VL41O+5H7H/D1Anjb8uOBrMLsvcNz4483BzM3jciO+bxw2X2vpHZMY8fITMf
u9/NzjpSjecZeKd5eLDz75RHeYfBxkbpd8vseKM9R+w542Oy4w7Gbshd8dx/
bPbJ2FjP7TU+Tj3W98O7GW+P/faBibHTTTBP7hXj7Ie3Bz8xO+5vaJgdcZJ5
/O0yu9rkwFOyI0/x7BsyZ8lP9Qz7F/dizmnqMc493dg4mdgMZ2W3hGeq8RPk
2Z57W8bPyo4GH/YO+IPmktgR50/uMcdZJ5uboz8qsxPe4TliHxlnH+QuzD9X
Pc37zDM2XSY237vMkPHMzt54Z/bJ/ROmH7siNamzQD3XuncZmycTu9tax6wB
E2MfXGie3DfG2TepucBa7IPfqe9S4++R782O+2Wym6LvM3affb6R6ceOx3OL
fJ468OJgDwS7PzvultT5WY/+U/7TWos9i77fnn+6Py4J/GB23NvQD9rjP3fM
JTKxLPsulrPV+KUydbM8syw77m2naMuNnWK/5foHZXa4h6yXLVO3gHV49mH1
Mm2FseUyMfa3ldbLJz/kuVXBVsurrVVALmz+YWs9Yq0i1jjTGDvbGrmIGi5u
jbX61TI72DrPFZV5fkOw9dlxD9ugX6uVsd56c49mxx3sMeudJ1OrvOc5+7h6
vbbR2KMyMfamTdYrK1PrIp/l/BPqx7XNxjbKxLYEeyrYkzJ+a3bczbYFezo7
7kTbjG2y98XmNsmX2usJrbaxJ+xVW/+MvD3Ys8F22H97Lt6ixu/MxbvUW2Vi
u4M9F2yPvDfY8+q9xtDsffXkvWr8vuyTOyH+Be0ycw3MvajVN7/N99LA+DZ5
f3bcCWt71/1yI/kl8/uNNfY9bJebqvEvy83NbZfxr2jbfSfYAWO7ZGKv+n54
D6/JxNg3W+TiV303z8u7fV9XGzuYHffKRt7hoNzW+Otaa3Ptzb2htTV/rbk3
tfbmX/bO1xp/Wb7OO3Ovt/Tc7VCu2CHPvSJ3Uh8y/3awd4K9G+yw7+GdXPyq
Gv+ezLvpqn5VDfewPrWP6Kn/fq7Y+547JPdUw0eDfeC5o8beNXZUfkeN/1Bm
d+2jvkH/nvahZ7uaI9bPvtTvr37fWv3lgfIH1hgo95GJfRTs42CfyOyCg+RB
5j6WP82OO+tn6s+MweyCnxsbooa/yI77Gnvql2p4uBo+Jg+X8V9p8AjnG+lc
n5gbqR8h32Ie/toZRjnXUGPsit8E+1b+1jOj5K/Nf6f+PjvubWO1Yd5hrP57
Df4h2HHv8qP8g/oHzyS5L73rePslc6EnyBOc4zv5p2A/Z8f9jj31FzU8SQ3/
KhObooanysSmey9mP6GG/+esv8kn1CfMJ7nkrux6vzvfBJk52UX/CPZndtz/
Zsk/yxPlv9R/eT5h5v/bM78Y+9v5/zH2q7GpxtBz5Knyf2r4X/UdMrF53p37
8WMn82Qswx9A+Z9MLDMV7zxfzlLjf88+mctOxfx874+e7TuAU6k4C3PA/zoX
jM9JRYPvdLZ0sLzOlNdZMZgdNm2OWU9xtkwZT99TU7EeuzF8mvo0+8ELzXGG
fZbap9uDXnA+n+XcGTIxnmV3zWduobzIWvlT0VMDZtc9w2fhB9T4Atam3v3W
YdctGPyZqbiTos+0FrzI/BJ7nRWscLBCMr6AjGd3XWoverKjUvds61MbLmId
njtHLuLz7K1FzC2VV1iraCp6asDFfL6IjOf5YvpzU9Fg9tniqbijrtJKpGIM
XqFeYR+4ZCo+94i1YGLssueZJ7fGOHvsavuUUhe3R2ljJWRi7LJlrLdGpi77
L8+W8hl22Q3q0mr8+TK77AXWWydTi931//doz3EeZg8tl4rPPSbzDDsnz5T3
Wc7CFwarGKxCsEqpuPeye1Y2R5w9kzh5dt0qwV+UirteFWPl7A2TK2e8WvBV
U3EHrKYvb2+YuciTq56Ku29Fe8PPqvE1UidzzFdTrulZ5mP2mvod8sWeuUTe
mivOjrjVZ2uaI14r2KU+U8uz6DrBahurYwxdN9hlxuoaQ7N/s2teZhyNr5c6
uZvj66eiweT2mWuQirbXM+zc5C5PRdvnGXZvcg1T0V7wTBX/O71oropn2buf
8d038r8R7/+K1MkYvN8z8Es+d4X5K4M1DtY0WBO5ebBm6ubGmsk1ZDx77cv+
N+W/LbvsLt/9Vamo4avVl+qT/w4tzNXWJ/8dWpq7TJ/8d+C/ATtuy1waZkd/
yTtd4Z1aya3MYzB7e1Pv9Ib8hrlWMmfY2+Hk7m/KL5sj9pZ35k7szW/lYnxr
7Srv10bdQn+1zO7OrtxGbuM7aOkznOHeh70v+zY9qMGefURuo4apd9Ra7LRt
g2+XivskGmafbW8e31Zml73GPL69zG55bSrGPlPD7KUdgr8uFfc89HX2gz8x
/5V9O6bis19bDybWKVjn1EnGs5d+a57z7IedjLNbdgncNRX3M3RX54CPmf/R
ebpZv5OMp143ffdUNJi9rkcq7kO/adenYgw+rj5uT5idqGcqPvuTTL1eqbgL
sfP1VieMvyEVDU52vz6pyH3MwX2DvzEVY3317Hv/eI7n/vPcP87fL9hNzn2T
98HgDPM9nJ8dqr/3wOCezjsg2EB5oPfB4Gzz5LjTzc7JHMxzs5wyRwy+RQ0P
UufIxAan4g6W1oYYSzv7EP1N8tBgtwW7NRX3wP7e6RRz/eVh6luNDTU+3Nwp
3mm4fqA8whkHyYOcd4R+pAaf5qyjgo2WR3ufvPLp5gc7/xjnHyqPDTZOHqoe
6oxj9ePl4TIx9sgJznCazFy3B5sYbJI8Wg3nV+d3Lniy/cfKY+0xJdi0YFPl
qfaYoi+gTXCWgvaYJOPP1ODp9r3d/Ixgs4LNlGfar7A64Wn2LKxP9t1C6rPt
MVs/XZ5j/RnyDGvM0d+hweyvRa01Vz9bnme+mOfPMcYuOl8upoYXBLszFXfM
Bfq5Wgn73GnurmB3+2xJeaF6ofXh88xxprR1qHGP+k7tXmN3ycTus9bd8t3W
u0+/SIPZV8+3JnUWq+EH9PfK96vv91zC5Jak4i77oDXLyPQpa02eWaqGl6nv
1y+WseXml8jEHgq2ItjDMn5lsFXBHgm2Wl5t71X6ctqDzljeGei5Rg2vVS/T
L5WxdeaXy8TWOw+zbJCJPWZspbxezX78aCru7ZX16MeDbQq2Ud4c7An1ZmNP
yFuCPRlsa7Cn5Ke8fxV1wo/4Dqrok93/InU1785dq6sTxj+trfHuz+jXydvU
2zyX8I5g2z2zw9gGYzvk9Wr8szLvh51zp7zT91PDMzt9nztzPbdeXdmzcE11
wvjdMn5XsD1q+BKZ2HNquJZM7Hk1XEcmtk+d8F41vq68yf+G9eR65vfKnKsv
J/+t6+di/pu/IL+QOvnvEZh/X1yuf1FrYI7/GeF/HhrKDXOdaZg6+W+Qhp5r
5H97/lteqU4Yv1972v+m/DuiqbEm+u3afs80N7fd/17N5RoysZf877Bbftn3
v0u9x9grvv9EP2fsgO8/0c8b2ye38g77nbeV/Goq7q3sx6+p4fZq+KBM7Bo1
fK1M7PVU3EM7WKODdfl+uCQGv24OPkcNU5/viHvVXsn3ylG/uPmDnrnW2EFn
6KjG8x1yMLsw3+V2nvHO5t5IxZ22izN3cW6+Sy6JlfFcF/kCdRnnZe4K9uhm
H5gYO3Fl8+S6G7/evtR5MxX1Gxrf7UaMPlXsxW5aI/Pk3g5T91Aq7qHszW+l
oob7qOEbZWJvp+IO2c++/ezN98glMfhtc/Al6prOxUzsknzPWk9ng5npnVTc
IQdovZ1pgP4dDT4c7F39W/pDMjOzL78nv2f8LZnnbpE5N8R7Mef76rc1vsuN
GPeo513Yh/kONb4n7jb5Vu/R33zyXXLwcO/F7EfU8Afqw/p35KPm3tUnd/3Q
3Hv6d2Xuwm79kfyR8fdknhspc45dmu+r4/vZRquv9p6jvD/M99WN0jfPxe/7
Xjp4/zG+A5gYu/DHqfhdceP0YzzX0efG+x46yviPjR1JnfyeOfwnxj4x/qn8
QepkDv4sFXNH9R/In5v7UH9U/sLcR/oPZd7VBPOJhvk3AN9lx3fOTVJ39z3C
o81P9H1O9j2Mc86e3mm88cnGvkzF76fr6V2/9Pyn8lf6z/SfysfMfa7/TObf
GdPMT9V/oR3zzARzxNj3uU8f78Wd4K+di558F94Nxr5JRf+VPpmRf3/MMj9T
f0z7xjPTzBGbbW++M2+6/WG+b+8me8HfpuJ35d1s7NvUyTm+tSf/JvlO/s7c
NzJn7pA5N9fefLfebPvDfAffIPvB36fi9+cNNfa9tb6Tqcm/V36QfzD3ncyZ
+TLn+O6+BfanHxq+y9xI8zAxvptvmHPAP6bi9+SNNfajPX6Q6bVQ/kEN8319
x1Px3x0wfqT97rX/cXN8vx7ftTfeftSbId8nL5RneRb+Sb1IJvaAPak92xmo
/3Ou2M+eQ8NL1DDf0/eL5+Z49pfUye/2+9We/98vMzIxZuDfJr86yyJ5ufWp
c0IN/6b+RZ/0WWEuYTzfy7dCz7+XmGORc640vtgcTOx/qfh9d3wfH4zne+5+
T8Xvs3tIxnMP/p3xe+ok3+e9HvEeyb/HVqvXeRdm/0MN/6n+TX9CZv4N5hMN
P+YdVjg394D5dxPfj8d39G2SN3on7rNZxq/yHMyZtZ7hvn/5LtbKm9XwFjXM
9/v97bl1nv3bOO9rqzrhh31/W31vyb/fnlI/4zvhHexQ/+Gdd8gbZGJ8Z2Dy
byPuj4Z3m3vUPEyMf3fwPX58Z+A+ea/vaZN5co8Yf8H7cq8X1ckdX5S3ysT4
fsGX7E/vzfZlZyfO9ww+6Rlyr5jjewaxlz3DDk+O7xjc5jnym5z7gLlNnuX3
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
Y1/pv9Dgn4P94nw/a8fMn3DmYzL+V+2Yz8HsmKPl0Z49If/m3UZ7199kYuyZ
/3PukTL3+d3ZmP8PNTxeniD/rP7Z8/BE9Xjn+9nYZPVE5/zF2Bg1/KczTXWW
scbYQf8K9rf8t2emyn+a/0f9r7Mw+3/qP5wbnmH+X2OzfD7pkycda/1lDo2f
I7NrZgSfKePnmIc5Qz7LM9np2ItZUur/nCMnHffbGc6T41nOwOyYc43Pt2/S
P22PDHNp/QKZnTOv54jdZfwUZ0jJpwU7VT7VXLaczAAvdI5TjbGDnp4+ud/C
9MsX7Ixg+eUCwQoayyefpi8gF7DuWcHOVJ9pLOGFzgEXUuPZSWF20MLpONc9
MjOdHaxIsHNkdk92ZBhfxDxc1LnZlfPJRdVFPQMvMw8X8F7L5GLeo4CxYvrl
MjPD96mXew921nPT8R6LZO6wwlnPkfHssSvl4t7pbPPspyWs95BMrUd8pqTP
8xzMTlsq+PPScZcsZYznqAWTK2GcnZJapa1JDbhMOu6n7IwXyMTg89V4dtZH
7UO/x42XMrfJHmXT0VMbfsJ61C9nvySGLm+vMvKF6biLbrIWGmZfhCuYh4lV
DL5ysErpuF+Ws3459dMynvoVPYuuZE/4onTcQalJj4usv91cFfMwsar2pV41
uaq1dpivqIarp+POybNV1DD7IlzDPEyspnV59mKZGLX3mK+qhi9Jxz2TZ2uo
4UvlWunI7JaX6J+Ta6vJs2/CxNgZ98nslhc7A7xfja/jjMz1ovNcZr9acl37
XKpO6tc2B+PZOV+S66Xjfomun44GEz9grIFn6htjt2wY+PJ03N3gV51xv3ly
dYxfkY675QEZ3ygdDaY+O99B8+yEjYO/Mh13rsbGGtoPJtfQeJN0fK6RdWBi
7I1v5JxkfDMZ3zQddzg03Dwddz32tqtlYvBVajy74PvOxXwfGG9sroW1m1kf
biHj2RGPyi3TcVdEt0pHg1s6D7N86Bz41uloH3q+tfORb5OOexl7ZFs1/Ika
bp+O/ImMb5eOBrNTXhP4WmPX6NknP/MsZz73HLEOwV8XrGM6Mvvcl8bx15mH
O6XjrtlZje8ks9N1Cdw1HbmrZ7+WOUu+W7DunusiE2N3Yz+F8d3NwT18HzDv
CL5eje+Ri3k/PT3f1nM9Zd5ZL98P9+c99JK/l4nBvT0L35CO+geZWJ/g+wa7
MR25o5qdsqOxn3yPHeXjOSffMR59wvfGO/tNPuF7gJNdt5vcz1mYo5/+B+P4
m9LRYPbN/s7CnAPSUd/oPPAf3qW/sYHp+Nyf1vqfMXbQm9Mxjh8os1MOCnxL
OvItnv1b5iz5wZ4ZYi9mGaoe4Bzwf841xFgen0/63GotOI8anymzO94mZ6rh
Ydak53D1UPvBKfPDjI3wWXZLeKR6pPXhvOY4M8pnh1trmLFT1Anjx8j40em4
K54ij7XHCHmEfcbqx2kweyD75/hgE9JxrztDpnZBa47xTEH9GTL73O3puHsm
+yvnCxkjx6420V6ny/Rnt5wUbHI67mtFZPbJKeopniniTMkeOkUmVsw+Z9n3
dmPsdlPtX1imd3H7TdNPlqcHmxlshjzDZ6brS2hTrV3SWrP00+TzrDNdLqXG
z5ZLmONMaWvN0c+S70jH/S/ZE9Fz5bnWKyVTt6y15unnyDx3Z7D58gVqfPlc
ubnmF6Tj7lfW5xfIFeS7zC8wdnc67nnJjoheKC+0R3mZXvek445XQcbfq1Ww
fhXP3GO9RcHukyur8dVy5RaaX+xz91rnHmPV1QnjH5Dx96fjXlddZt9aYo9q
Mr0eNM8zS9UP+OyydNz3anhmmf5BuZZ5eHmwh4M9JONXpOPetNL+F8v0XmWd
pfJq6zyoTuovM3eZOmH8Ghn/SLC1ariuTGy9OuF1anw9+WHnri/XN79Orme+
gXq592ug3yCzKz4W7NF03OkeM7bSd3G5uZXy4867Rt7onI+o1xpbLzeyzyb9
BpkdcnOwJ9Jxd9ts7DHnuNLcY/KWdNwhG/n8FrmZ/KT5LcaeSse9MNkf0Vvl
rfZsLNP76XTcCZtZ62m5pfFtWgtzrcw9o7U039rcdq2V+aecpbWM36G19uwO
5yH/bDruO+x816phdjl+T4Dv4e+ohtnj+D2B6/SPy+xtT5rHb5bZ3/g9gc76
J2V2Nn5PoKt+q8yOxu8JdNdvk9nP+D2BHvrtMjsbvytwvf5Zmd8H4C475Z7e
Dd6lbm+sp3dnj9sl7zL3rEyd3jLn2OH4bQJ+E+BG9T7fF9zRfF/fG79DQG/q
wNR5Sb3LWG9j6H5yb5nfFUDDu9U3ycTYjZjjkPMwC8xvC3CWc5x/JxcPVOPf
9Sx72HvG8O/K7GTvm8e/J7Nj8VsBxG5Rw0Odid8EGOBcML8nwJlbfQ4mxq70
mXlytxlnT6LWF9akBszu87XP3SbzPL8RwO403Ge+tQa7Dfy9eZjYj9Yaa42R
xthd+A5/mNw443vScR8Zrz2XjjGY2s/JY9TYr8YxmO/vZ0f5I+vkngbT7/l0
3FXYh/5RJ4zndwL+kqfYe4ozwfxGwBT9X7mY3vxewB7nSH5LAGYe9h2+r5+5
Jsp/2J/fAeC7+2H8ZGeEp5l/3hnZp/i+fr73f6Y8w3r0gMmljLMHUSO/tagJ
s+sUtMZMmVpzfIbv6J/lczB7zTk+N1vmGXYbnjnXZzkL703HfSjZi9B8x/58
PfXmytTiO/rZheZZq5S12WPg0uZhYgutSf19chJD8z38JZ0Dvtda5XyeevAL
6bj3JPvPPuvAL6jxL8r7ZL5nn7r7ZL6nn13oXntUsic7DVzFPPyANfme/KrO
sEiNX5Irx/f2v+j5qjKxCvJSe9SyLn3g/em4C7FTrJCJvZSO32fPd/HD+Ooy
nv1gpcwcfMf+KvtQFw2/bI7vwIdXq/Gr5DXGyb+SjjvNeud4WH2lsya8zrMw
nu/Eh1f4XPKd/mj8Bu/3qPd6SX5Mjef77ut6t0d9B62c+wrnfNnYGj070OMy
392/Uc339bcz38YZudNG58bzvf3X+Ew7uYln2XmYuaOzcweYHYnvyed7+TfL
Tzg7d4DJtTTO9+9vsR7Po+EnzV1vHiZ2IB2/D5/v3ofxXWQ8+8pWmf589/7T
1qNWX+uwGxHn+/dv9Ay5Z8zx/fvYNs+wD5Hju/cHeI58b3vvcK4duc7A251n
h7P/H4ibezU=
        "]]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, 
        "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> False, 
        "TJunction" -> Automatic, "PropagateMarkers" -> True, "ZeroTest" -> 
        Automatic, "Hash" -> 5787359693987448252}, {
      PlotTheme -> "SmoothShading"}]]}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1: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
qtdJOjMDJEM2EdQP9qNPu7TchK0o/L7pEaB3ZYEmCSoGh1+JP0qEy9ZcLLmV
PgY0pF5Pr0UkuFsycn05gQSDi2XeJsUPgy2WWtVKFDJ8Jyl1SGSIDF/Jqdy0
fjgJ7mPCWNTICFr2nz+4fa2MLVdI3hOIZN4xjKWSoayCwDZm7BBYsaciN/0d
Cbo93ssWbSHCsuz+ZWWPe8Gz4bfvf86SIIl9tZ3TR4It6SLckTvDwNP/Zqmy
5xRKOxJVTllLhPaEoEargB5wM0CatNZxGiV4BMnvFiRDMZNnwfBSN0j4VVRs
lULixwfvvws2tPmnbSHBE9o9jR6jRDh0ef7De6mNYMwmjxOZNYPi3Z3LshIp
0L1O90hycT5gslWiyc1zIN52/eEiOxI8PKn+LE45D9S+ur+JiBFgrbuZist8
MhwzfA6u1hQBB8cO7bmuGf5+yY4HRNwWeIDweVP7kpDy6ZMUeOdZ253Scz/4
dQPn4zitrzpHf4wFFlG27qLZkuF5OCjodxZD8EjqQSXLaTRSci3k5Usyv0/h
diZ8Cj+bVBHhoZI7b2rkOlDJM/aluGE2sP6ypX6z1t++htcf+ZWCL7V9ec+V
fGl281Utmnn0jLLizQTff5wvnOHm5JUyilgoeMfFxSR4fjFLq6Z0EE2JPopY
d5OnN5dUZb16RIDat9n7B7R70cL5jjLEE3Pg07dh/QwHAjy//HD1reYR9NRg
p9u5SwQ4VCsV0RVIgV/mKNxcj1G0K6bWvU38b/4LzLP3OurUz+87R6xr2k2e
kqGE8W2FCfNhRPEW3Gwx28jnfz90q71g+d9+pOhd1uIYROL3Qfx+AOfHxz5u
dX0w9D84ztcoJNOTTo7/D+7+vP58vTILbclTdEtRIEO/2rUa9F9MdCDYOPTM
xBwYhZSsL7uJcDzXWWZZziTy8Y7feHUVEe7/snnvY57+D1kdyMqVnUSrw07J
DZiVI+mXzprInAzVUy4vSowZQy3Km/ehgUa0xMFsX5sFL6+qD9l+WD6GqoL0
w2UsmWjvQ+JH99ckWCJBKd5/iInmf/xy5o/WMLI4sYshx8vDZ8vPJtu+nkQH
LIcib+gOImUDXaXeYTKs6bGmNiePI3bV4IrKLRPo6bKVmypbyXA3FimgGjKO
hM6NG9zvmEFPHznQXGpI0AS0HAg9NYJKaJdfL/vCQndkn0Z5eJKhWspRB//t
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
hw3NBkCse/xcrd///T544I/QNyq2YDLlcu2RP+BeWnBt9QcmMJ8m5fupUnnn
8ZvB+/ODINm6qFAB6wW1H0LNqdV/n4vHYdURR5+rjlSMNPjimq9xD6jJ3soa
1+gAlye8ksUeULHEKMsrEw9GALNRz2Szwhf+PuJ2Eh6IDJma1YCMW5e2TkpQ
MPVTv3L7do2C3jjreZSNU6imG3kfzaFiteltMZo3+sFknr3Rm5Ms9KHCo2nc
iIa5Dq0oH8/tAt83LVosTKHA/NoRlcJUCpY2eeP3yZx24PDnnuev7L/xuWNa
kq6R3sP3P/18Uy55IQUzM/RjazM6wIyYm8+lb2zEKAq8676Xir09+nP6Q9Mv
sCMp/r1RIgf5509GGPlQMO9RiXUc2RLwPkbimMQRGvRrzmL0bKNgLzTCnj8/
iYFTq07Vty7gok3pnsGeHBLmKu0/eleoFm1X2gqr4v/6Q34hnr56awnC99Hm
0N1nmxIpmNz8jWellOqR9pJl/RtPUP76/59+Hq6Krf5ZwUb9T0Z7L41TsB1L
RryfvmlFmuuEL63QIUPZzFXpVTx/jLZI/nwN29Ct9OsCXrOzCLfjZZ3B7E+u
59/nK1bvV7ttTsVMQ5lBemc6kdCi2185tix0yIlWocElY6VH9WqMzHhz5otM
S8doEvxyZmpG+iQFq+9N3z1vpAfJGn2MvPiVALOU62+sKvirG/HzuDl+dvMZ
bwrGzveksG36ELIMBDLnZ4H+u02Xw+6QsX+/s8P9fJCnoZjh08XHWWutJrxi
KNjOu/veFLn8QW2LR3pYvqOAG1OutiyDjJVEiTDbcvrQ3IT2hdRp3nqFt8wO
cCnYytmceY0aI6i8aAXrivkMPw64HlNfFljovWEELMirT9gnSsEMVwobBPdO
ICf9IiO501NI6nECLOPFGdBHT4gSp9HpQ9N3Bi+PgAT0XbyEV581x2yVlH9O
ox0FYTN3T0+gcBLz3LZvvD53sOl3pdEUGnr/OtZNboL/XFwvLSZ+jBbbz0Ty
TlmfPPMomPBdYoiREQe1vrtre3vNMPghynqzToSCMS/kJ+e1zCHbPXv1EhVH
EbAEQ18EKRhy+TjQe5GIRTiTdORo/YDj8m4iYAsFG457ZtpVSMJcxt9ts1Xq
BO6PREjHtXk6yM7hqB6XgPkLy8yKWA2jlvYBtzodCpY86vztsBcJW7feKVz2
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
2uyP//M+/A/gDLEu
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], EdgeForm[None], 
       TagBox[Polygon3DBox[CompressedData["
1:eJxNnXnYjuW3v73D8z4ahCIRQiFDxgoZkkxlVjKLkJBQ5inzGFIqSihDpooo
iQxFqZRKpZLmQbMGfZvb17mv8z68f6xjnZ+1rnutdd3t/T7L7/jt5yl9w+D2
t2TmyZNnYf48ebKCzwiGTjg7WMpYhkwsR04HyxvsFJ/JayxLn6HBpwY7zedP
1bLN57Nmtow/Xcv2OfgM82HcPAWCFbR3AWOn6NMafGaws+x3pnaq+ULWPks7
zVxh+xXSTs81A7mzneV0uYi9CspFg50jn2Muv0z/YvY7RzvL+Ln2K6YVMlfc
vudqhc0VNlfCOQrLJa3LHOep4VLWLakV81xp65bSzjVXxvqlteLmips7337F
5Quse55c1nol1aWMlbNeoksbK2/dRJcxdr58YbAKwSrKlYJVNnahTOyiYFVy
6SrGqgarlktXM1Y9WI1cuoaxmvLFwS4Jdqm9LzFWUX+hBtcKVtu+tbRK5uvY
t7Z2kbnL7FtHq2qurnNcplU3lyXXleup4Ux1TWMw/7ta31x9YzD/O9cg2OXy
5Z5NyfXNN1Rf4R15D43U8JXe8wqtlucae88rtdrmmnjPxlodc029ZxPtMnN5
zZ0i11XX9UxT717XfD7n5k7NnR/dTJ1wA882058hX+W5q71PI7llsBZyi1z3
beH9WnmfFlpj4629TyutibkC5grKTdVNPdPaOzc1f7bzMWcbOYmh2zp7M7md
c7SUrwnWXm6fa872znWtPdtrrY0zX4c88e9ZQeMd9NfKRc3DJZyH2a6Tkxi6
o/O1kTvZ7xq5S7DOcudc83S2X1f7dNY6GC9q7jxjXY3Rs3uwbnIJNf78XLmO
5ntYt4t8vbU6q5MeXc2dp79Ag3sG66W/QS6rLus5uLeafDmZWF91wn3U+PJy
d+cvb7y7fKP1bpD7WaeXurexvvJNwfoHGyAPDHazsZtkYoPkW4xzfrAaHuK5
W7SBueqRG2qNgfKtnhss3+a5W9RDjA2VhwUbHmyEPDLYKGPDZGKjg43JpccY
GxtsXC49ztj4YBNy6QnGbpcnBpsUbLI8Ql1RnigPU8MV1JX1FZwliVVRV3aW
kcaqqas4y2hjNdTVnG2ssanOSWyKOuHxnpmirylPCzbds1NkYjPkS7zTZBl/
qQbP9I4TzdezDvXry/WsOcUYPMse04zN0l8uNww2W75cDTey9xz9TPkOzzT3
uYbG+Bs4V26uhufliX+7G8n4+Voja7b0DHn+Rt3p81fJ1F1gfr7n5xlrp04Y
f7eMvytP/BvXTubvzUL7tJXpcY/5uz1/l7FO6oTx98n4e/PEv1md5EV54t+1
5O8berG82P4dZXrf73P3WedeYz3UCeOXyPgHgj2ohq+XiS1Vwz1lYjeo4WV5
4t+vvs7YXb1cnXAfzy7XPyQv9tzDwVYEWymvCrba2MPyEv0qeZUzPyA/EmyN
8z6iPWh+rfOu0ZaaWx9sXZ74t3W9fqm8NNdzN3rvfvIG7UafX+Y76CfjH9X6
efZR703+Me/FfR9Xw/3lAfIq9SrPwzer+3vHVcYGqRPeqN7oneFN3mmjttbc
WnNPePe18mZ7MuMW9ePOBw82v9nYUOvS/0mZ2FPWf1LbZG6Tua322yQ/bU16
blNvsd8zeeJnzGDPPKN/Wt5uHr5N3i4/6Ty3GXtSv0PeGexZZ9qp36E95Zln
nRG9y77b5D3Bdsu7zT0tM89z9tutbTe+N9jz9tmrf07b4bnnnQm9z+f3yC94
drf6OWN75ReD7Q/2ksxn3XB5uLn98st54ufvK+pXjMF8/h4wf8AczOfvq+Zf
NQfzGfya+dfMwXzuHQz2uvy6ZyfIr5l/Qz3JWV+S8ZM1+E3v9KL5qT6f9Dlk
rYPmDumny3y2vSVPV8NvB3sn2GH5TTU8Uz3TOeB3fXaW9WYY4zPuPXmWGn7f
WtQ/oj5sTXiO+feNfeCzd1hvtjE+247Kd6jhD332iDxHDX+kxs+X+Qz72Ofn
ytT9JE/8TJwv4z/V5lvjbs+Q5zPpM+vdKVPrc/Ofev4TY/eoE8Z/KeO/yBM/
2+6R+dz4yj4LZXocM88zX6u/9Nlv8sTPv/s8843+mLzEPLw82HfBvs0T/2Z/
Z+wrey8395X8fbAfgv0of61eKX8vH1PDK9Sr9SvsncSWqOHjeeLnDH+bf5aP
yz+p8RvkR+VftA3mv/M+v8r4E8YeVf+m/8XYL2rsf57/3Ttx3z/UP3ov+HHz
vxt7wnmZ/085iaH/8i7H5b+D/RPsX+f5x9hv+mQe+L9gGRlxtl9lfPL/iPmr
Z+DMYFkZ8UwemVi2nMqIM3OnHPUf3gfe4p1gYludn7ukMyInMXTejHgfNHxK
RpyZe52qhk/LiDOeYuw/73a6c56m5TGXz7lP1zIzTt6P3BneKVPO7124UwF1
jveBt3mn/MYKZsTPuZ3egzuhz8yIOuFnPQvjz5Lzeq6Q9+GuhdXw2d6nkHaa
54p4n7O1082d472KaPnM5TNX1Hvmk4t5lwLeLb8xPpfRCeOLy/hzM+JnKhou
kRE/d/d6T94HuqT3TRjP2ZI+c558ludKec/CcplgpeXSud5Dae99QbDzvesF
+tJaEc+QL+v9i6jPMVZULuedinuvc43BeHaFfXL5jLgzoC/MiAaX9068gxe8
J75CRrQXPF/Be5Ov6Kxl5AvUlYJVDnaRXCVYVWOVZGLVglXPpasbqyHXDHZx
sEusdbGxi/SVNPjSYLWsc6lWxXxt69bSquXqT66OPavJl1mTvnXVcD3rXqZd
6rn61q2n1TLXwPr1tdrmapu73H61ZXazhsFfkRH3HTTMXtbIPL6hzF52pXl8
I5m9rHFGzOOvlNnLmmTEPL6xzB3ZxS7zvk3UeJ6BXzcP1/P+xN5QJ9zUd9DU
O8PNvG9TrYG5Buaae/8GMjsW97/K98A7gA9Znz5vyYfkq619tTWb6tEtrNtM
ZrdrGXyrjLiHoVvZA37T/DvO8K71kz7o92R8C+vCrTPiHkbdNtanNtzWMx94
DibG7tXOPLmjxtsHuybYtXKHYNcZay8T6yh3yog7H/07OUfnjGhHnIcd7kPz
Hwffxf5HZeboan36dlPD3e3XVeuQay5yPZylg3y9M3WWP7Iv3FONZ0+E2e16
OdfHMjPdYL9ucm/7dVV3N9ZD7pMRd8tPrd/HHuyIcF/zMLEbg78pWL+MyPhe
Mp797yvnYcb+wQ8INjAjcl81zN7XV/+lzA55k/Xg79T4m+1N/W+d5Qd7DJTx
7F0/yoOs39/8LRlx72O3GiwTY6f7yRi9hmTEfvAJNbvWL55htxoa/K0y/oRn
Yc6Tvy3YMM8NlYkNl/9w1hHOzbzwX87FnCMzIhP7R/2vzCzowZ4Z6Zxo8hn2
ZcYsOcMZ4CwZny1nO99weVRG3I2YdbSeGeG89mS2MXJe50OfamyMsXEZcS8Z
mxF5lHqUvZLcePMF7D1BP1q+PSPuVcl+Nca+Z5obo5+YcXIOuLB6ojF6TQ42
ST5DjS+aKzfe/JSMuCMVcI4pcnF5qvkpxqZlxL0n2X9ud+aS5m7XT5dnONt0
baJx5p6ZEfejwsZn6mfIZczDszLi/sOeMVsmVlaeLePnyHO8c1GZu9+REXeh
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
2++ZJuZesEcTuY5M7KXM+DnJPvGKOmH8yxrMPsHecEA+YA5+Ndhrxl7Vt9EO
+NxBc8mOcTAXN3TutvqDGvy6d20v71fD7BBvBHszM36uXyOzRxxSH/IMzA7x
lvm3zMHsAG8b66SG38mMn/XdfDfdfF+Hc8UOe66b/K76sHne5Xu+n1dl7va+
+qAx9JFgH8gH1Qe9K/xhZtxjjsqvqz80/7rW3vib+mt9Jol95B17ee8uxthb
PpZ7qT/yPp8E+1T+1PfSQ+5r/h3v/5n3OCIns39uzX726W2M3eYLuZ8aHmjt
L/WfyuwyX2We3Iu+8vmvgx3LjLvM1/ovtSHWO2bum8y4v3xrvVtkao3w/DFt
lLFjPjdK/538fbAfg/0g/2Ct7/VjtG/teTwz7jOjrHFcnmT8J+12c+wdvwT7
WZ6knuS5JHci2K/qE8Z+lX8L9j/nZK7f5f852zT5ezV8h/2oM0+d1JyXi+9U
/2qfO/V/yHfZ73/y3Wr8n/I0c5y53+f+0v8h/x3s32D/yP/4/N/6B7U/rb3S
Wv/p/5JXW+dveY0az//h5r/WWe2ZjKz4mb7S59HwY3KmeZgYn+nZgbOy4mcs
vNHaa8yTy2M8lRU/z3mWWinr8FlOPCcr2hbPPm0unRXtKc/wmU4ub1a0pz2T
7RzPmMv27ClZ8e8Tf8dPzYoaPqCGX5OJ8Xf0tMCnZ8W/I2iYv6P5sqLGnybz
N/QM8/h8Mn9z8mfF2FtquEBW/Ptx2NnwzFcw62SsoOcOGz9TDTPnWd7jVGPM
f5b6PZkYXNjzcKGsqM/Oipz8TT5b/kAmxt/SIoHPyYp/19Dn+F7gN80f9f0U
zYp3/Mh7w8T4G1jMPLmPjZ+bFf/W8TeVu+F5L8WzTsaKe+4T4yXUxX0fvJeS
3qmQfF6wUnIhdSHvDHNH/l6Xlkubw0p7hnwZNfyh+kPfAXy+d/vc+8HE+Bt9
gXlyXxjn7zP3Zf6y6nO9TzljJWRi5b0H81woE6voXBXk8urynk1ypZ2Tv/WV
nOsLmfn4fGAG+l5kf3pXzjoZq+y5sjKfB+jK5qsEqxqserBqzlk1F5dX42vk
4prqijKxi4NdGuwSGV9JxvO58q3zcyc+U75xllpZUcN1nLWKXFtd23MJ1w12
mWfqGqturK5cVY2vJ9eXa+irylgD8zVlYnxOXuo94B/V+Mu9M/cix5nj3o1Z
+dw7LtdWw3z2wbWd6ReZz0D4Mmc7IfM5BdeT8Q21es6MXWGsgUysUbDGwa6U
8ZfLeD7Xfvcu3InPMXpQp0lW1EmvpsaukIk1sz71msvNrMtnXDNzv8t/2YM6
V6mbWPdqY01lYi2CtQrWUm5pHz7/WuTi5vb91z7J5+4/aj4T6UX91uqr7NfG
2NUysbb2pUc7ua3188gt1HCGNalzjfWo1T7rZKy951rLmWq4Q7BrPdfBGLpj
sOuMdTSG7hysk7HOxjrJzJutTridM2frk8/2LHXKeeibo05myJHTcjJDWs4r
JzPklbNlYl2y4ucMn7td1XA+NdxNJnaGGs4vE+ueFT83+NzsoYbPUsOFZWLX
Z8W/+UXsWcQ5euaK9fRcEbmXuqfz3OC5rsZucJ7exroZy28MXVTOL/dVw33U
xWRiN2bFz4/i2pnerbj+Rg3uF+wmfQ99d5m789nZX+5vvIfMc6Xkkt5zQLCB
8kDf1zlyGfPX+15udvY+zn+zfL5cTL5FDQ9SXyATK+d9udNgNTxE3U9/ozzU
3E365B3caq6//iaZO15oPtHwbVnxc6uCNsxYBe86TD9QHu7szD1CHu5dKsmD
1PBF3oXZq6gTxo/UBnuPUeqh+iEyn8HVzVfT36qN8syF5ojV9F7cZbQaHqsf
Jo9Rj/FcwuTGZcXP7RHeBb5UjR8vVzLHmTrejdnrqkc6Y125ukysgbPRe4Ia
nugct8sT1BPMJ7kxzjkp2JRgk+XJzjdJf7k23tmvsBf1pqrh6fqJ8jT1NM8l
PDPYDM/MNIaeHWyWsdnG0HcEm2PsDmNzZOZurE54irM31ief01eqmzozM81V
w/PU0/RT5fnmZuiTee80N0ufzLvA3Bx9Mi/zNDefaPhqZ6DnXWr4bvU8/Vx5
obn5+nnyPebu1M+X+ZxvZb6lfoF2j2eamyPWxhnoea8avk99t/4ueZG5hfq7
5cXm7tEvlJmlnflEw9fYi9od1Pdas4PcUb7Pmh3lzvIia3WW28nE7s+Kf3f5
3HlAnXwGPSAvkYn1VsN9ZWIPZsW/aQO0XtYaoH9Qg5cGW6Z/QH+/vNzcEv0D
Mr34e/+Q/JDxJTLP3SJzbpjz0PNhNbxCvVT/oLzS3DJ9MuMqc8v1y+TV5h7S
L5eZYYT5RMNjnYGe49QJ4x/RHrb/GvVK/Qp5rblV+pXyOnOr9atkZhlvPtHw
+qz4N+l2bZx9btev1+ANwR7Vr9E/Ij9mbq1+jczfyynmJ+vXaY95Zrw5YtOd
h54z1evtNVOeLSfzzJbvkB+19h3yFJnY48E2Bnsi2CY1vDnYFvUWz8BPBnvK
/FPm4K3Bnjb/tDl4W7BnzD9jDt4ebIf5HebgZ4PtNL/THLwr2G7zu83Be4I9
Z2yXGn4+2N5gLwTbp37Buz3vXffKxPb77IvW22Ps5WCv5GL8S9p+zx8wR+zV
YK8FOyi/HuwNY6/KxN6UDznfW/oX5Lft+7L1387F76jxh2X6vWuPg8bf1b8j
v2f+XWd41Rh8xJleN3ZE/778YbAPgh2Vj5p7Xz5i/iP1x97tE/1b8qeeS+qh
P5M/8/mP5M+DfWGtL/WfyMeCfR3sK/lz9ec+m+S+Mf9dsG+t96Ua/l7+wfx3
xo4H+znYT8F+tFZSE/2L/Is9jnv2F/038olgv1rzhP437Xv7/s8z5H+373H5
uHV+1/+pwX8E+zvYP8H+CsYXkP6di/H/afC/9s3Ijr1+M4f+zzz8P2eBM4Nl
B8uS8fTP1Keyo/3pPOnAeYPlOAue+U7JFYPTavhU9Snmmf00+2bKp6vx+eSU
Oc7kty91zlCntQLGTpWJFQx2pvVOl6lbyGc5f5b6DK2wsQIysSLBzgl2tnym
+kx7JLmi5s+1JnWKqc/SihsrLBMr6fPUKSEnMfR51j5bLmXNYlppY8WsWVpf
Rr7AOtQ8X05i6LLWLSGX87ny+jJyBc/z7IVyEkNX9Pnz5crBKlmvsv4irZw1
q3iGfLVgVYNVD1ZTJlZDrmmfCsYuVidcwzMX6y+RK3ruUvtcJFdRw7XV+Fpy
nWD1gl0WrK5cx5mq52J8fa2O5+EGzlFNXdPYJXLDYJfbr7YavkJuZL6hsSuD
NQ3WOFgTmVgzY83VjY1dFaxFsKvlq73DVfqWWj3v1zpYK3s1UsNtjLfVWplr
Z6691sb8Neau1dqZb+rc1xhvKl8XrEOwjnJH79JcbmaeXKdgnb3XVXIXNb6r
3NIcZ7pZhxo99NTpnivW3XMd5OvV3c33DNYrWJ9gNwTrLfeyZxf5BjXc1zrd
NWr0k/uZ7yvfGOwmfX/tRnMDzA3UbjLfxzkGGO8j3xxsULBb5MHBhhi7WSY2
VL41O+5H7H/D1Anjb8uOBrMLsvcNz4483BzM3jciO+bxw2X2vpHZMY8fITMf
u9/NzjpSjecZeKd5eLDz75RHeYfBxkbpd8vseKM9R+w542Oy4w7Gbshd8dx/
bPbJ2FjP7TU+Tj3W98O7GW+P/faBibHTTTBP7hXj7Ie3Bz8xO+5vaJgdcZJ5
/O0yu9rkwFOyI0/x7BsyZ8lP9Qz7F/dizmnqMc493dg4mdgMZ2W3hGeq8RPk
2Z57W8bPyo4GH/YO+IPmktgR50/uMcdZJ5uboz8qsxPe4TliHxlnH+QuzD9X
Pc37zDM2XSY237vMkPHMzt54Z/bJ/ROmH7siNamzQD3XuncZmycTu9tax6wB
E2MfXGie3DfG2TepucBa7IPfqe9S4++R782O+2Wym6LvM3affb6R6ceOx3OL
fJ468OJgDwS7PzvultT5WY/+U/7TWos9i77fnn+6Py4J/GB23NvQD9rjP3fM
JTKxLPsulrPV+KUydbM8syw77m2naMuNnWK/5foHZXa4h6yXLVO3gHV49mH1
Mm2FseUyMfa3ldbLJz/kuVXBVsurrVVALmz+YWs9Yq0i1jjTGDvbGrmIGi5u
jbX61TI72DrPFZV5fkOw9dlxD9ugX6uVsd56c49mxx3sMeudJ1OrvOc5+7h6
vbbR2KMyMfamTdYrK1PrIp/l/BPqx7XNxjbKxLYEeyrYkzJ+a3bczbYFezo7
7kTbjG2y98XmNsmX2usJrbaxJ+xVW/+MvD3Ys8F22H97Lt6ixu/MxbvUW2Vi
u4M9F2yPvDfY8+q9xtDsffXkvWr8vuyTOyH+Be0ycw3MvajVN7/N99LA+DZ5
f3bcCWt71/1yI/kl8/uNNfY9bJebqvEvy83NbZfxr2jbfSfYAWO7ZGKv+n54
D6/JxNg3W+TiV303z8u7fV9XGzuYHffKRt7hoNzW+Otaa3Ptzb2htTV/rbk3
tfbmX/bO1xp/Wb7OO3Ovt/Tc7VCu2CHPvSJ3Uh8y/3awd4K9G+yw7+GdXPyq
Gv+ezLvpqn5VDfewPrWP6Kn/fq7Y+547JPdUw0eDfeC5o8beNXZUfkeN/1Bm
d+2jvkH/nvahZ7uaI9bPvtTvr37fWv3lgfIH1hgo95GJfRTs42CfyOyCg+RB
5j6WP82OO+tn6s+MweyCnxsbooa/yI77Gnvql2p4uBo+Jg+X8V9p8AjnG+lc
n5gbqR8h32Ie/toZRjnXUGPsit8E+1b+1jOj5K/Nf6f+PjvubWO1Yd5hrP57
Df4h2HHv8qP8g/oHzyS5L73rePslc6EnyBOc4zv5p2A/Z8f9jj31FzU8SQ3/
KhObooanysSmey9mP6GG/+esv8kn1CfMJ7nkrux6vzvfBJk52UX/CPZndtz/
Zsk/yxPlv9R/eT5h5v/bM78Y+9v5/zH2q7GpxtBz5Knyf2r4X/UdMrF53p37
8WMn82Qswx9A+Z9MLDMV7zxfzlLjf88+mctOxfx874+e7TuAU6k4C3PA/zoX
jM9JRYPvdLZ0sLzOlNdZMZgdNm2OWU9xtkwZT99TU7EeuzF8mvo0+8ELzXGG
fZbap9uDXnA+n+XcGTIxnmV3zWduobzIWvlT0VMDZtc9w2fhB9T4Atam3v3W
YdctGPyZqbiTos+0FrzI/BJ7nRWscLBCMr6AjGd3XWoverKjUvds61MbLmId
njtHLuLz7K1FzC2VV1iraCp6asDFfL6IjOf5YvpzU9Fg9tniqbijrtJKpGIM
XqFeYR+4ZCo+94i1YGLssueZJ7fGOHvsavuUUhe3R2ljJWRi7LJlrLdGpi77
L8+W8hl22Q3q0mr8+TK77AXWWydTi931//doz3EeZg8tl4rPPSbzDDsnz5T3
Wc7CFwarGKxCsEqpuPeye1Y2R5w9kzh5dt0qwV+UirteFWPl7A2TK2e8WvBV
U3EHrKYvb2+YuciTq56Ku29Fe8PPqvE1UidzzFdTrulZ5mP2mvod8sWeuUTe
mivOjrjVZ2uaI14r2KU+U8uz6DrBahurYwxdN9hlxuoaQ7N/s2teZhyNr5c6
uZvj66eiweT2mWuQirbXM+zc5C5PRdvnGXZvcg1T0V7wTBX/O71oropn2buf
8d038r8R7/+K1MkYvN8z8Es+d4X5K4M1DtY0WBO5ebBm6ubGmsk1ZDx77cv+
N+W/LbvsLt/9Vamo4avVl+qT/w4tzNXWJ/8dWpq7TJ/8d+C/ATtuy1waZkd/
yTtd4Z1aya3MYzB7e1Pv9Ib8hrlWMmfY2+Hk7m/KL5sj9pZ35k7szW/lYnxr
7Srv10bdQn+1zO7OrtxGbuM7aOkznOHeh70v+zY9qMGefURuo4apd9Ra7LRt
g2+XivskGmafbW8e31Zml73GPL69zG55bSrGPlPD7KUdgr8uFfc89HX2gz8x
/5V9O6bis19bDybWKVjn1EnGs5d+a57z7IedjLNbdgncNRX3M3RX54CPmf/R
ebpZv5OMp143ffdUNJi9rkcq7kO/adenYgw+rj5uT5idqGcqPvuTTL1eqbgL
sfP1VieMvyEVDU52vz6pyH3MwX2DvzEVY3317Hv/eI7n/vPcP87fL9hNzn2T
98HgDPM9nJ8dqr/3wOCezjsg2EB5oPfB4Gzz5LjTzc7JHMxzs5wyRwy+RQ0P
UufIxAan4g6W1oYYSzv7EP1N8tBgtwW7NRX3wP7e6RRz/eVh6luNDTU+3Nwp
3mm4fqA8whkHyYOcd4R+pAaf5qyjgo2WR3ufvPLp5gc7/xjnHyqPDTZOHqoe
6oxj9ePl4TIx9sgJznCazFy3B5sYbJI8Wg3nV+d3Lniy/cfKY+0xJdi0YFPl
qfaYoi+gTXCWgvaYJOPP1ODp9r3d/Ixgs4LNlGfar7A64Wn2LKxP9t1C6rPt
MVs/XZ5j/RnyDGvM0d+hweyvRa01Vz9bnme+mOfPMcYuOl8upoYXBLszFXfM
Bfq5Wgn73GnurmB3+2xJeaF6ofXh88xxprR1qHGP+k7tXmN3ycTus9bd8t3W
u0+/SIPZV8+3JnUWq+EH9PfK96vv91zC5Jak4i77oDXLyPQpa02eWaqGl6nv
1y+WseXml8jEHgq2ItjDMn5lsFXBHgm2Wl5t71X6ctqDzljeGei5Rg2vVS/T
L5WxdeaXy8TWOw+zbJCJPWZspbxezX78aCru7ZX16MeDbQq2Ud4c7An1ZmNP
yFuCPRlsa7Cn5Ke8fxV1wo/4Dqrok93/InU1785dq6sTxj+trfHuz+jXydvU
2zyX8I5g2z2zw9gGYzvk9Wr8szLvh51zp7zT91PDMzt9nztzPbdeXdmzcE11
wvjdMn5XsD1q+BKZ2HNquJZM7Hk1XEcmtk+d8F41vq68yf+G9eR65vfKnKsv
J/+t6+di/pu/IL+QOvnvEZh/X1yuf1FrYI7/GeF/HhrKDXOdaZg6+W+Qhp5r
5H97/lteqU4Yv1972v+m/DuiqbEm+u3afs80N7fd/17N5RoysZf877Bbftn3
v0u9x9grvv9EP2fsgO8/0c8b2ye38g77nbeV/Goq7q3sx6+p4fZq+KBM7Bo1
fK1M7PVU3EM7WKODdfl+uCQGv24OPkcNU5/viHvVXsn3ylG/uPmDnrnW2EFn
6KjG8x1yMLsw3+V2nvHO5t5IxZ22izN3cW6+Sy6JlfFcF/kCdRnnZe4K9uhm
H5gYO3Fl8+S6G7/evtR5MxX1Gxrf7UaMPlXsxW5aI/Pk3g5T91Aq7qHszW+l
oob7qOEbZWJvp+IO2c++/ezN98glMfhtc/Al6prOxUzsknzPWk9ng5npnVTc
IQdovZ1pgP4dDT4c7F39W/pDMjOzL78nv2f8LZnnbpE5N8R7Mef76rc1vsuN
GPeo513Yh/kONb4n7jb5Vu/R33zyXXLwcO/F7EfU8Afqw/p35KPm3tUnd/3Q
3Hv6d2Xuwm79kfyR8fdknhspc45dmu+r4/vZRquv9p6jvD/M99WN0jfPxe/7
Xjp4/zG+A5gYu/DHqfhdceP0YzzX0efG+x46yviPjR1JnfyeOfwnxj4x/qn8
QepkDv4sFXNH9R/In5v7UH9U/sLcR/oPZd7VBPOJhvk3AN9lx3fOTVJ39z3C
o81P9H1O9j2Mc86e3mm88cnGvkzF76fr6V2/9Pyn8lf6z/SfysfMfa7/TObf
GdPMT9V/oR3zzARzxNj3uU8f78Wd4K+di558F94Nxr5JRf+VPpmRf3/MMj9T
f0z7xjPTzBGbbW++M2+6/WG+b+8me8HfpuJ35d1s7NvUyTm+tSf/JvlO/s7c
NzJn7pA5N9fefLfebPvDfAffIPvB36fi9+cNNfa9tb6Tqcm/V36QfzD3ncyZ
+TLn+O6+BfanHxq+y9xI8zAxvptvmHPAP6bi9+SNNfajPX6Q6bVQ/kEN8319
x1Px3x0wfqT97rX/cXN8vx7ftTfeftSbId8nL5RneRb+Sb1IJvaAPak92xmo
/3Ou2M+eQ8NL1DDf0/eL5+Z49pfUye/2+9We/98vMzIxZuDfJr86yyJ5ufWp
c0IN/6b+RZ/0WWEuYTzfy7dCz7+XmGORc640vtgcTOx/qfh9d3wfH4zne+5+
T8Xvs3tIxnMP/p3xe+ok3+e9HvEeyb/HVqvXeRdm/0MN/6n+TX9CZv4N5hMN
P+YdVjg394D5dxPfj8d39G2SN3on7rNZxq/yHMyZtZ7hvn/5LtbKm9XwFjXM
9/v97bl1nv3bOO9rqzrhh31/W31vyb/fnlI/4zvhHexQ/+Gdd8gbZGJ8Z2Dy
byPuj4Z3m3vUPEyMf3fwPX58Z+A+ea/vaZN5co8Yf8H7cq8X1ckdX5S3ysT4
fsGX7E/vzfZlZyfO9ww+6Rlyr5jjewaxlz3DDk+O7xjc5jnym5z7gLlNnuX3
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
Y1/pv9Dgn4P94nw/a8fMn3DmYzL+V+2Yz8HsmKPl0Z49If/m3UZ7199kYuyZ
/3PukTL3+d3ZmP8PNTxeniD/rP7Z8/BE9Xjn+9nYZPVE5/zF2Bg1/KczTXWW
scbYQf8K9rf8t2emyn+a/0f9r7Mw+3/qP5wbnmH+X2OzfD7pkycda/1lDo2f
I7NrZgSfKePnmIc5Qz7LM9np2ItZUur/nCMnHffbGc6T41nOwOyYc43Pt2/S
P22PDHNp/QKZnTOv54jdZfwUZ0jJpwU7VT7VXLaczAAvdI5TjbGDnp4+ud/C
9MsX7Ixg+eUCwQoayyefpi8gF7DuWcHOVJ9pLOGFzgEXUuPZSWF20MLpONc9
MjOdHaxIsHNkdk92ZBhfxDxc1LnZlfPJRdVFPQMvMw8X8F7L5GLeo4CxYvrl
MjPD96mXew921nPT8R6LZO6wwlnPkfHssSvl4t7pbPPspyWs95BMrUd8pqTP
8xzMTlsq+PPScZcsZYznqAWTK2GcnZJapa1JDbhMOu6n7IwXyMTg89V4dtZH
7UO/x42XMrfJHmXT0VMbfsJ61C9nvySGLm+vMvKF6biLbrIWGmZfhCuYh4lV
DL5ysErpuF+Ws3459dMynvoVPYuuZE/4onTcQalJj4usv91cFfMwsar2pV41
uaq1dpivqIarp+POybNV1DD7IlzDPEyspnV59mKZGLX3mK+qhi9Jxz2TZ2uo
4UvlWunI7JaX6J+Ta6vJs2/CxNgZ98nslhc7A7xfja/jjMz1ovNcZr9acl37
XKpO6tc2B+PZOV+S66Xjfomun44GEz9grIFn6htjt2wY+PJ03N3gV51xv3ly
dYxfkY675QEZ3ygdDaY+O99B8+yEjYO/Mh13rsbGGtoPJtfQeJN0fK6RdWBi
7I1v5JxkfDMZ3zQddzg03Dwddz32tqtlYvBVajy74PvOxXwfGG9sroW1m1kf
biHj2RGPyi3TcVdEt0pHg1s6D7N86Bz41uloH3q+tfORb5OOexl7ZFs1/Ika
bp+O/ImMb5eOBrNTXhP4WmPX6NknP/MsZz73HLEOwV8XrGM6Mvvcl8bx15mH
O6XjrtlZje8ks9N1Cdw1HbmrZ7+WOUu+W7DunusiE2N3Yz+F8d3NwT18HzDv
CL5eje+Ri3k/PT3f1nM9Zd5ZL98P9+c99JK/l4nBvT0L35CO+geZWJ/g+wa7
MR25o5qdsqOxn3yPHeXjOSffMR59wvfGO/tNPuF7gJNdt5vcz1mYo5/+B+P4
m9LRYPbN/s7CnAPSUd/oPPAf3qW/sYHp+Nyf1vqfMXbQm9Mxjh8os1MOCnxL
OvItnv1b5iz5wZ4ZYi9mGaoe4Bzwf841xFgen0/63GotOI8anymzO94mZ6rh
Ydak53D1UPvBKfPDjI3wWXZLeKR6pPXhvOY4M8pnh1trmLFT1Anjx8j40em4
K54ij7XHCHmEfcbqx2kweyD75/hgE9JxrztDpnZBa47xTEH9GTL73O3puHsm
+yvnCxkjx6420V6ny/Rnt5wUbHI67mtFZPbJKeopniniTMkeOkUmVsw+Z9n3
dmPsdlPtX1imd3H7TdNPlqcHmxlshjzDZ6brS2hTrV3SWrP00+TzrDNdLqXG
z5ZLmONMaWvN0c+S70jH/S/ZE9Fz5bnWKyVTt6y15unnyDx3Z7D58gVqfPlc
ubnmF6Tj7lfW5xfIFeS7zC8wdnc67nnJjoheKC+0R3mZXvek445XQcbfq1Ww
fhXP3GO9RcHukyur8dVy5RaaX+xz91rnHmPV1QnjH5Dx96fjXlddZt9aYo9q
Mr0eNM8zS9UP+OyydNz3anhmmf5BuZZ5eHmwh4M9JONXpOPetNL+F8v0XmWd
pfJq6zyoTuovM3eZOmH8Ghn/SLC1ariuTGy9OuF1anw9+WHnri/XN79Orme+
gXq592ug3yCzKz4W7NF03OkeM7bSd3G5uZXy4867Rt7onI+o1xpbLzeyzyb9
BpkdcnOwJ9Jxd9ts7DHnuNLcY/KWdNwhG/n8FrmZ/KT5LcaeSse9MNkf0Vvl
rfZsLNP76XTcCZtZ62m5pfFtWgtzrcw9o7U039rcdq2V+aecpbWM36G19uwO
5yH/bDruO+x816phdjl+T4Dv4e+ohtnj+D2B6/SPy+xtT5rHb5bZ3/g9gc76
J2V2Nn5PoKt+q8yOxu8JdNdvk9nP+D2BHvrtMjsbvytwvf5Zmd8H4C475Z7e
Dd6lbm+sp3dnj9sl7zL3rEyd3jLn2OH4bQJ+E+BG9T7fF9zRfF/fG79DQG/q
wNR5Sb3LWG9j6H5yb5nfFUDDu9U3ycTYjZjjkPMwC8xvC3CWc5x/JxcPVOPf
9Sx72HvG8O/K7GTvm8e/J7Nj8VsBxG5Rw0Odid8EGOBcML8nwJlbfQ4mxq70
mXlytxlnT6LWF9akBszu87XP3SbzPL8RwO403Ge+tQa7Dfy9eZjYj9Yaa42R
xthd+A5/mNw443vScR8Zrz2XjjGY2s/JY9TYr8YxmO/vZ0f5I+vkngbT7/l0
3FXYh/5RJ4zndwL+kqfYe4ozwfxGwBT9X7mY3vxewB7nSH5LAGYe9h2+r5+5
Jsp/2J/fAeC7+2H8ZGeEp5l/3hnZp/i+fr73f6Y8w3r0gMmljLMHUSO/tagJ
s+sUtMZMmVpzfIbv6J/lczB7zTk+N1vmGXYbnjnXZzkL703HfSjZi9B8x/58
PfXmytTiO/rZheZZq5S12WPg0uZhYgutSf19chJD8z38JZ0Dvtda5XyeevAL
6bj3JPvPPuvAL6jxL8r7ZL5nn7r7ZL6nn13oXntUsic7DVzFPPyANfme/KrO
sEiNX5Irx/f2v+j5qjKxCvJSe9SyLn3g/em4C7FTrJCJvZSO32fPd/HD+Ooy
nv1gpcwcfMf+KvtQFw2/bI7vwIdXq/Gr5DXGyb+SjjvNeud4WH2lsya8zrMw
nu/Eh1f4XPKd/mj8Bu/3qPd6SX5Mjef77ut6t0d9B62c+wrnfNnYGj070OMy
392/Uc339bcz38YZudNG58bzvf3X+Ew7uYln2XmYuaOzcweYHYnvyed7+TfL
Tzg7d4DJtTTO9+9vsR7Po+EnzV1vHiZ2IB2/D5/v3ofxXWQ8+8pWmf589/7T
1qNWX+uwGxHn+/dv9Ay5Z8zx/fvYNs+wD5Hju/cHeI58b3vvcK4duc7A251n
h7P/H4ibezU=
         "]],
        Annotation[#, "Geometry"]& ]},
      VertexNormals->CompressedData["
1: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
hytGtk+E5tHh6X33Ly10jwLn0IbVR7dyoOcK1yzTfBJ8YLlJh5L7AvDWnnH/
48mHmjpql7zO5AK0PEHkOGDggD3XiD42HLxe17lU52Y3iJYMVc/P5mBRyefb
3p+iY/lY+l6UJApV4lLW29xsRJ/zO9S5s2w4rd9oePgVGb7ttTlrd2sKCV4K
KrY8xINf7NPPVC31bRZ1c0sMHgOTY4OEyWtkPGmR12D+bBGYmB3wNtGQwDtA
yA3nZAKu23llZ30sCco/LVlVljuOkm+eGI4yIuNVr4pYcWNF4PkPb+JoKh+7
7O3/FvuMiBsGbltdtF7y04vnDWWvzKNa4YZFmxwWXBG5uiYrlQh5JSFnn18U
wOu7w/e1HheF3aRyGuXU0pz3Sn27vH0K2If9cf5jwsR2KQOtRxl0+GTtqxUP
1YXx1OC9k5UNdLjyx7TjS1UqrHxuFai9iYpPTZ+tdU0hwUEzE5HcPzR4/r1g
k2MSFztcPv2unkuHDupce6QqCt1jSr2aQgk4jGS27OWiAKTv/urzH0ZoPie2
cbxeEP6bFeHKGfOwn+/Y9PpDg0hLPENkx90OYHN131e9Ukls8TXujoSqIFym
AkfuHhXCdmsCaeSxJQ9+9KV2WxYbSnfaa4idF8Z64tfOi2uzIbNRR/42hQpT
D2uomekKYZOic00/Rdhwg8+XZLujiwhIFWyyudQIJuL23Y6wFMMPfNYP1G2l
w4XU7yuYjTT8UcLnQruFCDQy9SESkSBcvdkNWbDIuOB9j9NhzhSAqWjqOF8U
Rogarvj8loPP3BW9XkehQ+0vmhs3fCRBvrj0WO1jGv5V1uoXbywMWcP5x1qG
ppGe6JH87HuDqGaTb3nQGzF8uv5Z6JwPBZ57ZEzXXSOKD/tKPa0dmAH9Sm1s
n3oSFFd8cijHYYk3Hs0lHdq2xHU5vrt0EmbR3zjFTyYbeHhPj7OxlbgofOI7
I7gq/QPY5D2mIrh0L1et6al2rJoBmbyUi2+pjcCFqx7gMcrEX4x2xcvtpEDd
iEYb5DiPXLXiD5krT6OPhBDBIxZsTOHorT7jSsD7Vk10/H7LwH2Uxb9byvnY
plC2bvHSXxS1zN5KsU8aj/eHHGN3UWBgs272THEGeh1mV2AzK4W91wXXdG0f
Bq3/8v8IfRgFkXYlrbMPWLjOUE5/+gYBxnwbUGk6LgAfRZB4YWwOnrp36eBI
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
       "]],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics3D",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "MeshGraphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True}]], "Output",
 CellLabel->"Out[1]=",
 CellID->12,ExpressionUUID->"d8da4e77-c23a-49c5-acbe-7f8e48291089"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "1"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "1"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ff9cad7c-4e6d-4889-a52f-4a8a249d3eb1"],
 "Options"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->13,ExpressionUUID->"22ed9c57-25b6-49cc-864a-1790eb5ca7ef"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "2"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "a767805b-be4b-4cdc-9436-28cf86698094"],
 "AccuracyGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->14,ExpressionUUID->"3a2a69d9-bb2f-4713-88bb-b75b5a67c5a1"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "3"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d5ff9a70-1723-4bf4-b495-628af7923288"],
 "AlignmentPoint"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->15,ExpressionUUID->"85fd7449-8e06-4330-afe5-3c8a43cc8744"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "4"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "4"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b4746082-d758-47db-9ae3-8031917cfa6a"],
 "AspectRatio"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->16,ExpressionUUID->"ad2c2908-1cc6-41b9-a115-b153048ffe52"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "5"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "5"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "49c2610b-2979-4b54-bbd0-4e701438bf2d"],
 "AutomaticImageSize"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->17,ExpressionUUID->"12756ce8-54fe-41a1-ba3c-3ec29f1fcaed"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "6"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "6"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2b164c5c-8334-47b1-84c4-86956b869612"],
 "Axes"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->18,ExpressionUUID->"681dfb02-fd46-4d78-a670-15ad51275632"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "7"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "7"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c559c60f-3411-4e3d-afb7-b2a131456101"],
 "AxesEdge"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->19,ExpressionUUID->"3a410d1d-0811-434a-ad42-45e4405a65af"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "8"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "8"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ccf6f2ef-0d46-4828-98e6-130bf1852d57"],
 "AxesLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->20,ExpressionUUID->"977e5044-c9bf-49f3-9e14-73ae99526b21"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "9"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "9"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "0f8e6a49-5086-474a-8665-34e64ca4f117"],
 "AxesOrigin"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->21,ExpressionUUID->"51077973-7bf0-4cef-aa11-8e027fcb3c5f"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "10"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "10"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "42850589-22bf-4f80-b15a-1d03c4b449a9"],
 "AxesStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->22,ExpressionUUID->"f8376e38-933e-4a73-a117-0fe4a3898968"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "11"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "11"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2fee732d-dbbc-4a29-bf02-ca21210d3ba4"],
 "Background"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->23,ExpressionUUID->"e22f129f-5a20-459f-bef2-6511c6fd6a7d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "12"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "12"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c2d90a95-10cc-46c9-9dc0-5cb3d839c554"],
 "BaselinePosition"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->24,ExpressionUUID->"46ea0f3a-2211-4715-ab54-66885cf38421"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "13"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "13"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "5cbcca6d-2800-40f9-a568-3266ca89f40d"],
 "BaseStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->25,ExpressionUUID->"2e2bcf35-96b4-4acf-b7ff-ada5e1ab831d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "14"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "14"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "11aad73a-b331-4acc-84dd-578495b39327"],
 "Boxed"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->26,ExpressionUUID->"b01ecba1-d881-479d-a97e-c01a4fccd005"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "15"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "15"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "8ed991dc-3c00-4ee3-91d3-253dd515cb17"],
 "BoxRatios"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->27,ExpressionUUID->"036266fc-1b89-44bf-b0db-824ef4e05303"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "16"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "16"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "0318cf7c-bc91-49ec-a993-996f43d608de"],
 "BoxStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->28,ExpressionUUID->"70831886-2a54-47d7-8a35-103f8e93e9a8"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "17"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "17"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "6212a0c1-bdb4-4542-86e3-62459d40e1d8"],
 "ControllerLinking"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->29,ExpressionUUID->"a1a50a3b-1231-4ec0-a403-76f721c810b5"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "18"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "18"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "4f99c1f5-b007-493a-858e-36a47bec8da4"],
 "ControllerMethod"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->30,ExpressionUUID->"c09cf575-8b4b-46ba-a759-d8d427243b26"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "19"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "19"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "20b7f492-0aa6-4024-b2e0-aaa815976d5d"],
 "ControllerPath"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->31,ExpressionUUID->"b2f4d847-5452-40d1-882d-b7b7976eac2f"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "20"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "20"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "0e43a081-bb8a-49b1-a8cc-ff7211a24786"],
 "DisplayFunction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->32,ExpressionUUID->"ecc13a36-697f-46be-9375-5e78b9876e08"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "21"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "21"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "6c6673b1-db2f-45fc-8031-f95cf2926fea"],
 "Epilog"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->33,ExpressionUUID->"6402389d-f606-4110-9b49-6c504cf2cfc0"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "22"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "22"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b6c77d75-7686-4ee3-8e97-58ef14078533"],
 "FaceGrids"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->34,ExpressionUUID->"d98fcdd2-3fc7-4a75-b498-c9761a054ff2"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "23"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "23"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "541044b1-722a-4f90-a8b5-d5628eac38aa"],
 "FaceGridsStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->35,ExpressionUUID->"cdef980c-e5c7-468e-b768-f38d73a0c064"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "24"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "24"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "e491c8bd-b29f-4e37-804d-b5adcda57e23"],
 "Frame"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->36,ExpressionUUID->"8c57648a-c3c6-42ce-a9be-3a9303ba988d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "25"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "25"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "359bef4f-a212-4bed-8132-4b46a4e02ab9"],
 "FrameLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->37,ExpressionUUID->"022b2954-3c2e-487e-af98-d22fbd7921bd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "26"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "26"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b3993eb7-2bf1-4cee-995b-cf0d241df26d"],
 "FrameStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->38,ExpressionUUID->"ff27c3bb-3477-4da9-b032-03758a286016"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "27"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "27"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "85d13ce1-63f8-48e2-a050-c8fce23fe335"],
 "FrameTicks"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->39,ExpressionUUID->"f577e792-a6f3-4cd5-8976-384f0e15ebf6"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "28"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "28"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "69ced266-a5f1-47fb-808f-d08f41f650f8"],
 "FrameTicksStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->40,ExpressionUUID->"af9609c9-7a4d-47fd-b00b-e0cc8775d41c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "29"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "29"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "1253a4be-3edd-48f2-bda4-d39f29a57e3f"],
 "GridLines"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->41,ExpressionUUID->"83f212de-bed0-4ea7-85b2-b198a03bd6e6"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "30"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "30"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c75b5dec-222d-4df6-8467-72ab4dc03caf"],
 "GridLinesStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->42,ExpressionUUID->"499f23d6-8095-4808-8762-7ce12ef21314"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "31"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "31"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "31d04f0f-b56e-4b31-b6b3-24b56878865a"],
 "ImageMargins"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->43,ExpressionUUID->"d11eaf66-8b9a-46e3-bd68-20ad628e80ce"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "32"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "32"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "1393353c-7096-48a5-a124-6f902e97d4d5"],
 "ImagePadding"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->44,ExpressionUUID->"f76c56d0-ae34-4768-a0ce-724a0032bc64"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "33"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "33"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "928ef671-be7e-4ac4-b815-13c51995834f"],
 "ImageSize"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->45,ExpressionUUID->"1d214dc2-d68e-4941-84b5-e4965f5d96ab"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "34"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "34"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b134f860-4e35-4a4a-84fb-01e0dd28683b"],
 "LabelStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->46,ExpressionUUID->"a9c66c6b-2f07-4f5f-9531-7e262d7fff92"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "35"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "35"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "751fbe55-0fff-487e-9f37-59183c50d603"],
 "Lighting"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->47,ExpressionUUID->"32a11409-516b-44bd-80f6-e8e84e6e4b4a"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "36"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "36"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "7036c1ca-3b13-4309-aab1-f4c66226c2d4"],
 "MaxCellMeasure"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->48,ExpressionUUID->"2f6afcb4-904d-43ee-a2a3-d460afba32f0"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "37"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "37"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "cb0f6aeb-260b-4b54-b848-ddb8329326dc"],
 "MeshCellHighlight"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->49,ExpressionUUID->"34e26bce-0ef9-4fb3-a46f-12802b5962fd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "38"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "38"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2ca133c7-ee23-4a3f-a5e9-a0dd2c1a2d42"],
 "MeshCellLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->50,ExpressionUUID->"dec87df5-bfd4-4b20-8583-8672c6a48a24"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "39"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "39"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "6bdcc70e-830b-42bf-a204-0d8f9c879178"],
 "MeshCellMarker"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->51,ExpressionUUID->"ddebb69f-0f35-463b-b2ff-8c1dcab7f5ab"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "40"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "40"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "cabafc8e-5c33-4345-8450-a5abbf1be7e6"],
 "MeshCellShapeFunction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->52,ExpressionUUID->"d9bebc9a-e4d6-4887-929e-8eeec3d45b21"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "41"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "41"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "47caf534-2e24-47a9-92ec-e8da089de2de"],
 "MeshCellStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->53,ExpressionUUID->"eaa0b704-d22f-4468-a8c2-f9a47555b9fd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "42"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "42"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "8eb98463-b21c-4f29-994d-11ab9388b349"],
 "Method"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->54,ExpressionUUID->"c4992b90-5736-494c-b9af-a6b81b39962b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "43"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "43"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "7f8afd2a-17b1-477b-b625-15dcc88cf77d"],
 "PerformanceGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->55,ExpressionUUID->"e9b9d5d1-0e8b-4e05-9034-ba2a2dea2921"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "44"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "44"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "3e107140-d714-4d97-82f2-e6fd4b3739c5"],
 "PlotLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->56,ExpressionUUID->"eeb46720-12de-4bc3-badd-05fc37d4a96d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "45"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "45"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ab6e24f5-f2dd-41a0-adbb-27bf10efcad9"],
 "PlotRange"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->57,ExpressionUUID->"f248cc2b-ef23-40c2-8d00-81e806c6c79c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "46"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "46"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c1d05af5-fbab-488d-8725-779cf93b4648"],
 "PlotRangeClipping"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->58,ExpressionUUID->"3083b9fa-ed2c-4014-bc44-ce708abccfda"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "47"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "47"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "3063d534-26e2-4f9b-a7ec-0736226b7d76"],
 "PlotRangePadding"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->59,ExpressionUUID->"d30340f4-d712-47cc-892a-57073d3591f8"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "48"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "48"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "cc360904-f179-4e7a-b624-1dd2a42fef42"],
 "PlotRegion"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->60,ExpressionUUID->"25111efe-7d54-41e7-afd6-d62a43488d1f"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "49"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "49"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "575ffa31-0b85-48c5-a9cd-1d5cd7f4d8c1"],
 "PlotTheme"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->61,ExpressionUUID->"91cf7abf-3758-43fe-b8bc-cbcd0aca873d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "50"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "50"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "eed583f5-3c26-4a29-b43f-81dd63f0a8fc"],
 "PrecisionGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->62,ExpressionUUID->"90afeac8-5afe-418e-9572-09b64e95436e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "51"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "51"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "3eedbe47-98d3-4af7-b0c9-f081c9016940"],
 "Prolog"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->63,ExpressionUUID->"bd9c4001-3cc3-4dac-b835-8a307cf0523b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "52"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "52"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d54e27b8-6d2b-4729-a865-47b5ab160560"],
 "Properties"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->64,ExpressionUUID->"ec429769-696f-47b7-8b05-e7e27f12fd31"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "53"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "53"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "e864ce10-2199-4046-81f6-dfde7c8403c7"],
 "RotateLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->65,ExpressionUUID->"3befb5bc-f069-4389-b383-0be789f5ac59"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "54"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "54"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "6dd14c85-a854-44d7-b596-89fd27c6305b"],
 "RotationAction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->66,ExpressionUUID->"2c59fb16-0ef3-44d9-9c8a-06852a1980ae"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "55"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "55"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "4bbdf064-6342-43c7-9c73-e5901f8bb177"],
 "SphericalRegion"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->67,ExpressionUUID->"445f52a3-2d30-4283-8804-ae4a3862c49c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "56"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "56"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "616b8e32-4b89-408e-a189-95227ff0b439"],
 "Ticks"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->68,ExpressionUUID->"9be154a3-3ce1-4105-8cab-91c866b36788"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "57"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "57"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "21f794be-0468-4851-ab6b-273a2e80ae5a"],
 "TicksStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->69,ExpressionUUID->"d22b61d3-8610-4f4f-949b-ff5661c2ab23"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "58"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "58"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "caef6584-4fda-47a8-8637-42e328f874ca"],
 "TouchscreenAutoZoom"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->70,ExpressionUUID->"b333fee8-511f-4e7d-b94c-b02ee4aa8f35"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "59"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "59"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b4c50546-d25b-404e-8757-b87d9ac6c17b"],
 "ViewAngle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->71,ExpressionUUID->"3cb856d2-3e71-411a-896d-c86648606fc8"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "60"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "60"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "3f954f43-7a9d-4ce6-b58f-ba19376903b4"],
 "ViewCenter"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->72,ExpressionUUID->"60078773-d256-4fc2-927a-0348f00805b3"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "61"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "61"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "45ca5c24-b12b-49e3-9cfc-87ed39bab205"],
 "ViewMatrix"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->73,ExpressionUUID->"c6a8ca60-4f6f-4cec-b885-6d032bfbb8b7"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "62"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "62"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "824e7431-a87c-4671-b5a4-5ae7761d689a"],
 "ViewPoint"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->74,ExpressionUUID->"020f7d2f-8d5f-4e23-891d-b92bef59358e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "63"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "63"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "192fe359-901f-4700-9a50-600906d081de"],
 "ViewRange"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->75,ExpressionUUID->"54504cd8-c350-4e18-8545-c1c7e165f163"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "64"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "64"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "cb9297a8-d44e-4256-8825-6d5138c77743"],
 "ViewVector"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->76,ExpressionUUID->"9a33b4b7-4ac9-4761-83f9-d179d157871e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "65"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "65"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d1d8116f-172a-450b-8d4d-872243e19ed4"],
 "ViewVertical"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->77,ExpressionUUID->"19a6eb13-fc2d-4d80-92b4-81dde5fbaa41"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "66"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "66"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "94da96f3-650d-4d2c-b0a8-7b08c85b4ba9"],
 "AccuracyGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->78,ExpressionUUID->"0d4efaf3-d0a3-4319-af3c-4c0cf33f7f44"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "67"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "67"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ae6851ac-3ebd-4d8d-b960-f58ea737df91"],
 "AlignmentPoint"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->79,ExpressionUUID->"16e0b685-b18b-47f6-b877-566af4c5b321"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "68"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "68"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "4d56a8c5-ebef-41b4-9e13-6983804d7c0e"],
 "AspectRatio"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->80,ExpressionUUID->"06f181d1-8782-4e22-869d-0fcabeee94c3"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "69"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "69"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "4dbe2bf7-b892-4082-bbfd-4236e6a12d68"],
 "AutomaticImageSize"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->81,ExpressionUUID->"d6ec8bf5-485c-4dfd-ae3d-c46bf993eeb7"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "70"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "70"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "97863a65-a132-450c-9e11-a3fb47f6fd44"],
 "Axes"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->82,ExpressionUUID->"bf5c0160-2d73-43d1-82b9-1126ab795af8"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "71"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "71"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "7ac9ae54-0c39-4d1f-a369-0667eb376b83"],
 "AxesEdge"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->83,ExpressionUUID->"30e8bcee-6026-47f3-a1c3-9bc421310527"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "72"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "72"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "da018ea8-d104-4380-8034-ef34ccbfd2de"],
 "AxesLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->84,ExpressionUUID->"323c4ac0-b510-4e93-a0ac-6c46cb601806"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "73"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "73"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "760b3b76-8108-4f71-8bb1-6409fbc72acd"],
 "AxesOrigin"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->85,ExpressionUUID->"3534f2f9-7000-43af-842f-4ce15c54867b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "74"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "74"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b6b7ae54-de36-45f1-88ba-df2a7f575296"],
 "AxesStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->86,ExpressionUUID->"1d738d85-6e5d-4e02-adea-74abe9b54008"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "75"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "75"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f64f1047-c437-405c-a11c-18c0d881acb8"],
 "Background"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->87,ExpressionUUID->"6eb1a596-763e-4f79-9ae4-d3c8eb2b7f70"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "76"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "76"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "bccdf5a2-203f-48b3-a18d-1ee51c6fb4e0"],
 "BaselinePosition"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->88,ExpressionUUID->"4e27ed4f-fb34-4d02-97c7-976802bf5693"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "77"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "77"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d75dd13e-f5a1-4027-b02f-fff79467b971"],
 "BaseStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->89,ExpressionUUID->"2cbfbd2b-9336-4882-a2b6-2a7494fd29a7"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "78"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "78"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "24c94ea0-1ce1-430f-b8aa-e0fbe73b15db"],
 "Boxed"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->90,ExpressionUUID->"f58b4817-77ea-40b5-9c54-e955d73b6a7c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "79"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "79"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f3e276bc-04ae-4325-914c-98974a6d5872"],
 "BoxRatios"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->91,ExpressionUUID->"aac1204a-ccbb-4766-acf7-dd0213bf083b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "80"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "80"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f95992de-321d-4528-adc1-75ae323e82b6"],
 "BoxStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->92,ExpressionUUID->"02d59e10-f16e-4049-98b7-a008554812bb"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "81"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "81"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "5c49748c-7e4f-4407-a4ae-35fcc8495d8d"],
 "ControllerLinking"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->93,ExpressionUUID->"728788de-e2e0-4922-b50a-46692b5c6754"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "82"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "82"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "3cb2ee9c-e6c6-4981-bdaf-31c1b5017843"],
 "ControllerMethod"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->94,ExpressionUUID->"787fa730-52d1-4ed1-b7f7-5f14e2eaae09"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "83"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "83"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "55baaec6-5137-470b-8c67-4a5c2e9b50df"],
 "ControllerPath"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->95,ExpressionUUID->"a3fd281d-5f41-4680-8cb2-5437f177302b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "84"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "84"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "112989c5-5f95-47b6-acfc-91ddb2bb8a37"],
 "DisplayFunction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->96,ExpressionUUID->"fb3c38f0-f0b3-4122-9284-9e47ebfef7dd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "85"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "85"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b7e90356-8bf4-4932-8993-bd881e95672a"],
 "Epilog"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->97,ExpressionUUID->"957e2329-7e52-49a7-8e04-fe763346a8fe"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "86"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "86"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b1e5aad8-a8ac-464d-8d7e-5df8c02c21db"],
 "FaceGrids"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->98,ExpressionUUID->"c7e4e3a3-4daa-43ce-834e-0e42449c7e04"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "87"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "87"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f9e5df74-7bb0-416c-88c5-a85408694332"],
 "FaceGridsStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->99,ExpressionUUID->"023cf36b-026d-4de0-ac73-ab0807429ecd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "88"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "88"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "7c541984-6f39-48ae-878c-7a8102d3d9d5"],
 "Frame"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->100,ExpressionUUID->"22c6ddd0-1584-4b12-89cc-b8deb6699425"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "89"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "89"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "825e52fd-881b-453b-b240-17b188d99a24"],
 "FrameLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->101,ExpressionUUID->"114193dd-1a06-402b-8a25-d9e8c911686f"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "90"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "90"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "e15e9fe0-ef16-4014-a013-8e0f2e26b085"],
 "FrameStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->102,ExpressionUUID->"afc5ce6a-7f07-4fdd-aafc-effca5f61cdd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "91"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "91"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "373434d5-9191-4bb3-b848-b3f5078d4149"],
 "FrameTicks"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->103,ExpressionUUID->"e7131a92-29d1-49ec-bf4b-0afe79c54a51"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "92"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "92"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "efa0a7c0-af61-4341-bb4c-3027aea7f322"],
 "FrameTicksStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->104,ExpressionUUID->"07c17f8d-d1f6-444d-985a-1162207607b9"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "93"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "93"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "39b4645b-c741-4c86-a2bb-1ff0c2cfa345"],
 "GridLines"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->105,ExpressionUUID->"6a53415f-6aff-4e31-bd9f-559630db4941"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "94"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "94"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "87fff2eb-b461-4f42-925e-1ff286970d50"],
 "GridLinesStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->106,ExpressionUUID->"4914d064-b50b-4ae0-893f-1fe2026a7062"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "95"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "95"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d19d6218-99f8-4cf9-9110-2a40521ab4a5"],
 "ImageMargins"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->107,ExpressionUUID->"46a2b1ca-5ad5-4ecc-824e-4b68e7f366a7"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "96"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "96"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2d8520ac-d7fb-4b6f-8715-4811d070b7b7"],
 "ImagePadding"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->108,ExpressionUUID->"e73bd39b-cb92-40b9-b48d-d6a5b0179f08"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "97"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "97"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "e7dffa59-c32d-469d-b190-c1bbfcd7387e"],
 "ImageSize"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->109,ExpressionUUID->"60abb70c-8ef5-45f2-901d-ac54ba1f62b6"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "98"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "98"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "1435c105-5551-4cc7-b502-55c3df8b1979"],
 "LabelStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->110,ExpressionUUID->"ca03b214-9626-405e-bea7-dc3a5c52e8a0"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "99"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "99"}] = #; Null)& ,
          ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "c6377252-6eff-4ecf-a3eb-ee95a1aa607f"],
 "Lighting"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->111,ExpressionUUID->"4e04e843-fe9d-48c9-a6b0-27667da9db14"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "100"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "100"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f89b074c-e0e4-483d-885e-34e8033a5d5a"],
 "MaxCellMeasure"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->112,ExpressionUUID->"50a9b085-2e4d-4958-89f9-31588be24403"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "101"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "101"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "de38c78c-8b7b-44b3-8fd4-6971f524f630"],
 "MeshCellHighlight"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->113,ExpressionUUID->"5bcd16a5-37dc-4469-a328-80ecde898834"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "102"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "102"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "8b076ae1-87da-4430-9dd0-9d8781321c49"],
 "MeshCellLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->114,ExpressionUUID->"b2831f86-c51b-44c7-a094-8fda6a012001"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "103"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "103"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ccaacbac-b2a1-4a47-b7fc-1b9fccd6be88"],
 "MeshCellMarker"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->115,ExpressionUUID->"590491bf-1bc1-434f-a494-0a4a16ae5a8e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "104"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "104"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "dcd84c8f-0f36-436c-9cc8-146fc6670642"],
 "MeshCellShapeFunction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->116,ExpressionUUID->"62e92780-fffe-4d75-93d2-c3f67a9a3329"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "105"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "105"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "8166c86c-e383-4d8e-987d-568a3e93e63e"],
 "MeshCellStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->117,ExpressionUUID->"0c1ca476-aac2-4f39-8663-ee734285a44f"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "106"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "106"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "a2e55021-28e3-4cbf-94cc-be7736d8ed2b"],
 "MeshQualityGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->118,ExpressionUUID->"c2ff802b-79c5-4cc7-b1c4-a0f48feef110"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "107"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "107"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "617f6fac-26ab-4dbe-a32c-6d60872edc8e"],
 "MeshRefinementFunction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->119,ExpressionUUID->"94b01ca6-3506-4053-9194-d76b686bf363"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "108"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "108"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ca36f27f-ab6b-48b7-93f9-7ae954da4d4d"],
 "Method"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->120,ExpressionUUID->"df0d7d01-f17d-4b6f-9aac-dc28490a7ab9"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "109"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "109"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "92d2a571-1631-45ab-9c25-b3eef549285e"],
 "PerformanceGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->121,ExpressionUUID->"08dfc0ee-11f4-4a8e-a7cc-7def4a10580c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "110"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "110"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "72d8b6cf-3323-4294-9401-75bb82ad910b"],
 "PlotLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->122,ExpressionUUID->"18e0f08c-3f42-4ac7-a342-e61c819af079"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "111"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "111"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "1c302883-e874-4736-b11c-6a4bb71acb25"],
 "PlotRange"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->123,ExpressionUUID->"dfdeab4d-dc17-439b-b6d7-e046876dde5c"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "112"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "112"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "828df005-ad68-4dbc-a505-48f0ea0916ac"],
 "PlotRangeClipping"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->124,ExpressionUUID->"a6acfbc1-523a-4a03-98d9-887afd4f12cd"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "113"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "113"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "28f21027-43c1-41f2-8a42-9b21bc64137a"],
 "PlotRangePadding"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->125,ExpressionUUID->"1cfbffff-0924-4b48-bfa1-19bb0833a590"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "114"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "114"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "95848f00-e025-4d71-bccc-9248a57d6675"],
 "PlotRegion"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->126,ExpressionUUID->"9518ac4d-6f73-4c39-a395-25791ba1de06"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "115"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "115"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "18665a70-fb86-481e-a88d-c1fd0cc1d9a2"],
 "PlotTheme"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->127,ExpressionUUID->"662e4168-beb6-459c-838e-b0d843329df7"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "116"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "116"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "397e5f91-1e0d-4abd-8214-9c3fe82fd118"],
 "PrecisionGoal"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->128,ExpressionUUID->"ba08c9ca-dab5-4cf4-8031-987949f28673"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "117"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "117"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "a1a91f6f-853a-48fd-908c-a48cf6084ce7"],
 "Prolog"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->129,ExpressionUUID->"5a5796c4-691c-4a45-9924-cd95b75ba2e2"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "118"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "118"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "90b4a3d4-5f70-403d-b58e-96e805d59490"],
 "Properties"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->130,ExpressionUUID->"113c7c9a-7f31-43f5-9fa7-674e2932b521"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "119"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "119"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "10a1d43a-ea1a-4022-aedd-22fb8e023063"],
 "RotateLabel"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->131,ExpressionUUID->"2d0aa4e0-000a-4ce3-bc2e-b3be4f3ae2b5"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "120"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "120"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "14afe274-24d5-46a9-8e14-0d12a3417724"],
 "RotationAction"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->132,ExpressionUUID->"4fa80ecc-fa63-4710-a03a-ec72aa42143b"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "121"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "121"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "39aea592-79b3-480d-a3d5-ec365d69205c"],
 "SphericalRegion"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->133,ExpressionUUID->"c7eb03b6-1f10-45a9-b7d4-db8b8497b2e3"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "122"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "122"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2eb1e445-e16f-4ca3-b536-13a209d84597"],
 "Ticks"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->134,ExpressionUUID->"fc958ba0-24d5-425a-be7b-51b9323c2fd5"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "123"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "123"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "63d441e7-fba0-4191-ae0e-572480c55546"],
 "TicksStyle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->135,ExpressionUUID->"40ee41d7-c12b-4bb9-bd61-f964729413a9"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "124"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "124"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b28bebf5-7113-4288-b7f9-4dfaee62767c"],
 "TouchscreenAutoZoom"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->136,ExpressionUUID->"5454e6eb-c0c8-470c-ab4c-b5a43ef6f95e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "125"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "125"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "af67d9c6-ef68-47fb-8c4f-03d194caa5f0"],
 "ViewAngle"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->137,ExpressionUUID->"a53e8599-c02f-4a0a-9d35-5f6ff2c0dc05"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "126"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "126"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "9ea89f3e-89e0-47dc-ac8d-fe8970858b99"],
 "ViewCenter"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->138,ExpressionUUID->"c539b841-1b92-4722-af2f-a682d26240dc"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "127"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "127"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "b99d1588-25a8-46b4-8360-ba5d71cf6bc3"],
 "ViewMatrix"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->139,ExpressionUUID->"fda03a12-26d2-4870-8de1-86f20d8f4a22"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "128"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "128"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "4ce3dd15-b48d-436c-bb24-e4953d52822a"],
 "ViewPoint"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->140,ExpressionUUID->"aa6f4867-ec58-4498-83d5-7a76300f026e"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "129"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "129"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "d1ce19c8-01e2-4cac-aeae-72837ec73a8b"],
 "ViewRange"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->141,ExpressionUUID->"74ac036e-8e23-4b57-88e4-b3f0f4de501d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "130"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "130"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "2452368a-b056-41a2-a871-8645ca200c88"],
 "ViewVector"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->142,ExpressionUUID->"4f400528-42f5-4541-a79b-27f7fb2a7e3d"],

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSubsection", "131"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSubsection", "131"}] = #; 
         Null)& , ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "95258501-0ac3-4e13-b3ed-b6d532cc1647"],
 "ViewVertical"
}], "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->143,ExpressionUUID->"98c3e483-0775-4f30-841b-87671e6202b5"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->144,ExpressionUUID->"d04eaa58-9963-4760-9fbc-484877aaa506"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSurfacePlot"]],"paclet:ChemTools/ref/ChemSurfacePlot"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"b9831cff-ab63-4710-a9ad-4ffe64080351"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["AtomsetVdWSurface"]],"paclet:ChemTools/ref/AtomsetVdWSurface"},
   
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"667cf5a6-6189-485c-a083-7c154d32d205"]
}], "SeeAlso",
 CellID->145,ExpressionUUID->"cbf952df-1555-494d-943a-6476b3019f05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->146,ExpressionUUID->"33c7ee3f-d534-4349-847e-1e79a25828b7"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Objects"]], "paclet:ChemTools/guide/ChemObjects"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Objects"]], "paclet:ChemTools/guide/ChemObjects"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{108., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->147,ExpressionUUID->"d0bcc5eb-5920-4f68-abfe-49cbb94ebed2"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Object Applications"]], 
     "paclet:ChemTools/guide/ChemObjectApplications"}, "RefLink", 
    BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Object Applications"]], 
     "paclet:ChemTools/guide/ChemObjectApplications"}, "RefLinkPlain", 
    BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{116., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->148,ExpressionUUID->"1212f21b-ae53-4028-9b5d-2ceeb0da4dcb"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->149,ExpressionUUID->"bc8795ca-44f3-4b5b-8dfe-9868c852c239"],

Cell[" ", "FooterCell",
 CellID->150,ExpressionUUID->"ac4bef25-7f01-44c7-9a19-9844f447f941"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"ChemSurface",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 45, 31.348182}", 
    "history" -> {"11.1", "", ""}, "context" -> "ChemTools`", 
    "keywords" -> {"chemsurface", "chem", "surface"}, "specialkeywords" -> 
    Automatic, "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "ChemTools", "language" -> "ChemTools", "paclet" -> "Mathematica", 
    "status" -> "None", "summary" -> 
    "Generates a surface from a graphic or ChemObject", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "ChemSurface", "titlemodifier" -> 
    "ChemSurface", "windowtitle" -> "ChemSurface", "type" -> "Symbol", "uri" -> 
    "ChemTools/ref/ChemSurface"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed}, 
    "ExampleSection" -> {"1" -> Closed}, 
    "ExampleSubsection" -> {
     "2" -> Closed, "3" -> Closed, "4" -> Closed, "5" -> Closed, "6" -> 
      Closed, "7" -> Closed, "8" -> Closed, "9" -> Closed, "10" -> Closed, 
      "11" -> Closed, "12" -> Closed, "13" -> Closed, "14" -> Closed, "15" -> 
      Closed, "16" -> Closed, "17" -> Closed, "18" -> Closed, "19" -> Closed, 
      "20" -> Closed, "21" -> Closed, "22" -> Closed, "23" -> Closed, "24" -> 
      Closed, "25" -> Closed, "26" -> Closed, "27" -> Closed, "28" -> Closed, 
      "29" -> Closed, "30" -> Closed, "31" -> Closed, "32" -> Closed, "33" -> 
      Closed, "34" -> Closed, "35" -> Closed, "36" -> Closed, "37" -> Closed, 
      "38" -> Closed, "39" -> Closed, "40" -> Closed, "41" -> Closed, "42" -> 
      Closed, "43" -> Closed, "44" -> Closed, "45" -> Closed, "46" -> Closed, 
      "47" -> Closed, "48" -> Closed, "49" -> Closed, "50" -> Closed, "51" -> 
      Closed, "52" -> Closed, "53" -> Closed, "54" -> Closed, "55" -> Closed, 
      "56" -> Closed, "57" -> Closed, "58" -> Closed, "59" -> Closed, "60" -> 
      Closed, "61" -> Closed, "62" -> Closed, "63" -> Closed, "64" -> Closed, 
      "65" -> Closed, "66" -> Closed, "67" -> Closed, "68" -> Closed, "69" -> 
      Closed, "70" -> Closed, "71" -> Closed, "72" -> Closed, "73" -> Closed, 
      "74" -> Closed, "75" -> Closed, "76" -> Closed, "77" -> Closed, "78" -> 
      Closed, "79" -> Closed, "80" -> Closed, "81" -> Closed, "82" -> Closed, 
      "83" -> Closed, "84" -> Closed, "85" -> Closed, "86" -> Closed, "87" -> 
      Closed, "88" -> Closed, "89" -> Closed, "90" -> Closed, "91" -> Closed, 
      "92" -> Closed, "93" -> Closed, "94" -> Closed, "95" -> Closed, "96" -> 
      Closed, "97" -> Closed, "98" -> Closed, "99" -> Closed, "100" -> Closed,
       "101" -> Closed, "102" -> Closed, "103" -> Closed, "104" -> Closed, 
      "105" -> Closed, "106" -> Closed, "107" -> Closed, "108" -> Closed, 
      "109" -> Closed, "110" -> Closed, "111" -> Closed, "112" -> Closed, 
      "113" -> Closed, "114" -> Closed, "115" -> Closed, "116" -> Closed, 
      "117" -> Closed, "118" -> Closed, "119" -> Closed, "120" -> Closed, 
      "121" -> Closed, "122" -> Closed, "123" -> Closed, "124" -> Closed, 
      "125" -> Closed, "126" -> Closed, "127" -> Closed, "128" -> Closed, 
      "129" -> Closed, "130" -> Closed, "131" -> Closed}, 
    "ExampleSubsection" -> {"3" -> Closed}, 
    "ExampleSubsection" -> {"4" -> Closed}, 
    "ExampleSubsection" -> {"5" -> Closed}, 
    "ExampleSubsection" -> {"6" -> Closed}, 
    "ExampleSubsection" -> {"7" -> Closed}, 
    "ExampleSubsection" -> {"8" -> Closed}, 
    "ExampleSubsection" -> {"9" -> Closed}, 
    "ExampleSubsection" -> {"10" -> Closed}, 
    "ExampleSubsection" -> {"11" -> Closed}, 
    "ExampleSubsection" -> {"12" -> Closed}, 
    "ExampleSubsection" -> {"13" -> Closed}, 
    "ExampleSubsection" -> {"14" -> Closed}, 
    "ExampleSubsection" -> {"15" -> Closed}, 
    "ExampleSubsection" -> {"16" -> Closed}, 
    "ExampleSubsection" -> {"17" -> Closed}, 
    "ExampleSubsection" -> {"18" -> Closed}, 
    "ExampleSubsection" -> {"19" -> Closed}, 
    "ExampleSubsection" -> {"20" -> Closed}, 
    "ExampleSubsection" -> {"21" -> Closed}, 
    "ExampleSubsection" -> {"22" -> Closed}, 
    "ExampleSubsection" -> {"23" -> Closed}, 
    "ExampleSubsection" -> {"24" -> Closed}, 
    "ExampleSubsection" -> {"25" -> Closed}, 
    "ExampleSubsection" -> {"26" -> Closed}, 
    "ExampleSubsection" -> {"27" -> Closed}, 
    "ExampleSubsection" -> {"28" -> Closed}, 
    "ExampleSubsection" -> {"29" -> Closed}, 
    "ExampleSubsection" -> {"30" -> Closed}, 
    "ExampleSubsection" -> {"31" -> Closed}, 
    "ExampleSubsection" -> {"32" -> Closed}, 
    "ExampleSubsection" -> {"33" -> Closed}, 
    "ExampleSubsection" -> {"34" -> Closed}, 
    "ExampleSubsection" -> {"35" -> Closed}, 
    "ExampleSubsection" -> {"36" -> Closed}, 
    "ExampleSubsection" -> {"37" -> Closed}, 
    "ExampleSubsection" -> {"38" -> Closed}, 
    "ExampleSubsection" -> {"39" -> Closed}, 
    "ExampleSubsection" -> {"40" -> Closed}, 
    "ExampleSubsection" -> {"41" -> Closed}, 
    "ExampleSubsection" -> {"42" -> Closed}, 
    "ExampleSubsection" -> {"43" -> Closed}, 
    "ExampleSubsection" -> {"44" -> Closed}, 
    "ExampleSubsection" -> {"45" -> Closed}, 
    "ExampleSubsection" -> {"46" -> Closed}, 
    "ExampleSubsection" -> {"47" -> Closed}, 
    "ExampleSubsection" -> {"48" -> Closed}, 
    "ExampleSubsection" -> {"49" -> Closed}, 
    "ExampleSubsection" -> {"50" -> Closed}, 
    "ExampleSubsection" -> {"51" -> Closed}, 
    "ExampleSubsection" -> {"52" -> Closed}, 
    "ExampleSubsection" -> {"53" -> Closed}, 
    "ExampleSubsection" -> {"54" -> Closed}, 
    "ExampleSubsection" -> {"55" -> Closed}, 
    "ExampleSubsection" -> {"56" -> Closed}, 
    "ExampleSubsection" -> {"57" -> Closed}, 
    "ExampleSubsection" -> {"58" -> Closed}, 
    "ExampleSubsection" -> {"59" -> Closed}, 
    "ExampleSubsection" -> {"60" -> Closed}, 
    "ExampleSubsection" -> {"61" -> Closed}, 
    "ExampleSubsection" -> {"62" -> Closed}, 
    "ExampleSubsection" -> {"63" -> Closed}, 
    "ExampleSubsection" -> {"64" -> Closed}, 
    "ExampleSubsection" -> {"65" -> Closed}, 
    "ExampleSubsection" -> {"66" -> Closed}, 
    "ExampleSubsection" -> {"67" -> Closed}, 
    "ExampleSubsection" -> {"68" -> Closed}, 
    "ExampleSubsection" -> {"69" -> Closed}, 
    "ExampleSubsection" -> {"70" -> Closed}, 
    "ExampleSubsection" -> {"71" -> Closed}, 
    "ExampleSubsection" -> {"72" -> Closed}, 
    "ExampleSubsection" -> {"73" -> Closed}, 
    "ExampleSubsection" -> {"74" -> Closed}, 
    "ExampleSubsection" -> {"75" -> Closed}, 
    "ExampleSubsection" -> {"76" -> Closed}, 
    "ExampleSubsection" -> {"77" -> Closed}, 
    "ExampleSubsection" -> {"78" -> Closed}, 
    "ExampleSubsection" -> {"79" -> Closed}, 
    "ExampleSubsection" -> {"80" -> Closed}, 
    "ExampleSubsection" -> {"81" -> Closed}, 
    "ExampleSubsection" -> {"82" -> Closed}, 
    "ExampleSubsection" -> {"83" -> Closed}, 
    "ExampleSubsection" -> {"84" -> Closed}, 
    "ExampleSubsection" -> {"85" -> Closed}, 
    "ExampleSubsection" -> {"86" -> Closed}, 
    "ExampleSubsection" -> {"87" -> Closed}, 
    "ExampleSubsection" -> {"88" -> Closed}, 
    "ExampleSubsection" -> {"89" -> Closed}, 
    "ExampleSubsection" -> {"90" -> Closed}, 
    "ExampleSubsection" -> {"91" -> Closed}, 
    "ExampleSubsection" -> {"92" -> Closed}, 
    "ExampleSubsection" -> {"93" -> Closed}, 
    "ExampleSubsection" -> {"94" -> Closed}, 
    "ExampleSubsection" -> {"95" -> Closed}, 
    "ExampleSubsection" -> {"96" -> Closed}, 
    "ExampleSubsection" -> {"97" -> Closed}, 
    "ExampleSubsection" -> {"98" -> Closed}, 
    "ExampleSubsection" -> {"99" -> Closed}, 
    "ExampleSubsection" -> {"100" -> Closed}, 
    "ExampleSubsection" -> {"101" -> Closed}, 
    "ExampleSubsection" -> {"102" -> Closed}, 
    "ExampleSubsection" -> {"103" -> Closed}, 
    "ExampleSubsection" -> {"104" -> Closed}, 
    "ExampleSubsection" -> {"105" -> Closed}, 
    "ExampleSubsection" -> {"106" -> Closed}, 
    "ExampleSubsection" -> {"107" -> Closed}, 
    "ExampleSubsection" -> {"108" -> Closed}, 
    "ExampleSubsection" -> {"109" -> Closed}, 
    "ExampleSubsection" -> {"110" -> Closed}, 
    "ExampleSubsection" -> {"111" -> Closed}, 
    "ExampleSubsection" -> {"112" -> Closed}, 
    "ExampleSubsection" -> {"113" -> Closed}, 
    "ExampleSubsection" -> {"114" -> Closed}, 
    "ExampleSubsection" -> {"115" -> Closed}, 
    "ExampleSubsection" -> {"116" -> Closed}, 
    "ExampleSubsection" -> {"117" -> Closed}, 
    "ExampleSubsection" -> {"118" -> Closed}, 
    "ExampleSubsection" -> {"119" -> Closed}, 
    "ExampleSubsection" -> {"120" -> Closed}, 
    "ExampleSubsection" -> {"121" -> Closed}, 
    "ExampleSubsection" -> {"122" -> Closed}, 
    "ExampleSubsection" -> {"123" -> Closed}, 
    "ExampleSubsection" -> {"124" -> Closed}, 
    "ExampleSubsection" -> {"125" -> Closed}, 
    "ExampleSubsection" -> {"126" -> Closed}, 
    "ExampleSubsection" -> {"127" -> Closed}, 
    "ExampleSubsection" -> {"128" -> Closed}, 
    "ExampleSubsection" -> {"129" -> Closed}, 
    "ExampleSubsection" -> {"130" -> Closed}, 
    "ExampleSubsection" -> {"131" -> Closed}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[583, 21, 5124, 127, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"cc13697b-6a9a-4993-9b40-026722d3557a",
 CellID->1],
Cell[5710, 150, 100, 1, 70, "ObjectName", "ExpressionUUID" -> \
"c1909315-5ec1-44c5-9a1b-1d24fd8c8400",
 CellID->2],
Cell[5813, 153, 2028, 51, 70, "Usage", "ExpressionUUID" -> \
"6fcb0242-0b59-4dab-af75-abc23b21b2bc",
 CellID->3],
Cell[CellGroupData[{
Cell[7866, 208, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"1d7b26cd-6c0f-4ac3-86b2-7a777daebeb2",
 CellID->4],
Cell[9392, 246, 758, 23, 70, "Notes", "ExpressionUUID" -> \
"e417721a-56f3-423c-99a2-d1b397299d87",
 CellID->5],
Cell[10153, 271, 9626, 176, 70, "NotesThumbnails", "ExpressionUUID" -> \
"7bf2ef8d-abce-4abd-89ab-b5404c76d390",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[19884, 451, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"1cfd3638-969d-49a3-b218-b59ce5e966d9",
 CellID->7],
Cell[CellGroupData[{
Cell[20001, 456, 1473, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"438ab227-3c01-4823-ab7e-bff7c465e8e5",
 CellID->8],
Cell[CellGroupData[{
Cell[21499, 495, 1465, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"c16850e9-a360-4d9d-a820-14b2a4ccd90a",
 CellID->9],
Cell[22967, 532, 125, 1, 70, "ExampleText", "ExpressionUUID" -> \
"aab16bdd-7e7f-46e7-aa4a-e814757e55db",
 CellID->10],
Cell[23095, 535, 264, 5, 70, "Input", "ExpressionUUID" -> \
"e7220a35-7819-49dc-83d6-80558cd3df7c",
 CellID->11],
Cell[23362, 542, 211337, 3484, 70, "Output", "ExpressionUUID" -> \
"d8da4e77-c23a-49c5-acbe-7f8e48291089",
 CellID->12]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[234836, 4033, 1458, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"22ed9c57-25b6-49cc-864a-1790eb5ca7ef",
 CellID->13],
Cell[236297, 4070, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3a2a69d9-bb2f-4713-88bb-b75b5a67c5a1",
 CellID->14],
Cell[237772, 4107, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"85fd7449-8e06-4330-afe5-3c8a43cc8744",
 CellID->15],
Cell[239249, 4144, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ad2c2908-1cc6-41b9-a115-b153048ffe52",
 CellID->16],
Cell[240723, 4181, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"12756ce8-54fe-41a1-ba3c-3ec29f1fcaed",
 CellID->17],
Cell[242204, 4218, 1464, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"681dfb02-fd46-4d78-a670-15ad51275632",
 CellID->18],
Cell[243671, 4255, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3a410d1d-0811-434a-ad42-45e4405a65af",
 CellID->19],
Cell[245142, 4292, 1469, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"977e5044-c9bf-49f3-9e14-73ae99526b21",
 CellID->20],
Cell[246614, 4329, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"51077973-7bf0-4cef-aa11-8e027fcb3c5f",
 CellID->21],
Cell[248087, 4366, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"f8376e38-933e-4a73-a117-0fe4a3898968",
 CellID->22],
Cell[249561, 4403, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"e22f129f-5a20-459f-bef2-6511c6fd6a7d",
 CellID->23],
Cell[251036, 4440, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"46ea0f3a-2211-4715-ab54-66885cf38421",
 CellID->24],
Cell[252517, 4477, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"2e2bcf35-96b4-4acf-b7ff-ada5e1ab831d",
 CellID->25],
Cell[253991, 4514, 1467, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"b01ecba1-d881-479d-a97e-c01a4fccd005",
 CellID->26],
Cell[255461, 4551, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"036266fc-1b89-44bf-b0db-824ef4e05303",
 CellID->27],
Cell[256935, 4588, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"70831886-2a54-47d7-8a35-103f8e93e9a8",
 CellID->28],
Cell[258408, 4625, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"a1a50a3b-1231-4ec0-a403-76f721c810b5",
 CellID->29],
Cell[259890, 4662, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c09cf575-8b4b-46ba-a759-d8d427243b26",
 CellID->30],
Cell[261371, 4699, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"b2f4d847-5452-40d1-882d-b7b7976eac2f",
 CellID->31],
Cell[262850, 4736, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ecc13a36-697f-46be-9375-5e78b9876e08",
 CellID->32],
Cell[264330, 4773, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"6402389d-f606-4110-9b49-6c504cf2cfc0",
 CellID->33],
Cell[265801, 4810, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d98fcdd2-3fc7-4a75-b498-c9761a054ff2",
 CellID->34],
Cell[267275, 4847, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"cdef980c-e5c7-468e-b768-f38d73a0c064",
 CellID->35],
Cell[268754, 4884, 1467, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"8c57648a-c3c6-42ce-a9be-3a9303ba988d",
 CellID->36],
Cell[270224, 4921, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"022b2954-3c2e-487e-af98-d22fbd7921bd",
 CellID->37],
Cell[271699, 4958, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ff27c3bb-3477-4da9-b032-03758a286016",
 CellID->38],
Cell[273174, 4995, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"f577e792-a6f3-4cd5-8976-384f0e15ebf6",
 CellID->39],
Cell[274649, 5032, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"af9609c9-7a4d-47fd-b00b-e0cc8775d41c",
 CellID->40],
Cell[276129, 5069, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"83f212de-bed0-4ea7-85b2-b198a03bd6e6",
 CellID->41],
Cell[277603, 5106, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"499f23d6-8095-4808-8762-7ce12ef21314",
 CellID->42],
Cell[279082, 5143, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d11eaf66-8b9a-46e3-bd68-20ad628e80ce",
 CellID->43],
Cell[280559, 5180, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"f76c56d0-ae34-4768-a0ce-724a0032bc64",
 CellID->44],
Cell[282036, 5217, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"1d214dc2-d68e-4941-84b5-e4965f5d96ab",
 CellID->45],
Cell[283510, 5254, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"a9c66c6b-2f07-4f5f-9531-7e262d7fff92",
 CellID->46],
Cell[284985, 5291, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"32a11409-516b-44bd-80f6-e8e84e6e4b4a",
 CellID->47],
Cell[286458, 5328, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"2f6afcb4-904d-43ee-a2a3-d460afba32f0",
 CellID->48],
Cell[287937, 5365, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"34e26bce-0ef9-4fb3-a46f-12802b5962fd",
 CellID->49],
Cell[289419, 5402, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"dec87df5-bfd4-4b20-8583-8672c6a48a24",
 CellID->50],
Cell[290897, 5439, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ddebb69f-0f35-463b-b2ff-8c1dcab7f5ab",
 CellID->51],
Cell[292376, 5476, 1483, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d9bebc9a-e4d6-4887-929e-8eeec3d45b21",
 CellID->52],
Cell[293862, 5513, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"eaa0b704-d22f-4468-a8c2-f9a47555b9fd",
 CellID->53],
Cell[295340, 5550, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c4992b90-5736-494c-b9af-a6b81b39962b",
 CellID->54],
Cell[296811, 5587, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"e9b9d5d1-0e8b-4e05-9034-ba2a2dea2921",
 CellID->55],
Cell[298291, 5624, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"eeb46720-12de-4bc3-badd-05fc37d4a96d",
 CellID->56],
Cell[299765, 5661, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"f248cc2b-ef23-40c2-8d00-81e806c6c79c",
 CellID->57],
Cell[301239, 5698, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3083b9fa-ed2c-4014-bc44-ce708abccfda",
 CellID->58],
Cell[302721, 5735, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d30340f4-d712-47cc-892a-57073d3591f8",
 CellID->59],
Cell[304202, 5772, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"25111efe-7d54-41e7-afd6-d62a43488d1f",
 CellID->60],
Cell[305677, 5809, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"91cf7abf-3758-43fe-b8bc-cbcd0aca873d",
 CellID->61],
Cell[307151, 5846, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"90afeac8-5afe-418e-9572-09b64e95436e",
 CellID->62],
Cell[308629, 5883, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"bd9c4001-3cc3-4dac-b835-8a307cf0523b",
 CellID->63],
Cell[310100, 5920, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ec429769-696f-47b7-8b05-e7e27f12fd31",
 CellID->64],
Cell[311575, 5957, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3befb5bc-f069-4389-b383-0be789f5ac59",
 CellID->65],
Cell[313051, 5994, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"2c59fb16-0ef3-44d9-9c8a-06852a1980ae",
 CellID->66],
Cell[314530, 6031, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"445f52a3-2d30-4283-8804-ae4a3862c49c",
 CellID->67],
Cell[316010, 6068, 1467, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"9be154a3-3ce1-4105-8cab-91c866b36788",
 CellID->68],
Cell[317480, 6105, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d22b61d3-8610-4f4f-949b-ff5661c2ab23",
 CellID->69],
Cell[318955, 6142, 1481, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"b333fee8-511f-4e7d-b94c-b02ee4aa8f35",
 CellID->70],
Cell[320439, 6179, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3cb856d2-3e71-411a-896d-c86648606fc8",
 CellID->71],
Cell[321913, 6216, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"60078773-d256-4fc2-927a-0348f00805b3",
 CellID->72],
Cell[323388, 6253, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c6a8ca60-4f6f-4cec-b885-6d032bfbb8b7",
 CellID->73],
Cell[324863, 6290, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"020f7d2f-8d5f-4e23-891d-b92bef59358e",
 CellID->74],
Cell[326337, 6327, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"54504cd8-c350-4e18-8545-c1c7e165f163",
 CellID->75],
Cell[327811, 6364, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"9a33b4b7-4ac9-4761-83f9-d179d157871e",
 CellID->76],
Cell[329286, 6401, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"19a6eb13-fc2d-4d80-92b4-81dde5fbaa41",
 CellID->77],
Cell[330763, 6438, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"0d4efaf3-d0a3-4319-af3c-4c0cf33f7f44",
 CellID->78],
Cell[332240, 6475, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"16e0b685-b18b-47f6-b877-566af4c5b321",
 CellID->79],
Cell[333719, 6512, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"06f181d1-8782-4e22-869d-0fcabeee94c3",
 CellID->80],
Cell[335195, 6549, 1480, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"d6ec8bf5-485c-4dfd-ae3d-c46bf993eeb7",
 CellID->81],
Cell[336678, 6586, 1466, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"bf5c0160-2d73-43d1-82b9-1126ab795af8",
 CellID->82],
Cell[338147, 6623, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"30e8bcee-6026-47f3-a1c3-9bc421310527",
 CellID->83],
Cell[339620, 6660, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"323c4ac0-b510-4e93-a0ac-6c46cb601806",
 CellID->84],
Cell[341094, 6697, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"3534f2f9-7000-43af-842f-4ce15c54867b",
 CellID->85],
Cell[342569, 6734, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"1d738d85-6e5d-4e02-adea-74abe9b54008",
 CellID->86],
Cell[344043, 6771, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"6eb1a596-763e-4f79-9ae4-d3c8eb2b7f70",
 CellID->87],
Cell[345518, 6808, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"4e27ed4f-fb34-4d02-97c7-976802bf5693",
 CellID->88],
Cell[346999, 6845, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"2cbfbd2b-9336-4882-a2b6-2a7494fd29a7",
 CellID->89],
Cell[348473, 6882, 1467, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"f58b4817-77ea-40b5-9c54-e955d73b6a7c",
 CellID->90],
Cell[349943, 6919, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"aac1204a-ccbb-4766-acf7-dd0213bf083b",
 CellID->91],
Cell[351417, 6956, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"02d59e10-f16e-4049-98b7-a008554812bb",
 CellID->92],
Cell[352890, 6993, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"728788de-e2e0-4922-b50a-46692b5c6754",
 CellID->93],
Cell[354372, 7030, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"787fa730-52d1-4ed1-b7f7-5f14e2eaae09",
 CellID->94],
Cell[355853, 7067, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"a3fd281d-5f41-4680-8cb2-5437f177302b",
 CellID->95],
Cell[357332, 7104, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"fb3c38f0-f0b3-4122-9284-9e47ebfef7dd",
 CellID->96],
Cell[358812, 7141, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"957e2329-7e52-49a7-8e04-fe763346a8fe",
 CellID->97],
Cell[360283, 7178, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c7e4e3a3-4daa-43ce-834e-0e42449c7e04",
 CellID->98],
Cell[361757, 7215, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"023cf36b-026d-4de0-ac73-ab0807429ecd",
 CellID->99],
Cell[363236, 7252, 1468, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"22c6ddd0-1584-4b12-89cc-b8deb6699425",
 CellID->100],
Cell[364707, 7289, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"114193dd-1a06-402b-8a25-d9e8c911686f",
 CellID->101],
Cell[366183, 7326, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"afc5ce6a-7f07-4fdd-aafc-effca5f61cdd",
 CellID->102],
Cell[367659, 7363, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"e7131a92-29d1-49ec-bf4b-0afe79c54a51",
 CellID->103],
Cell[369135, 7400, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"07c17f8d-d1f6-444d-985a-1162207607b9",
 CellID->104],
Cell[370616, 7437, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"6a53415f-6aff-4e31-bd9f-559630db4941",
 CellID->105],
Cell[372091, 7474, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"4914d064-b50b-4ae0-893f-1fe2026a7062",
 CellID->106],
Cell[373571, 7511, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"46a2b1ca-5ad5-4ecc-824e-4b68e7f366a7",
 CellID->107],
Cell[375049, 7548, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"e73bd39b-cb92-40b9-b48d-d6a5b0179f08",
 CellID->108],
Cell[376527, 7585, 1472, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"60abb70c-8ef5-45f2-901d-ac54ba1f62b6",
 CellID->109],
Cell[378002, 7622, 1473, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ca03b214-9626-405e-bea7-dc3a5c52e8a0",
 CellID->110],
Cell[379478, 7659, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"4e04e843-fe9d-48c9-a6b0-27667da9db14",
 CellID->111],
Cell[380952, 7696, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"50a9b085-2e4d-4958-89f9-31588be24403",
 CellID->112],
Cell[382434, 7733, 1482, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"5bcd16a5-37dc-4469-a328-80ecde898834",
 CellID->113],
Cell[383919, 7770, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"b2831f86-c51b-44c7-a094-8fda6a012001",
 CellID->114],
Cell[385400, 7807, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"590491bf-1bc1-434f-a494-0a4a16ae5a8e",
 CellID->115],
Cell[386882, 7844, 1486, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"62e92780-fffe-4d75-93d2-c3f67a9a3329",
 CellID->116],
Cell[388371, 7881, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"0c1ca476-aac2-4f39-8663-ee734285a44f",
 CellID->117],
Cell[389852, 7918, 1480, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c2ff802b-79c5-4cc7-b1c4-a0f48feef110",
 CellID->118],
Cell[391335, 7955, 1487, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"94b01ca6-3506-4053-9194-d76b686bf363",
 CellID->119],
Cell[392825, 7992, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"df0d7d01-f17d-4b6f-9aac-dc28490a7ab9",
 CellID->120],
Cell[394299, 8029, 1480, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"08dfc0ee-11f4-4a8e-a7cc-7def4a10580c",
 CellID->121],
Cell[395782, 8066, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"18e0f08c-3f42-4ac7-a342-e61c819af079",
 CellID->122],
Cell[397259, 8103, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"dfdeab4d-dc17-439b-b6d7-e046876dde5c",
 CellID->123],
Cell[398736, 8140, 1482, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"a6acfbc1-523a-4a03-98d9-887afd4f12cd",
 CellID->124],
Cell[400221, 8177, 1481, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"1cfbffff-0924-4b48-bfa1-19bb0833a590",
 CellID->125],
Cell[401705, 8214, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"9518ac4d-6f73-4c39-a395-25791ba1de06",
 CellID->126],
Cell[403183, 8251, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"662e4168-beb6-459c-838e-b0d843329df7",
 CellID->127],
Cell[404660, 8288, 1478, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"ba08c9ca-dab5-4cf4-8031-987949f28673",
 CellID->128],
Cell[406141, 8325, 1471, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"5a5796c4-691c-4a45-9924-cd95b75ba2e2",
 CellID->129],
Cell[407615, 8362, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"113c7c9a-7f31-43f5-9fa7-674e2932b521",
 CellID->130],
Cell[409093, 8399, 1476, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"2d0aa4e0-000a-4ce3-bc2e-b3be4f3ae2b5",
 CellID->131],
Cell[410572, 8436, 1479, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"4fa80ecc-fa63-4710-a03a-ec72aa42143b",
 CellID->132],
Cell[412054, 8473, 1480, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c7eb03b6-1f10-45a9-b7d4-db8b8497b2e3",
 CellID->133],
Cell[413537, 8510, 1470, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"fc958ba0-24d5-425a-be7b-51b9323c2fd5",
 CellID->134],
Cell[415010, 8547, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"40ee41d7-c12b-4bb9-bd61-f964729413a9",
 CellID->135],
Cell[416488, 8584, 1484, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"5454e6eb-c0c8-470c-ab4c-b5a43ef6f95e",
 CellID->136],
Cell[417975, 8621, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"a53e8599-c02f-4a0a-9d35-5f6ff2c0dc05",
 CellID->137],
Cell[419452, 8658, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"c539b841-1b92-4722-af2f-a682d26240dc",
 CellID->138],
Cell[420930, 8695, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"fda03a12-26d2-4870-8de1-86f20d8f4a22",
 CellID->139],
Cell[422408, 8732, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"aa6f4867-ec58-4498-83d5-7a76300f026e",
 CellID->140],
Cell[423885, 8769, 1474, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"74ac036e-8e23-4b57-88e4-b3f0f4de501d",
 CellID->141],
Cell[425362, 8806, 1475, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"4f400528-42f5-4541-a79b-27f7fb2a7e3d",
 CellID->142],
Cell[426840, 8843, 1477, 35, 70, "ExampleSubsection", "ExpressionUUID" -> \
"98c3e483-0775-4f30-841b-87671e6202b5",
 CellID->143]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[428569, 8888, 103, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"d04eaa58-9963-4760-9fbc-484877aaa506",
 CellID->144],
Cell[428675, 8891, 961, 23, 70, "SeeAlso", "ExpressionUUID" -> \
"cbf952df-1555-494d-943a-6476b3019f05",
 CellID->145]
}, Open  ]],
Cell[CellGroupData[{
Cell[429673, 8919, 111, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"33c7ee3f-d534-4349-847e-1e79a25828b7",
 CellID->146],
Cell[429787, 8922, 541, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"d0bcc5eb-5920-4f68-abfe-49cbb94ebed2",
 CellID->147],
Cell[430331, 8936, 579, 14, 70, "MoreAbout", "ExpressionUUID" -> \
"1212f21b-ae53-4028-9b5d-2ceeb0da4dcb",
 CellID->148]
}, Open  ]],
Cell[430925, 8953, 117, 1, 70, "History", "ExpressionUUID" -> \
"bc8795ca-44f3-4b5b-8dfe-9868c852c239",
 CellID->149],
Cell[431045, 8956, 92, 1, 70, "FooterCell", "ExpressionUUID" -> \
"ac4bef25-7f01-44c7-9a19-9844f447f941",
 CellID->150]
}
]
*)

(* End of internal cache information *)
