(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     69961,       1507]
NotebookOptionsPosition[     57945,       1219]
NotebookOutlinePosition[     67059,       1429]
CellTagsIndexPosition[     67016,       1426]
WindowTitle->ChemSpiderInfo
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 19], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 20], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "20462da0-f97e-4c84-b195-06b459f85093"]
         }],ExpressionUUID->"ae701e6a-b690-443a-a2ce-4ef68ec2cad1"],
         StripOnInput->False], {"\<\"$ChemSpider\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/$ChemSpider"], "\<\"\"ChemSpider\"\"\>":>
        Documentation`HelpLookup["paclet:ref/service/ChemSpider"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "c43b0e13-4e78-4fe3-9e2f-3d4ba32b6f89"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "2a55ef02-2e18-4dfa-8a52-70183389fdfa"]
         }],ExpressionUUID->"a12bc1eb-eefd-4066-97ce-d3888eaf641f"],
         StripOnInput->False], {"\<\"Chemistry Data\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemData", 
         EvaluationNotebook[]], "\<\"Chemistry Services\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemServices", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "6d9aed1c-3efe-422b-a4ed-4a502902cff3"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "52d7b9e5-9d58-4041-b3ee-0ca1c6f52b6e"]
         }],ExpressionUUID->"4fbbf109-8292-4411-bfc7-9f2b7edd223e"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "ChemSpiderInfo"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/ChemSpiderInfo"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSpiderInfo"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/ChemSpiderInfo"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "246a323a-6a39-44a3-bb04-f78a3f7fc255"]
    }], "AnchorBar",ExpressionUUID->"9a4a85f3-5932-4092-891d-9a192e7239e9"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"c46a9079-c77e-46a7-8a6f-389b8e01c758"],

Cell["ChemSpiderInfo", "ObjectName",
 CellID->2,ExpressionUUID->"a41acc31-e248-4c3a-8db7-cdbc674d80b0"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{Cell[BoxData[
        TemplateBox[{Cell[
           TextData["ChemSpiderInfo"]],"paclet:ChemTools/ref/ChemSpiderInfo"},
         
         "RefLink",
         BaseStyle->{"InlineFormula"}]],ExpressionUUID->
        "e965a78f-af0e-4082-8b24-22baa156f4df"], "[", 
       StyleBox["id", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
      "0c142f60-79c6-4c52-a134-a87de8fafc2b"],
     "\[LineSeparator]",
     Cell[TextData[{
      "Gets structure for ",
      StyleBox["id", "TI", "TI"]
     }], "InlineFormula",ExpressionUUID->
      "98c84205-e68e-4d46-b875-5bee472c06fc"]
    }],ExpressionUUID->"0dff8467-bcf7-4fe9-937f-eed0a0a5e48f"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"d6d90637-d625-463d-99fc-eaf2c7493bae"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "bcb33622-c106-4681-80e5-cc8ee104275c"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "c0f5e4ac-2b14-4b1c-9256-e92ea91a456e"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"58af44c0-9aeb-4c1f-a98b-c2501cb8cac3"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderInfo"]],"paclet:ChemTools/ref/ChemSpiderInfo"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "59112fae-642c-46d8-bab3-eafb4a4ece5e"],
 " uses the ",
 Cell[BoxData[
  StyleBox["\"\<ExtendedCompoundInformation\>\"", "InlineFormula",
   ShowAutoStyles->True]],ExpressionUUID->
  "bbeeaa32-c708-4816-b38b-d984c4ee15f4"],
 " or ",
 Cell[BoxData[
  StyleBox["\"\<CompoundInformation\>\"", "InlineFormula",
   ShowAutoStyles->True]],ExpressionUUID->
  "30c60174-78b9-4198-bdfa-f10f895d1948"],
 " queries to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpider"]],"paclet:ChemTools/ref/$ChemSpider"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "1524d154-4611-41a9-9b6b-c48fbf2ec432"],
 ", passing ",
 StyleBox["id", "TI"],
 " as the ",
 Cell[BoxData[
  StyleBox["\"\<ID\>\"", "InlineFormula",
   ShowAutoStyles->True]],ExpressionUUID->
  "ebf26d9d-9ccb-41e7-b9e5-f376e230909b"],
 " field"
}], "Notes",
 CellID->5,ExpressionUUID->"497d1e93-3df5-48a0-973e-c358639d43a3"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
BwcHBwcH5/f5P4zDjVw=
           "], "Byte", ColorSpace -> "RGB", ImageSize -> 
           All, Interleaving -> False, Magnification -> Automatic]}}, 
        Spacings -> {0, 0}, Alignment -> {Center, Center}], 
       ImageSize -> {720, 70}, Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6,ExpressionUUID->"84118572-4023-4110-83d5-1e1ed63a267c"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->7,ExpressionUUID->"0c0bfe2f-74a0-4a97-a2a8-ff84ad61eac7"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "889c1f40-80c7-4bbd-be21-4a62c31415c1"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->8,ExpressionUUID->"bcd3bc42-e597-42eb-8b53-321ffe7a099b"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "ef1044e0-cfd5-4415-871d-78de76a338f0"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->9,ExpressionUUID->"c1be1eaf-add3-4ff0-a22c-8e29797b5b35"],

Cell[BoxData[
 RowBox[{"ChemSpiderInfo", "@", 
  RowBox[{"ChemSpiderID", "@", "\"\<water\>\""}]}]], "Input",
 CellChangeTimes->{{3.701146478067381*^9, 3.701146480187914*^9}, {
  3.701146567930003*^9, 3.701146576476871*^9}},
 CellLabel->"In[1]:=",
 CellID->10,ExpressionUUID->"7a7106f9-1e0e-4f9a-bc98-7de5ab7b4285"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 12, "Length" -> 12, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "ALogP", "AverageMass", "CommonName", "CSID", "InChI", "InChIKey", 
            "MF", "MolecularWeight", "MonoisotopicMass", "NominalMass", 
            "SMILES", "XLogP"]], 
          TypeSystem`Atom[String], 12], "Shape" -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[144.], 
            TypeSystem`PackageScope`AtomShape[240.00000000000003`]]], 12, {}],
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[187345094], 
        "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "ALogP", "AverageMass", "CommonName", "CSID", "InChI", "InChIKey", 
            "MF", "MolecularWeight", "MonoisotopicMass", "NominalMass", 
            "SMILES", "XLogP"]], 
          TypeSystem`Atom[String], 12], "HandleQ" -> True, "RowTarget" -> 20, 
        "Data" -> TypeSystem`PackageScope`CacheHandle[187345094]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["CSID", 
                    Style[
                    "CSID", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["CSID"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["CSID"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["937", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["CSID"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["MF", 
                    Style[
                    "MF", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["MF"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["MF"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["H_{2}O", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["MF"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["SMILES", 
                    Style[
                    "SMILES", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["SMILES"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["SMILES"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["O", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["SMILES"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["InChI", 
                    Style[
                    "InChI", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["InChI"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["InChI"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["InChI=1/H2O/h1H2", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["InChI"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["InChIKey", 
                    Style[
                    "InChIKey", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["InChIKey"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["InChIKey"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["XLYOFNOQVPJJNP-UHFFFAOYAF", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["InChIKey"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["AverageMass", 
                    Style[
                    "AverageMass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["AverageMass"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["AverageMass"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["18.0153", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["AverageMass"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["MolecularWeight", 
                    Style[
                    "MolecularWeight", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["MolecularWeight"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["MolecularWeight"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["18.0153", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["MolecularWeight"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["MonoisotopicMass", 
                    Style[
                    "MonoisotopicMass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["MonoisotopicMass"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["MonoisotopicMass"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["18.010565", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["MonoisotopicMass"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["NominalMass", 
                    Style[
                    "NominalMass", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["NominalMass"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["NominalMass"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["18", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["NominalMass"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["ALogP", 
                    Style[
                    "ALogP", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["ALogP"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["ALogP"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["ALogP"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["XLogP", 
                    Style[
                    "XLogP", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["XLogP"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["XLogP"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["0", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["XLogP"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["CommonName", 
                    Style[
                    "CommonName", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][{
                    
                    Key["CommonName"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                   GeneralUtilities`Slice[
                    Key["CommonName"]]], "Mouse"], 
                 ImageSize -> {{144., Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Water", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
                 
                  GeneralUtilities`Slice[
                   Key["CommonName"]]], "Mouse"], 
                ImageSize -> {{240.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 850652729]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[850652729][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {405., {155.3544921875, 160.6455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[1]=",
 CellID->11,ExpressionUUID->"88bae446-bf38-4dac-b68e-83b79d472d62"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->12,ExpressionUUID->"7bb3cb0f-2a00-4be3-91ad-3f8c20e44f62"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpider"]],"paclet:ChemTools/ref/$ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"8d3da016-dad2-47bc-ad3c-9b4c7d11f577"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["\"ChemSpider\""]],"paclet:ref/service/ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"5eda255e-1ded-43b2-9606-250d8d3f31e2"]
}], "SeeAlso",
 CellID->13,ExpressionUUID->"436fdd9e-0c32-41b2-8cc9-3392a46e3a85"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->14,ExpressionUUID->"4e0b73e7-c131-4e03-91bc-57fae7877c8b"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{92., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->15,ExpressionUUID->"6c399ac3-7a79-44ae-a52c-7410fa0b48cc"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{112., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->16,ExpressionUUID->"2e960244-ba08-4a7c-94df-1fcb634f0d82"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->17,ExpressionUUID->"1335019c-854e-476a-be51-c084808bc289"],

Cell[" ", "FooterCell",
 CellID->18,ExpressionUUID->"53656643-509c-426f-b227-40118cb4f609"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"ChemSpiderInfo",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 53, 8.026109}", "history" -> {"11.1", "", ""},
     "context" -> "ChemTools`", 
    "keywords" -> {"chemspiderinfo", "chem", "spider", "info"}, 
    "specialkeywords" -> Automatic, "tutorialcollectionlinks" -> {}, "index" -> 
    True, "label" -> "ChemTools", "language" -> "ChemTools", "paclet" -> 
    "Mathematica", "status" -> "None", "summary" -> 
    "Gets structure info for a given ID", "synonyms" -> {}, "tabletags" -> {},
     "title" -> "ChemSpiderInfo", "titlemodifier" -> "ChemSpiderInfo", 
    "windowtitle" -> "ChemSpiderInfo", "type" -> "Symbol", "uri" -> 
    "ChemTools/ref/ChemSpiderInfo"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 5088, 126, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"c46a9079-c77e-46a7-8a6f-389b8e01c758",
 CellID->1],
Cell[5677, 149, 103, 1, 70, "ObjectName", "ExpressionUUID" -> \
"a41acc31-e248-4c3a-8db7-cdbc674d80b0",
 CellID->2],
Cell[5783, 152, 801, 20, 70, "Usage", "ExpressionUUID" -> \
"d6d90637-d625-463d-99fc-eaf2c7493bae",
 CellID->3],
Cell[CellGroupData[{
Cell[6609, 176, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"58af44c0-9aeb-4c1f-a98b-c2501cb8cac3",
 CellID->4],
Cell[8135, 214, 1096, 33, 70, "Notes", "ExpressionUUID" -> \
"497d1e93-3df5-48a0-973e-c358639d43a3",
 CellID->5],
Cell[9234, 249, 14889, 262, 70, "NotesThumbnails", "ExpressionUUID" -> \
"84118572-4023-4110-83d5-1e1ed63a267c",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->6]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[24228, 515, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"0c0bfe2f-74a0-4a97-a2a8-ff84ad61eac7",
 CellID->7],
Cell[CellGroupData[{
Cell[24345, 520, 1473, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"bcd3bc42-e597-42eb-8b53-321ffe7a099b",
 CellID->8],
Cell[CellGroupData[{
Cell[25843, 559, 1465, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"c1be1eaf-add3-4ff0-a22c-8e29797b5b35",
 CellID->9],
Cell[27311, 596, 314, 6, 70, "Input", "ExpressionUUID" -> \
"7a7106f9-1e0e-4f9a-bc98-7de5ab7b4285",
 CellID->10],
Cell[27628, 604, 27571, 537, 70, "Output", "ExpressionUUID" -> \
"88bae446-bf38-4dac-b68e-83b79d472d62",
 CellID->11]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[55451, 1151, 102, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"7bb3cb0f-2a00-4be3-91ad-3f8c20e44f62",
 CellID->12],
Cell[55556, 1154, 936, 22, 70, "SeeAlso", "ExpressionUUID" -> \
"436fdd9e-0c32-41b2-8cc9-3392a46e3a85",
 CellID->13]
}, Open  ]],
Cell[CellGroupData[{
Cell[56529, 1181, 110, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"4e0b73e7-c131-4e03-91bc-57fae7877c8b",
 CellID->14],
Cell[56642, 1184, 527, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"6c399ac3-7a79-44ae-a52c-7410fa0b48cc",
 CellID->15],
Cell[57172, 1198, 544, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"2e960244-ba08-4a7c-94df-1fcb634f0d82",
 CellID->16]
}, Open  ]],
Cell[57731, 1213, 116, 1, 70, "History", "ExpressionUUID" -> \
"1335019c-854e-476a-be51-c084808bc289",
 CellID->17],
Cell[57850, 1216, 91, 1, 70, "FooterCell", "ExpressionUUID" -> \
"53656643-509c-426f-b227-40118cb4f609",
 CellID->18]
}
]
*)

(* End of internal cache information *)
