(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     48818,       1089]
NotebookOptionsPosition[     36454,        792]
NotebookOutlinePosition[     45580,       1002]
CellTagsIndexPosition[     45537,        999]
WindowTitle->$ChemSpiderToken
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       DynamicBox[If[$VersionNumber < 11.1, 
         Cell[
         "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
          CellID -> 22], 
         ItemBox[
          Cell[
           BoxData[
            RowBox[{
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False], 
              Cell[
              "CHEMTOOLS SYMBOL", "PacletNameCell", TextAlignment -> Center, 
               CellID -> 23], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {8, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[8], Selectable -> False]}]]], Background -> 
          Hue[0.38, 0.64, 0.6], ItemSize -> Full]],
        ImageSizeCache->{132., {5., 13.}},
        UpdateInterval->Infinity], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "4e5f093e-21af-4ed4-a36e-e6222d749ff9"]
         }],ExpressionUUID->"09184264-8d8d-4a81-b28f-49ef84c50d1e"],
         StripOnInput->False], {"\<\"ChemSpiderImport\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSpiderImport"], "\<\"ChemSpiderRequest\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSpiderRequest"], "\<\"ChemSpiderParse\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/ChemSpiderParse"], "\<\"$ChemSpider\"\>":>
        Documentation`HelpLookup[
        "paclet:ChemTools/ref/$ChemSpider"], "\<\"\"ChemSpider\"\"\>":>
        Documentation`HelpLookup["paclet:ref/service/ChemSpider"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "5f4cca58-ccaa-43c8-b775-4afa17c16fab"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "7bdd31ad-0e28-4cba-b1cc-7f00b919b179"]
         }],ExpressionUUID->"f3e88c39-8160-4ba8-847a-fdfdf1f500d6"],
         StripOnInput->False], {"\<\"Chemistry Data\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemData", 
         EvaluationNotebook[]], "\<\"Chemistry Services\"\>":>
        Documentation`HelpLookup["paclet:ChemTools/guide/ChemServices", 
         EvaluationNotebook[]]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "496f797d-7bd5-49ce-88ce-52b02f92be23"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "ad1f2ded-c9b4-48ec-afe4-53ca72324c68"]
         }],ExpressionUUID->"654c0222-a2ba-40b1-80aa-71fb8aa4248c"],
         StripOnInput->False], {
        RowBox[{
         RowBox[{"ChemTools", "/", "ref"}], "/", "$ChemSpiderToken"}]:>None, 
        RowBox[{"Copy", " ", "Documentation", " ", "Center", " ", "URI"}]:>
        CopyToClipboard["ChemTools/ref/$ChemSpiderToken"], Delimiter, 
        RowBox[{"Copy", " ", "web", " ", "URL"}]:>CopyToClipboard[
         Hyperlink[
         "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/%24ChemSpiderToken"]], 
        RowBox[{"Go", " ", "to", " ", "URL"}]:>SystemOpen[
        "https://www.wolframcloud.com/objects/b3m2a1.paclets/reference/\
ChemTools/ref/%24ChemSpiderToken"]},
        Appearance->None,
        BaseStyle->"AnchorBarActionMenu",
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "422326f4-1ccf-4368-bbed-b7f47390c1f9"]
    }], "AnchorBar",ExpressionUUID->"35579618-ae19-478c-aa5a-4aaa52977a37"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"d858357f-e4b7-4c65-aaa0-718d050c1619"],

Cell["$ChemSpiderToken", "ObjectName",
 CellID->2,ExpressionUUID->"643689fb-fda8-4687-8dc5-fe4b84840854"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[Cell[BoxData[
       TemplateBox[{Cell[
          TextData["$ChemSpiderToken"]],
         "paclet:ChemTools/ref/$ChemSpiderToken"},
        "RefLink",
        BaseStyle->{"InlineFormula"}]],ExpressionUUID->
       "df6a77a8-7f3f-4fe9-a04f-4ac9be5473f3"]], "InlineFormula",
      ExpressionUUID->"eab79d9b-2405-4490-a2f7-5f2d69b3c239"],
     "\[LineSeparator]",
     Cell[BoxData[
      RowBox[{
      "Token", " ", "for", " ", "manual", " ", "API", " ", "connection"}]], 
      "", "InlineFormula",ExpressionUUID->
      "ce6bdaba-8b31-4bfc-aeea-578d18c9a2fc"]
    }],ExpressionUUID->"678fc032-1e7c-4634-b536-19092f378772"]}
  }]], "Usage",
 CellID->3,ExpressionUUID->"59a95067-6cc3-4d17-bd69-e2187994d80e"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
           Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "NotesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {6., 15.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "f4a11e39-5633-4082-a1c1-35a223026a88"],
 Cell["Details", "NotesFrameText",ExpressionUUID->
  "a7abfe45-15ab-4a34-bb95-3a0c1cd3d633"]
}], "NotesSection",
 WholeCellGroupOpener->True,
 CellID->4,ExpressionUUID->"90a66827-33c0-4ebc-8405-b4aaaafb8a90"],

Cell[TextData[{
 "Assigning to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpiderToken"]],"paclet:ChemTools/ref/$ChemSpiderToken"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "43a4e81c-874b-4669-b001-e3d33027251c"],
 " will cache the key permanently (this is not done in a secured manner)"
}], "Notes",
 CellID->5,ExpressionUUID->"834816e6-4f21-467b-bdef-3a0c49895dcb"],

Cell[TextData[{
 "Clearing ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpiderToken"]],"paclet:ChemTools/ref/$ChemSpiderToken"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "50e25639-6abd-45bc-be37-91ae007dc29c"],
 " will delete the cache"
}], "Notes",
 CellID->6,ExpressionUUID->"88afae21-1a01-49af-a672-f120d97c4fd2"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpiderToken"]],"paclet:ChemTools/ref/$ChemSpiderToken"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]],ExpressionUUID->
  "cbdaffbd-2dac-4852-a308-335fc05aab07"],
 " will reload from the permanent cache if possible"
}], "Notes",
 CellID->7,ExpressionUUID->"370e270e-a5d5-41ad-9d4e-b1ac91a84ff9"],

Cell[BoxData[
 ButtonBox[
  DynamicBox[ToBoxes[
    Overlay[{
      Graphics[{}, Background -> If[
         CurrentValue["MouseOver"], 
         RGBColor[0.942, 0.978, 0.992], None], ImageSize -> {720, 70}, 
       AspectRatio -> Full], 
      Pane[
       Grid[{{"", 
          Spacer[10], 
          Image[CompressedData["
1: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
pYAdB59wl6iT+4VAY44MHbHoq5ma78zU+jMgA3tptYu617nsrh3h6Sq7Iaut
D+Q+LX1wWGefHLdx7zWcrEr5J6rHTCSAmIaCtOPv5yUs+MTNrh7EyRoC+ffo
JzqmfYJq1fwRhEyCn9pym3NQYjRQ4esdFotxMeoRCNMWjoyYkw5MuekKfOLD
Iwj8jj45bgHJETb2Sdn3ld7r1X8HNDb8P+Oe06nNG7jn8Ou456+5gf978V/D
PaesSqlM7jk9xv1T7vk6/vlfzT1nevuvuOc0kvkq95xK557DDK45/Cr3HF7P
PUd2lL+Aex7uGMR8nBE/Sd+nWS6lBMXWM3UG8O3IGuwLJmnMwgEP73EAwtYx
yUMDktyXwKg9AI/Rhytp3POhZ4SutTpOo2/vJQD9MyDnTK5mkJ9qk2IBQdGy
RNqiWt54kSO0QrzM6WJMs3oNXl8v3fhml7t2fWC1kGGpdoNJlJb5sFq6tVVJ
ksltY8sFSmBEZKiXjo0QpeyyaI5MjEKVZNKXiUYWsLiA9omkHMkBippPkXSH
kYc4R0Gc1MjbrhaBD4GnOrDT+57H6YgMT4KCqYQU7rcgap62gzvwsNAV4HNS
MTFQ71I21LFWNcF5mvNLOArOB1WkmGgrfF5zQ8HZXK4L4PZ9rqas5CgGeHXl
fr+sp891yk7U6ytBqrG3tRr/b2eL63975niAi/OZlM7NXy6WvQP3fOySpLWJ
kpH3b84mD229CW5q5zyWLQVuq+g5pPuF4Up90hK8Y2S8xCTzPKIEvYM0il1A
SNGAiI+Pjb+jdWmCTy+IFOaLd3E0lByPvGTiKl4l58Lbi7PhdwSZopax1naC
j8evuWqeChaxt4y1NZF68Y7c82WUe47yb6mLFF9BZTB4F1DnkNsfkJapSBCg
EMkWRGThRbnnZAqTe74EiJS13HMy+iDkJJKeEsnUJSrKPV9C8pwpMqCQ0Fx1
BqU1T74j93w9/m3u+Wssra3467nn8Kucd3g1qL8F9/yNLv4F3PPVq7LCPafH
SArtSZ51+ithcQ33nPIu3HMqeb35f8E9R6YfyhOnpfgM7jmVxn1HN3+We06m
c8/RNmSUe06lc8/JTO45SkpH7a7lnqP1K9xzysaThWGfRjilIXVF0JGOpP2t
RaCF9ruJ+rQyJOjHrW3RkJCT3kE7ym6hS57EgiLvVYWnxKh/Np4onq+MYB2N
u74ccs9yzQPz2UkloKxsY6sFUHW0zkchS1j3YV54Hz7Q+84Zhx6npMqUQo6c
xOQOl7Az6Xdsb+NyukJKWqwqQXVRTrWXu6pCxqxFLiFOL8TPZ9Ixr4NbChxS
xSeHOd2zdDIbmP4fv6PGo74hoNq4oMeqyzsg0Mo2t8b8kbfpmHtyrUHWNX1Q
atBrV1lv4nY04pFFG8VF4chyrGFvpsmIbYFvQozDD6E2rkXWc+snte8QeG4R
qvAMKBlpcCsZK6vIhCWr2+ppWBrouhpd0VU3ApqLmnaaV4Tzj5uaqamBtB8P
cWupW2nVdB5P/FJUW1JeIJDrd34dTXDT/0zMJdwVkUtXnZdPlQmJ8x/ioBgq
XT9xSv9E3gWemyKe/7DiE+Y/ICUhKimQAH6qbj5x4Wx9hKAQ18/msKiWBeDS
PXlDRvO0HYe+kZa6hIDj7yfrX+GeL4I+UZMkXjfTZHsVh6DgUALeQ8ha2DDY
0UQ4VDzApRjIT+HFvdV0QgXi/FMtwYvDwnyRBgoyoZ36L39wcREQEvT/TkiP
QwuoxhjMXOI3crdxcwK85qb+updMgd1ZXQPOZI1JVTcvTYHv7W299c56m4Wa
mqsCCV2fAzIqOg7epvrnisjyjj6A76K94rkYIQH1qwbmHOI2CiKSExu55zkv
wdjLWdLSwpP52VnSwuhEocHs4gJpBMyMz82DaUAZBQsLs1MT87MkAIhzpPm5
SeIUZRJMPlmceTEBxqaWH5EAcR4RPIOJMzOzYHqERKRMDQET/DIYmp1Gueek
mbG5GSLl5bNZ0szSMCAPLjyZptyfJhHB4xlAJM0AvgowOwqGFkdnZ+dGJsHL
xaH/I0/dYsCAAQMGDBgwYMCAAQMGDBgwYMCAAQMGDBgwYPj/BTCIo/0p94kr
rTiMp4vnaO89n8mZmW5+sPIGSfLde8i25ynopL3Quaf1MQDj6/g7Bf5hfq3M
gu0Mup16XJBGa2y1BN6Iu33oayupHm1jCYXApw+A6VXu+eDM3Tkw+YVllnKm
TK5nvLiDtngl3o8/11+wKeeLBkkHuC51Mq/nUXzxeGV7f35p9UBw72DO3bv3
qxOGS3rvVHQnv2yq6M3vfJx/vz1rBGSH+ifYOanJF5PEwlJFOuQDrl4p8ZUk
RRxxPGTZKJFHvWxTbmjtUxQA9EVrHPSzpJwkFSV6Ta1uCTk0iGVZCkXsc78Z
lJHzUt/ylOVhP0KMVMu8na/qfIeobotg1Fn94DGQdPAK/nfvo7ZySmdDBBR1
5UQ15Pg5Jm9JOylcHJ4uacwGL4qasuNrCm9VFN5vyy9pKKoqudWcl1CfMUyu
XMxvKApobI1tqSmtBUV/28+tJ2Ug15p2ZcL426uiEwIWnIev3ytWjFKSP/GH
Hfjmy6TPlby+DQDXbY59KyNg4ywsJmYn/qOBnPSZU+Z8KqoSOTiHb7qHvGIM
fZSkRfA/xc1esfvpeYyoygljAc4yMhlYpJsacLnetHIV47FzDMfb2SbYXBGq
G78aw6WxdD92sCuzqb2/q7CnbbCn/W5ZdVVC552e0sL72YMNc/O15OqSntrG
7tzh7u4OQOQ00klxMdKOen45UI0jjt/DKstDR2l5iN8i3sePsxpWM/IVsyfu
HYaPXsmWtfEvTsN7EZyuy/mEegTwFdlFRCm5amceBqOqt/mtol2Nw3hCKarh
f4wVBQYGXfML0AJ07jlK1qGYCKDvvYap1El5ngKwiFZQH9PqYZQijrL0FkHn
Q7REe5PgKrWbQlnlp6BKlAVAezM6hcY9J6Pc83l0klKppDhzsKj1An1zOYN7
TqNyILXI4QLVIA0GweNLi0hXZPSN5otUGvd8cQ33HKzjni8v0pkvrxIN4Vc5
Pq/Hm7jnDC7H+gb/mnvOMIIOEZ17vkha4Z7DDO45o7jy3nN4hXu+/CZ3/yLu
+dpDGMzLLC0zKOW1IbT3nqNPFKAuLy8x9YosN3LPU6PeM/e85cofKZxB1hxJ
9hwvalx1z5UAF46Z1su3tMXyhb38ggNuEMT1A05qAOMrN2S6hTwcL0Roc2Sp
KYZy5hu9V/YxGZgo4i6YXuW25vnxxlCagLyxNSy5p7Xrf3S/UL5k38ItL6qT
/ZnyLybKgFdPRtrn2FUxMyEJh4vfqAk6AdX36CeNzy+gXsYb75cW4akN33IL
zk6B5YWH+kVTrCy6BKLVRIOjScJRcTcJwD05OCSC3807Cx+QG2PsEVPerfd/
hXte1/beued0SjlKgWNyz8EG7jmMcc//DMgbueeAxhxfPaauLEG00tr3Bq+o
M7jnK/xz8Or75t/txJitaRRzyqvcc5gBhuPwKvOdKYPXMspXuOfwf4Z7Dvvj
/csZBbc5uqyzhtp9p3PllbQvmsaRoW8F87SkdaKhGVkA2qbXWgkKiEUS23tI
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
MGDAQMf/AlxPKjw=
           "], "Byte", ColorSpace -> "RGB", ImageSize -> All,
            Interleaving -> False, Magnification -> Automatic]}}, 
        Spacings -> {0, 0}, Alignment -> {Center, Center}], 
       ImageSize -> {720, 70}, Alignment -> {Left, Center}], 
      If[
       CurrentValue["MouseOver"], 
       Image[CompressedData["
1:eJzdmc9vE0cUxyNAosfeckGIXnujJy6tVKk9VOLStFVz4AIlRD00VQMSouXQ
/hEIIfXAta0qFTggkBqpCA40CSUJtKX8ik1i4ti7XjuJfyQkw/uud52345nx
7I+A1cM3tuPdnfeZN+/HjN869vXQiV0DAwMn36A/Q0dPvz8+fvTMJ2/Sh8/G
Tn45OjZy/KOxUyOjI+OHju2mf74TaA9JCPG/kdfaTKr9pCOkC6TbpBJJBNoi
FUk3SedIw6TBFGMplZJjnPQ7szmOrpNGXzPHWdLdhPbLukUae8UcB1PMfy9d
JR14BRznTXaU1tbFvLMq/lmqirsLrpjMlcWf8yVf0/R+ZtEV/xZrIl+pC6ex
oXtOjfQp3TMQV5YcP+rsX/AaYrZQ6dhsoykSeIsrLR3P+R3gUDIsrbbE7GI8
+1X6u1gV5brSP7FYenAo19ITdy21/Vx38mWxWG2oWIYy4DioYniwXMuUgStH
8yON55L2peToyks7yRAKeUAa90oKjrNJ1hLi9z7FL+a1QDFcWtsQy6vrtGaa
4rFbt84HhVpTZjmekCNS4xDTvcZ+sLxC8fpCVFpbEXmBws9LxHXvuWd81vQz
R7iNF5zjRgKOb2RfmPLSFMVoe/7IzuZmx94Zdg/e+98F3+Pap7R+TCz/lVZk
nwzH5IjEBeqDiQHz68nzTvZ2cYScgXBt3sAymSvJ+fhyDI79Xb4wrOlCrRXM
72Ysf4QceP/Y0cfdw/Kq7JO9lhxH+H3oNcx+34qul/VtFq0/ePz4n6O+47qT
d2SODy05LvD70C/p8pIf02y9VyQmFUd43fZr+/oFyme6+ZJ6lx8sOW5zDvRA
qmcjt8p283Wvio9O/ATXyPGEuVeNNe9E6sklSw6+j/P7VtWzc24jErN8vXuG
+JBjiAu9sGos1F5m0z1Ljsh65L13JL59X7dt1YnfO+n37fpr/Xh31bkLtYbZ
VEjCoVuzqNMYW/d9XMFHuhyMfMlsqlpybNlwFNc2fH9kxmGoJXOFiD+eWXIU
Oce0Zl2hXwpjOYt15RnqCHIKs+kvS46bnAN7UdWzsZbDnNlV23R5l8W3Jwnf
3dfkRqk/+dWS4xzn0OWQuQKrB5J94asq77ZZN4UncZeb+pySr0T2JN9Zcgxz
DlP/E/ZVPOdymfqrSB9AelrR93DoKZhN71lyDHIOnGtMaZ6PfMgZqlIdUXJI
9Q+vTkNfA2eofkk5dI8lB3TNpqZDTyhOIvWczbOuT5TXFM4ZdM+XavnPOgYN
xyjnQH+jG6e9frdZtmPX3LeH/nhYUvdvEPYEbjOylzockwO6xVlMc+bnL8qZ
jrTvU3GEa8/1/WDe60u+mDAxGDi+4hzYz+BsxjQubM1jPyL1XTyvlf2Yrmvj
gQt1nO1tq6S3E3BAVzkLzpd6jQ3BRuRr+AhrDj3lI9oPoT7ocmsWLAaOA8G9
LA9ne/6WJUuP88QhuXc01ZTXyWJxvtt1Nvp8pemfzfQTi+V5excLnoneB+ca
SW1D7kDc257PmVhi/P7xMcmReZDLcK4Rxz/oP2F/WB9gW1qWmL9H7SNdkVl4
zUTex14UfQv6SewfkKvgO8TWcn1deW9aloS/D35B+kPHE1MTYV7MiiUGR6jP
SZcT2v+TF/QasCFLlgQcofaSPiB9T/qNNEtaJHmkHGmK9AvpW9K7pN1y3syK
JSWHsfexVVKWOXYW0Q8cSViQ9/lvcv3CEYdFZug3DhsWFUM/cphYdAz9yqFi
QUzrGEgX03LssDosBl1MUQf7haXD8BJ6c/TW
        "], "Byte", ColorSpace -> "RGB", 
        Interleaving -> True, Magnification -> 0.5], 
       Image[CompressedData["
1:eJztmctL1FEUx4cUbNnOjYht29mqTUFQi6BNU5ELN5omLZpIg6hc1B8hIrRo
WxGULqQgoZzxAer4yPcDZJzxnY6Kb+Z2vsPMdOd67/3d30NnFh34huXv3ns+
93HOubeL1U/9j875fL6G8/SHv+rF9fr6qpd3L9Bf7gcaHtcFamtuBZ7X1tXW
X6kuoH+8nFIhiTH2X4yVkipJLaRe0ir7ZwnSMilIaiJVkIrzwGde9aQfzJl9
J9Xl2P9G0qBD/0ULkQJn7H85cz7/VtZOKjsDhmadE7u7u2xhYYGNjY2xvr4+
FgqFWGdnZ1JdXV1sYGCATU5OsqWlJXZ4eKjqZot0j9r47MqQ4Z1q4NXVVTY4
OJjx2UTBYDDJu7W1peq2+RQ4pAzb29ssHA7b8l+m8fFxdnBw4JrFgkG6lyKR
SHJO3TKk1d3dzdbX12VD+T3gKBc7TSQSbGpqyjP/RS0uLopD/iGVuOQ4EZdO
k0HD0uaCo1G2l6x8wF4bHR1N+hKPx9ne3l4yjm1sbCTbm8aDzc1NcfgahxxZ
OQ5n2uo8TE9Pq84rE/saGRnR9tXb28uOjo74Zr8ccDwTx9bFJZxRzLdoyBfp
b/CzaNFoVMsyMzMjNqmwyZF1LpAfdAw7OzvSebfigK2srGj36P7+Pv95qw2O
UnEs3Z6WrYMdDtj8/Lyy/7m5OfHzIkOOSr4RzqjuPOjMlAOxnP9WPCeC3TTk
aOEboV5SrbnVmTblgK2trSnnS6hd3hpyZE0AaiBZ34itVmaHA2vS09MjHQtz
ydlXQw7+HpesW2V9S3KVKw7YxMSEdCzkXs5+G3JkGV9780KOS/uqEt8WP+u+
hanyLHINZzEnHKo9izyt+71dwXAvkf0O8ZKzuCFHwoQDceysOIaHh3mXIoYc
y3wj3ONkfafzhpf7SpVHhJgSNuQI8o1UcR172crsnnP4KxtLqE8+G3I08Y1w
nzbYs645jo+PlTFFiI2vDTkq+EaqPQuhbvWKIxaLWcaUlF0z5CjmG+FdQ1Wv
C/HQMQfqc1UO7O/vFz8vNOSAvvENVTkdEnKtIw68Mxj2/1HFoOCo4xujvlGN
A6H2dsoxOzur7Bd3Apwbzm7b5IBCpnMGIWaiRjLlwF6y6lNYiw4dg4bjCd8J
alvMj25c+Iq6VeThDfOLe6DqPPBCTOTutiiELjnggNp5H/C+ZDU2BB9R8yHH
IN4hbmK9kB9UsdULFg1HWaptxuCTHT+8kCmLhgPyi3sDc+zlW6JXLBYc0Im3
Ubwv4c6ZTywGHFIW9Inax83aIHbg3Ju+z+lYDDmgO6QTj8l4m8G7hp31QWyD
/+n8AN/cstjggEpIbSJL2pAzEfdxF0XdMjQ0lLw/IFZh7XC2hHopa33dsNjk
SOsh6aeKx6Z1pHzJFQv0gNTq0P8PLFVrpHzINQtURLpBekP6QsJlNErCw/k8
qY/0ifSKdJVUIImbXrG44dDWPqZyyoJzyFnOOZywIO4L/yeXFxx2WCQMecVh
wqJgyDsOHYuGIS85ZCw40xqG9245TlkZFo3lO4MJS4bhL7E9ExQ=
        "], "Byte", 
        ColorSpace -> "RGB", Interleaving -> True, Magnification -> 0.5]]}, 
     Alignment -> {-0.85, Center}], StandardForm],
   ImageSizeCache->{720., {32., 38.}}],
  Appearance->None,
  ButtonFunction:>(CurrentValue[
     EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}] = Open),
  
  Evaluator->Automatic,
  Method->"Preemptive"]], "NotesThumbnails",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->8,ExpressionUUID->"42cdd2cf-434c-44e5-a57f-d30b2ad78491"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell["", "PageDelimiter",
 CellID->9,ExpressionUUID->"4a90fe16-464f-44dd-9b1e-17ae5b4b0870"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "PrimaryExamplesSection"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "aee453bf-994d-44e9-91e0-f64f0cd41283"],
 "Examples"
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellID->10,ExpressionUUID->"e8941fc9-bd11-43b8-8686-6e17fac6427f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[If[$VersionNumber < 11.1, "", 
    Cell[
     BoxData[
      ToBoxes[
       Toggler[
        Dynamic[
         MatchQ[
          CurrentValue[
           EvaluationNotebook[], {
           TaggingRules, "Openers", "ExampleSection", "0"}, Closed], 
          Alternatives[Open, True]], (CurrentValue[
            EvaluationNotebook[], {
            TaggingRules, "Openers", "ExampleSection", "0"}] = #; Null)& , 
         ImageSizeCache -> {14., {5., 9.}}], {True -> Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], False -> Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]}]]]]],
   ImageSizeCache->{14., {12., 13.}},
   UpdateInterval->Infinity]],ExpressionUUID->
  "0d5556d4-4d07-4bff-b854-86e1e92938a0"],
 "Basic Examples"
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->11,ExpressionUUID->"8afbdd60-1936-43ab-9c49-8f53f822ca1f"],

Cell["Get the token value", "ExampleText",
 CellID->12,ExpressionUUID->"8c9e25e3-0da4-47ac-acea-06a92d231bb5"],

Cell[BoxData["$ChemSpiderToken"], "Input",
 CellLabel->"In[1]:=",
 CellID->13,ExpressionUUID->"699fcf8d-1aa5-46f0-81b7-34c4980e131a"],

Cell[BoxData["\<\"b2096a88-44ad-4f1f-880c-dc5a9b58f41c\"\>"], "Output",
 CellLabel->"Out[1]=",
 CellID->14,ExpressionUUID->"41e012ce-1205-467b-bbf2-fb5838c791ce"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 CellID->15,ExpressionUUID->"1eeb8cd9-9d5d-42a0-a97d-697678cdc23e"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderImport"]],"paclet:ChemTools/ref/ChemSpiderImport"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"49700393-2f24-4966-ac45-02544a525cfd"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderRequest"]],"paclet:ChemTools/ref/ChemSpiderRequest"},
   
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"b2b26c66-a104-4e6b-b0cd-981d6954d3fe"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ChemSpiderParse"]],"paclet:ChemTools/ref/ChemSpiderParse"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"3dcb8953-899a-451b-845b-efdf81ae0d6c"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$ChemSpider"]],"paclet:ChemTools/ref/$ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"163c5de8-ef71-43fa-a1b4-3f01cf4c789f"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["\"ChemSpider\""]],"paclet:ref/service/ChemSpider"},
   "RefLink",
   BaseStyle->Dynamic[
     If[$VersionNumber < 11.1, {"InlineFormula", FontFamily -> "Verdana"}, {
      "InlineFormula"}], UpdateInterval -> DirectedInfinity[1]]]], 
  "InlineFormula",ExpressionUUID->"1e9be6f5-e5e4-42f3-8cde-72da74ede027"]
}], "SeeAlso",
 CellID->16,ExpressionUUID->"7b65cf38-eb43-4781-82e4-1c0778b13477"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->17,ExpressionUUID->"d4e24142-156f-4442-90ad-ba1d00f4ae9d"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Data"]], "paclet:ChemTools/guide/ChemData"}, 
    "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{92., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->18,ExpressionUUID->"590a9597-4913-4346-941d-08b08f192443"],

Cell[BoxData[
 DynamicBox[If[$VersionNumber < 11.1, 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLink", BaseStyle -> {"InlineFormula", FontFamily -> "Verdana"}], 
   TemplateBox[{
     Cell[
      TextData["Chemistry Services"]], "paclet:ChemTools/guide/ChemServices"},
     "RefLinkPlain", BaseStyle -> {"InlineFormula"}]],
  ImageSizeCache->{112., {4., 14.}},
  UpdateInterval->Infinity]], "MoreAbout",
 CellID->19,ExpressionUUID->"4766bce7-7460-4d0c-b015-42de52a45a3f"]
}, Open  ]],

Cell["ChemTools Package Version 1.1", "History",
 CellID->20,ExpressionUUID->"2277c456-650b-47c2-b399-d3580c6823bc"],

Cell[" ", "FooterCell",
 CellID->21,ExpressionUUID->"0ad039fd-df85-4d2f-9313-63cc5be3d72c"]
},
ClosingSaveDialog->False,
Saveable->False,
WindowSize->{808, 755},
WindowMargins->{{314, Automatic}, {Automatic, 50}},
WindowTitle->"$ChemSpiderToken",
TaggingRules->{
 "ColorType" -> "SymbolColor", "ModificationHighlight" -> False, "LinkTrails" -> 
  "", "HasOptions" -> False, "SearchTextTranslated" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 7, 20, 2, 53, 27.499556}", 
    "history" -> {"11.1", "", ""}, "context" -> "ChemTools`", 
    "keywords" -> {"$chemspidertoken", "$chem", "spider", "token"}, 
    "specialkeywords" -> Automatic, "tutorialcollectionlinks" -> {}, "index" -> 
    True, "label" -> "ChemTools", "language" -> "ChemTools", "paclet" -> 
    "Mathematica", "status" -> "None", "summary" -> 
    "Token for manual API connection", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "$ChemSpiderToken", "titlemodifier" -> "$ChemSpiderToken", 
    "windowtitle" -> "$ChemSpiderToken", "type" -> "Symbol", "uri" -> 
    "ChemTools/ref/$ChemSpiderToken"}, 
  "Openers" -> {
   "NotesSection" -> Closed, "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open}}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, \
2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Wolfram"}, "Reference.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], DockedCells -> {
      Cell[
       BoxData[
        PanelBox[
         StyleBox[
          TemplateBox[{
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {9, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TemplateBox[{
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Back"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledBackIcon.png"]]], Enabled -> False, Appearance -> 
                   None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "BackIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoBack"], Evaluator -> 
                   None, Appearance -> None, FrameMargins -> 0]]], 
                DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipBack"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {2, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               DynamicModuleBox[{$CellContext`destination$$ = 0}, 
                DynamicBox[
                 FEPrivate`If[FEPrivate`HistoryList["Forward"] === {}, 
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "DisabledForwardIcon.png"]]], Enabled -> False, 
                   Appearance -> None, FrameMargins -> 0], 
                  ButtonBox[
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "ForwardIcon.png"]]]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]]], ButtonFunction :> 
                   FrontEndToken[
                    FrontEnd`ButtonNotebook[], "HyperlinkGoForward"], 
                   Evaluator -> None, Appearance -> None, FrameMargins -> 
                   0]]], DynamicModuleValues :> {}], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipForward"]]], 
              TooltipBox[
               DynamicBox[
                ToBoxes[
                 FEPrivate`GenerateHelpViewerActionMenu[], StandardForm]], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHistory"]]], 
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {13, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIconHot.png"]]], False -> DynamicBox[
                    FEPrivate`ImportImage[
                    
                    FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "HomeIcon.png"]]]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]]], ButtonFunction :> 
                Documentation`HelpLookup[
                  CurrentValue[HomePage], 
                  FrontEnd`ButtonNotebook[], 
                  CurrentValue[Language]], Appearance -> None, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               DynamicBox[
                FEPrivate`FrontEndResource[
                "HelpToolbarText", "TooltipHome"]]]}, "RowDefault"], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {39, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            FrameBox[
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEExpressions", "HelpViewerSearchField"]], 
              InputFieldBoxOptions -> {
               ImageSize -> 
                Dynamic[AbsoluteCurrentValue[{WindowSize, 1}] - 220], 
                FrameMargins -> 
                FEPrivate`Switch[
                 FEPrivate`$OperatingSystem, "MacOSX", {{3, 3}, {0, -1}}, 
                  "Windows", {{0, 2}, {0, 2}}, 
                  Blank[], {{2, 2}, {0, 0}}]}], FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {4, 0}}], 
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {12, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{True -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIconHot.png"]]], False -> DynamicBox[
                  FEPrivate`ImportImage[
                   
                   FrontEnd`FileName[{"Toolbars", "DocCenter"}, 
                    "RevertIcon.png"]]]}, 
               Dynamic[
                CurrentValue["MouseOver"]]], ButtonFunction :> FrontEndToken[
                FrontEnd`ButtonNotebook[], "Revert", False], Evaluator -> 
              None, Appearance -> None, Method -> "Preemptive"], 
             DynamicBox[
              FEPrivate`FrontEndResource[
              "HelpToolbarText", "TooltipRefresh"]]]}, "RowDefault"], 
          CacheGraphics -> False, 
          ButtonBoxOptions -> {BaselinePosition -> (Baseline -> Baseline)}], 
         Alignment -> {Left, Center}, Appearance -> Image[CompressedData["
1:eJztyDkKAkEUhOFGE0OvIHgIU0PTEQ8ww7SDSQs9gnhXl3HBfbmC7Q0qeWDw
f1CPqtcr5tm05ZyrO+lk+XIYY74ad9OYhHpWBV+OwsJXPg6Kdnr2U8qUX/8A
AAAA+HtvyF6AgSdg4AHZHbIbYOAKGLhAdobsBBg4QnaAbA9ZAxjYAQa2gIEN
ZGvIvp8pRMU=
           "], "Byte", ColorSpace -> "RGB", Interleaving -> 
           True], ImageSize -> {
           Scaled[1], Full}]], "DockedCell", CellFrame -> 0, 
       CellMargins -> {{0, -10}, {-2, -1}}, 
       CellFrameMargins -> {{0, 0}, {0, 0}}, ShowCodeAssist -> False, 
       Background -> None], 
      Cell[
      "", CellSize -> {1, 1}, CellOpen -> False, 
       CellFrame -> {{0, 0}, {2, 0}}, CellFrameColor -> 
       Hue[0.38, 0.64, 0.6]]}], 
   Cell[
    StyleData["DockedCell"], CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> 
    Hue[0.38, 0.64, 0.6]]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 27, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[588, 21, 5439, 132, 70, "AnchorBarGrid", "ExpressionUUID" -> \
"d858357f-e4b7-4c65-aaa0-718d050c1619",
 CellID->1],
Cell[6030, 155, 105, 1, 70, "ObjectName", "ExpressionUUID" -> \
"643689fb-fda8-4687-8dc5-fe4b84840854",
 CellID->2],
Cell[6138, 158, 772, 18, 70, "Usage", "ExpressionUUID" -> \
"59a95067-6cc3-4d17-bd69-e2187994d80e",
 CellID->3],
Cell[CellGroupData[{
Cell[6935, 180, 1523, 36, 70, "NotesSection", "ExpressionUUID" -> \
"90a66827-33c0-4ebc-8405-b4aaaafb8a90",
 CellID->4],
Cell[8461, 218, 408, 10, 70, "Notes", "ExpressionUUID" -> \
"834816e6-4f21-467b-bdef-3a0c49895dcb",
 CellID->5],
Cell[8872, 230, 356, 10, 70, "Notes", "ExpressionUUID" -> \
"88afae21-1a01-49af-a672-f120d97c4fd2",
 CellID->6],
Cell[9231, 242, 369, 9, 70, "Notes", "ExpressionUUID" -> \
"370e270e-a5d5-41ad-9d4e-b1ac91a84ff9",
 CellID->7],
Cell[9603, 253, 19033, 330, 70, "NotesThumbnails", "ExpressionUUID" -> \
"42cdd2cf-434c-44e5-a57f-d30b2ad78491",
 CellOpen->FEPrivate`If[
   FEPrivate`Less[FEPrivate`$VersionNumber, 11.1], False, 
   FEPrivate`Not[
    FEPrivate`Or[
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], Open], 
     FEPrivate`SameQ[
      FrontEnd`CurrentValue[
       FrontEnd`EvaluationNotebook[], {
       TaggingRules, "Openers", "NotesSection"}], True]]]],
 CellID->8]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[28741, 587, 92, 1, 70, "PageDelimiter", "ExpressionUUID" -> \
"4a90fe16-464f-44dd-9b1e-17ae5b4b0870",
 CellID->9],
Cell[CellGroupData[{
Cell[28858, 592, 1474, 35, 70, "PrimaryExamplesSection", "ExpressionUUID" -> \
"e8941fc9-bd11-43b8-8686-6e17fac6427f",
 CellID->10],
Cell[CellGroupData[{
Cell[30357, 631, 1466, 35, 70, "ExampleSection", "ExpressionUUID" -> \
"8afbdd60-1936-43ab-9c49-8f53f822ca1f",
 CellID->11],
Cell[31826, 668, 110, 1, 70, "ExampleText", "ExpressionUUID" -> \
"8c9e25e3-0da4-47ac-acea-06a92d231bb5",
 CellID->12],
Cell[31939, 671, 133, 2, 70, "Input", "ExpressionUUID" -> \
"699fcf8d-1aa5-46f0-81b7-34c4980e131a",
 CellID->13],
Cell[32075, 675, 162, 2, 70, "Output", "ExpressionUUID" -> \
"41e012ce-1205-467b-bbf2-fb5838c791ce",
 CellID->14]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],
Cell[CellGroupData[{
Cell[32489, 687, 102, 1, 70, "SeeAlsoSection", "ExpressionUUID" -> \
"1eeb8cd9-9d5d-42a0-a97d-697678cdc23e",
 CellID->15],
Cell[32594, 690, 2407, 59, 70, "SeeAlso", "ExpressionUUID" -> \
"7b65cf38-eb43-4781-82e4-1c0778b13477",
 CellID->16]
}, Open  ]],
Cell[CellGroupData[{
Cell[35038, 754, 110, 1, 70, "MoreAboutSection", "ExpressionUUID" -> \
"d4e24142-156f-4442-90ad-ba1d00f4ae9d",
 CellID->17],
Cell[35151, 757, 527, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"590a9597-4913-4346-941d-08b08f192443",
 CellID->18],
Cell[35681, 771, 544, 12, 70, "MoreAbout", "ExpressionUUID" -> \
"4766bce7-7460-4d0c-b015-42de52a45a3f",
 CellID->19]
}, Open  ]],
Cell[36240, 786, 116, 1, 70, "History", "ExpressionUUID" -> \
"2277c456-650b-47c2-b399-d3580c6823bc",
 CellID->20],
Cell[36359, 789, 91, 1, 70, "FooterCell", "ExpressionUUID" -> \
"0ad039fd-df85-4d2f-9313-63cc5be3d72c",
 CellID->21]
}
]
*)

(* End of internal cache information *)
